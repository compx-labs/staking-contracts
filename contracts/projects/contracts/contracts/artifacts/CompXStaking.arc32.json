{
  "hints": {
    "createApplication(uint64,uint64,uint64,uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CREATE"
      }
    },
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "optInToAsset(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "updateParams(uint64,uint64,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "addRewards(axfer,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "stake(axfer,uint64,uint64)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "unstake()void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "deleteApplication()void": {
      "call_config": {
        "delete_application": "CALL"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "staked": {
          "type": "uint64",
          "key": "staked"
        },
        "unlockTime": {
          "type": "uint64",
          "key": "unlockTime"
        },
        "stakeStartTime": {
          "type": "uint64",
          "key": "stakeStartTime"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {
        "stakedAssetId": {
          "type": "uint64",
          "key": "stakedAssetId"
        },
        "rewardAssetId": {
          "type": "uint64",
          "key": "rewardAssetId"
        },
        "minLockUp": {
          "type": "uint64",
          "key": "minLockUp"
        },
        "maxLockUp": {
          "type": "uint64",
          "key": "maxLockUp"
        },
        "totalStaked": {
          "type": "uint64",
          "key": "totalStaked"
        },
        "totalRewards": {
          "type": "uint64",
          "key": "totalRewards"
        },
        "oracleAppID": {
          "type": "uint64",
          "key": "oracleAppID"
        },
        "contractDuration": {
          "type": "uint64",
          "key": "contractDuration"
        }
      },
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 8
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 3
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "CompXStaking",
    "desc": "",
    "methods": [
      {
        "name": "createApplication",
        "args": [
          {
            "name": "stakedAsset",
            "type": "uint64"
          },
          {
            "name": "rewardAsset",
            "type": "uint64"
          },
          {
            "name": "minLockUp",
            "type": "uint64"
          },
          {
            "name": "maxLockUp",
            "type": "uint64"
          },
          {
            "name": "contractDuration",
            "type": "uint64"
          },
          {
            "name": "oracleAppID",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optInToApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "optInToAsset",
        "args": [
          {
            "name": "mbrTxn",
            "type": "pay"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "updateParams",
        "args": [
          {
            "name": "minLockUp",
            "type": "uint64"
          },
          {
            "name": "maxLockUp",
            "type": "uint64"
          },
          {
            "name": "oracleAppID",
            "type": "uint64"
          },
          {
            "name": "contractDuration",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "addRewards",
        "args": [
          {
            "name": "rewardTxn",
            "type": "axfer"
          },
          {
            "name": "quantity",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "stake",
        "args": [
          {
            "name": "stakeTxn",
            "type": "axfer"
          },
          {
            "name": "quantity",
            "type": "uint64"
          },
          {
            "name": "lockPeriod",
            "type": "uint64"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "unstake",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "deleteApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}