/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"InjectedRewardsPool","desc":"","methods":[{"name":"createApplication","args":[{"name":"adminAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"initApplication","desc":"Initializes the staking pool application with the specified staked asset and reward asset.\n\n\nSets up global state variables, verifies the initial funding payment, and opts the contract into the staked asset\nand reward asset if necesary.\nOnly the admin address can call this function.","args":[{"name":"stakedAssetId","type":"uint64","desc":"The asset ID of the token to be staked in the pool."},{"name":"rewardAssetId","type":"uint64","desc":"The asset ID of the token to be distributed as rewards."},{"name":"initialBalanceTxn","type":"pay","desc":"The payment transaction providing the initial minimum balance for the contract."}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateAdminAddress","args":[{"name":"adminAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getMBRForPoolCreation","args":[],"returns":{"type":"(uint64)","struct":"mbrReturn"},"actions":{"create":[],"call":["NoOp"]}},{"name":"initStorage","args":[{"name":"mbrPayment","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"injectRewards","args":[{"name":"rewardTxn","type":"axfer"},{"name":"quantity","type":"uint64"},{"name":"rewardAssetId","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}},{"name":"stake","args":[{"name":"stakeTxn","type":"axfer"},{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"accrueRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"claimRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"unstake","args":[{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gas","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{"mbrReturn":[{"name":"mbrPayment","type":"uint64"}]},"state":{"schema":{"global":{"bytes":1,"ints":9},"local":{"bytes":0,"ints":0}},"keys":{"global":{"stakedAssetId":{"key":"c3Rha2VkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"rewardAssetId":{"key":"cmV3YXJkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"totalStaked":{"key":"dG90YWxTdGFrZWQ=","keyType":"AVMBytes","valueType":"uint64"},"injectedASARewards":{"key":"aW5qZWN0ZWRBU0FSZXdhcmRz","keyType":"AVMBytes","valueType":"uint64"},"lastRewardInjectionTime":{"key":"bGFzdFJld2FyZEluamVjdGlvblRpbWU=","keyType":"AVMBytes","valueType":"uint64"},"lastAccrualTime":{"key":"bGFzdEFjY3J1YWxUaW1l","keyType":"AVMBytes","valueType":"uint64"},"adminAddress":{"key":"YWRtaW5BZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"minimumBalance":{"key":"bWluaW11bUJhbGFuY2U=","keyType":"AVMBytes","valueType":"uint64"},"numStakers":{"key":"bnVtU3Rha2Vycw==","keyType":"AVMBytes","valueType":"uint64"},"contractVersion":{"key":"Y29udHJhY3RWZXJzaW9u","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{"stakers":{"key":"c3Rha2Vycw==","keyType":"AVMBytes","valueType":"(address,uint64,uint64,uint64)[500]"}}},"maps":{"global":{},"local":{},"box":{}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[0]},{"teal":2,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]},{"teal":3,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160]},{"teal":15,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[161,162]},{"teal":16,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[163]},{"teal":17,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[164]},{"teal":18,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[165]},{"teal":19,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[166,167]},{"teal":20,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[168]},{"teal":21,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194]},{"teal":25,"source":"contracts/InjectedRewardsPool.algo.ts:24","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[195]},{"teal":30,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[196,197,198]},{"teal":31,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[199]},{"teal":32,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[200]},{"teal":33,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[201,202]},{"teal":34,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[203]},{"teal":37,"source":"contracts/InjectedRewardsPool.algo.ts:51","errorMessage":"argument 0 (adminAddress) for createApplication must be a address","pc":[204]},{"teal":40,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[205,206,207]},{"teal":41,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[208]},{"teal":42,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[209]},{"teal":46,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[210,211,212]},{"teal":50,"source":"contracts/InjectedRewardsPool.algo.ts:52","pc":[213,214]},{"teal":51,"source":"contracts/InjectedRewardsPool.algo.ts:52","pc":[215,216]},{"teal":52,"source":"contracts/InjectedRewardsPool.algo.ts:52","pc":[217]},{"teal":56,"source":"contracts/InjectedRewardsPool.algo.ts:53","pc":[218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234]},{"teal":57,"source":"contracts/InjectedRewardsPool.algo.ts:53","pc":[235,236,237]},{"teal":58,"source":"contracts/InjectedRewardsPool.algo.ts:53","pc":[238]},{"teal":59,"source":"contracts/InjectedRewardsPool.algo.ts:51","pc":[239]},{"teal":64,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[240,241]},{"teal":65,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[242]},{"teal":66,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[243]},{"teal":67,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[244]},{"teal":68,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[245,246]},{"teal":69,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[247]},{"teal":70,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[248]},{"teal":73,"source":"contracts/InjectedRewardsPool.algo.ts:70","errorMessage":"argument 0 (initialBalanceTxn) for initApplication must be a pay transaction","pc":[249]},{"teal":76,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[250,251,252]},{"teal":77,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[253]},{"teal":80,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[254,255,256]},{"teal":81,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[257]},{"teal":84,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[258,259,260]},{"teal":85,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[261]},{"teal":86,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[262]},{"teal":100,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[263,264,265]},{"teal":104,"source":"contracts/InjectedRewardsPool.algo.ts:71","pc":[266,267]},{"teal":105,"source":"contracts/InjectedRewardsPool.algo.ts:71","pc":[268,269]},{"teal":106,"source":"contracts/InjectedRewardsPool.algo.ts:71","pc":[270]},{"teal":107,"source":"contracts/InjectedRewardsPool.algo.ts:71","pc":[271]},{"teal":110,"source":"contracts/InjectedRewardsPool.algo.ts:71","errorMessage":"Only admin can init application","pc":[272]},{"teal":114,"source":"contracts/InjectedRewardsPool.algo.ts:73","pc":[273,274]},{"teal":115,"source":"contracts/InjectedRewardsPool.algo.ts:73","pc":[275,276]},{"teal":116,"source":"contracts/InjectedRewardsPool.algo.ts:73","pc":[277]},{"teal":120,"source":"contracts/InjectedRewardsPool.algo.ts:74","pc":[278,279]},{"teal":121,"source":"contracts/InjectedRewardsPool.algo.ts:74","pc":[280,281]},{"teal":122,"source":"contracts/InjectedRewardsPool.algo.ts:74","pc":[282]},{"teal":126,"source":"contracts/InjectedRewardsPool.algo.ts:75","pc":[283]},{"teal":127,"source":"contracts/InjectedRewardsPool.algo.ts:75","pc":[284]},{"teal":128,"source":"contracts/InjectedRewardsPool.algo.ts:75","pc":[285]},{"teal":132,"source":"contracts/InjectedRewardsPool.algo.ts:76","pc":[286,287]},{"teal":133,"source":"contracts/InjectedRewardsPool.algo.ts:76","pc":[288]},{"teal":134,"source":"contracts/InjectedRewardsPool.algo.ts:76","pc":[289]},{"teal":138,"source":"contracts/InjectedRewardsPool.algo.ts:77","pc":[290,291]},{"teal":139,"source":"contracts/InjectedRewardsPool.algo.ts:77","pc":[292]},{"teal":140,"source":"contracts/InjectedRewardsPool.algo.ts:77","pc":[293]},{"teal":144,"source":"contracts/InjectedRewardsPool.algo.ts:78","pc":[294,295]},{"teal":145,"source":"contracts/InjectedRewardsPool.algo.ts:78","pc":[296]},{"teal":146,"source":"contracts/InjectedRewardsPool.algo.ts:78","pc":[297]},{"teal":154,"source":"contracts/InjectedRewardsPool.algo.ts:80","pc":[298,299]},{"teal":155,"source":"contracts/InjectedRewardsPool.algo.ts:81","pc":[300,301]},{"teal":156,"source":"contracts/InjectedRewardsPool.algo.ts:81","pc":[302,303]},{"teal":157,"source":"contracts/InjectedRewardsPool.algo.ts:81","pc":[304]},{"teal":160,"source":"contracts/InjectedRewardsPool.algo.ts:81","errorMessage":"transaction verification failed: {\"txn\":\"initialBalanceTxn\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[305]},{"teal":163,"source":"contracts/InjectedRewardsPool.algo.ts:80","pc":[306,307]},{"teal":164,"source":"contracts/InjectedRewardsPool.algo.ts:82","pc":[308,309]},{"teal":165,"source":"contracts/InjectedRewardsPool.algo.ts:82","pc":[310,311,312,313]},{"teal":166,"source":"contracts/InjectedRewardsPool.algo.ts:82","pc":[314]},{"teal":169,"source":"contracts/InjectedRewardsPool.algo.ts:82","errorMessage":"transaction verification failed: {\"txn\":\"initialBalanceTxn\",\"field\":\"amount\",\"expected\":\"INITIAL_PAY_AMOUNT\"}","pc":[315]},{"teal":177,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[316]},{"teal":178,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[317,318]},{"teal":179,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[319,320]},{"teal":183,"source":"contracts/InjectedRewardsPool.algo.ts:86","pc":[321,322]},{"teal":184,"source":"contracts/InjectedRewardsPool.algo.ts:86","pc":[323,324]},{"teal":188,"source":"contracts/InjectedRewardsPool.algo.ts:87","pc":[325,326]},{"teal":189,"source":"contracts/InjectedRewardsPool.algo.ts:87","pc":[327,328]},{"teal":193,"source":"contracts/InjectedRewardsPool.algo.ts:88","pc":[329]},{"teal":194,"source":"contracts/InjectedRewardsPool.algo.ts:88","pc":[330,331]},{"teal":197,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[332]},{"teal":198,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[333,334]},{"teal":201,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[335]},{"teal":206,"source":"contracts/InjectedRewardsPool.algo.ts:90","pc":[336,337]},{"teal":207,"source":"contracts/InjectedRewardsPool.algo.ts:90","pc":[338,339]},{"teal":208,"source":"contracts/InjectedRewardsPool.algo.ts:90","pc":[340]},{"teal":209,"source":"contracts/InjectedRewardsPool.algo.ts:90","pc":[341,342,343]},{"teal":218,"source":"contracts/InjectedRewardsPool.algo.ts:91","pc":[344]},{"teal":219,"source":"contracts/InjectedRewardsPool.algo.ts:91","pc":[345,346]},{"teal":220,"source":"contracts/InjectedRewardsPool.algo.ts:91","pc":[347,348]},{"teal":224,"source":"contracts/InjectedRewardsPool.algo.ts:92","pc":[349,350]},{"teal":225,"source":"contracts/InjectedRewardsPool.algo.ts:92","pc":[351,352]},{"teal":229,"source":"contracts/InjectedRewardsPool.algo.ts:93","pc":[353,354]},{"teal":230,"source":"contracts/InjectedRewardsPool.algo.ts:93","pc":[355,356]},{"teal":234,"source":"contracts/InjectedRewardsPool.algo.ts:94","pc":[357]},{"teal":235,"source":"contracts/InjectedRewardsPool.algo.ts:94","pc":[358,359]},{"teal":238,"source":"contracts/InjectedRewardsPool.algo.ts:91","pc":[360]},{"teal":239,"source":"contracts/InjectedRewardsPool.algo.ts:91","pc":[361,362]},{"teal":242,"source":"contracts/InjectedRewardsPool.algo.ts:91","pc":[363]},{"teal":245,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[364]},{"teal":250,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[365,366,367]},{"teal":251,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[368]},{"teal":252,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[369]},{"teal":253,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[370,371]},{"teal":254,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[372]},{"teal":257,"source":"contracts/InjectedRewardsPool.algo.ts:100","errorMessage":"argument 0 (adminAddress) for updateAdminAddress must be a address","pc":[373]},{"teal":260,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[374,375,376]},{"teal":261,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[377]},{"teal":262,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[378]},{"teal":266,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[379,380,381]},{"teal":270,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[382,383]},{"teal":271,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[384,385]},{"teal":272,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[386]},{"teal":273,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[387]},{"teal":276,"source":"contracts/InjectedRewardsPool.algo.ts:101","errorMessage":"Only admin can update admin address","pc":[388]},{"teal":280,"source":"contracts/InjectedRewardsPool.algo.ts:102","pc":[389,390]},{"teal":281,"source":"contracts/InjectedRewardsPool.algo.ts:102","pc":[391,392]},{"teal":282,"source":"contracts/InjectedRewardsPool.algo.ts:102","pc":[393]},{"teal":283,"source":"contracts/InjectedRewardsPool.algo.ts:100","pc":[394]},{"teal":287,"source":"contracts/InjectedRewardsPool.algo.ts:105","pc":[395,396,397]},{"teal":291,"source":"contracts/InjectedRewardsPool.algo.ts:109","pc":[398,399,400]},{"teal":292,"source":"contracts/InjectedRewardsPool.algo.ts:109","pc":[401,402]},{"teal":293,"source":"contracts/InjectedRewardsPool.algo.ts:109","pc":[403,404,405]},{"teal":294,"source":"contracts/InjectedRewardsPool.algo.ts:109","pc":[406]},{"teal":295,"source":"contracts/InjectedRewardsPool.algo.ts:109","pc":[407]},{"teal":296,"source":"contracts/InjectedRewardsPool.algo.ts:105","pc":[408]},{"teal":301,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[409,410,411,412,413,414]},{"teal":304,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[415,416,417]},{"teal":305,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[418]},{"teal":306,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[419]},{"teal":307,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[420]},{"teal":308,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[421]},{"teal":312,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[422,423,424]},{"teal":315,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[425]},{"teal":316,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[426]},{"teal":320,"source":"contracts/InjectedRewardsPool.algo.ts:113","pc":[427]},{"teal":321,"source":"contracts/InjectedRewardsPool.algo.ts:113","pc":[428,429]},{"teal":326,"source":"contracts/InjectedRewardsPool.algo.ts:114","pc":[430,431]},{"teal":327,"source":"contracts/InjectedRewardsPool.algo.ts:114","pc":[432]},{"teal":328,"source":"contracts/InjectedRewardsPool.algo.ts:114","pc":[433]},{"teal":329,"source":"contracts/InjectedRewardsPool.algo.ts:114","pc":[434]},{"teal":330,"source":"contracts/InjectedRewardsPool.algo.ts:114","pc":[435,436,437]},{"teal":335,"source":"contracts/InjectedRewardsPool.algo.ts:115","pc":[438,439]},{"teal":336,"source":"contracts/InjectedRewardsPool.algo.ts:115","pc":[440,441]},{"teal":337,"source":"contracts/InjectedRewardsPool.algo.ts:115","pc":[442]},{"teal":338,"source":"contracts/InjectedRewardsPool.algo.ts:115","pc":[443,444]},{"teal":347,"source":"contracts/InjectedRewardsPool.algo.ts:118","pc":[445,446]},{"teal":348,"source":"contracts/InjectedRewardsPool.algo.ts:119","pc":[447,448]},{"teal":349,"source":"contracts/InjectedRewardsPool.algo.ts:118","pc":[449]},{"teal":350,"source":"contracts/InjectedRewardsPool.algo.ts:120","pc":[450,451]},{"teal":351,"source":"contracts/InjectedRewardsPool.algo.ts:120","pc":[452,453,454]},{"teal":352,"source":"contracts/InjectedRewardsPool.algo.ts:119","pc":[455]},{"teal":353,"source":"contracts/InjectedRewardsPool.algo.ts:121","pc":[456,457]},{"teal":354,"source":"contracts/InjectedRewardsPool.algo.ts:121","pc":[458,459,460]},{"teal":355,"source":"contracts/InjectedRewardsPool.algo.ts:120","pc":[461]},{"teal":356,"source":"contracts/InjectedRewardsPool.algo.ts:117","pc":[462,463]},{"teal":362,"source":"contracts/InjectedRewardsPool.algo.ts:124","pc":[464,465]},{"teal":363,"source":"contracts/InjectedRewardsPool.algo.ts:124","pc":[466]},{"teal":366,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[467,468]},{"teal":369,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[469,470]},{"teal":370,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[471]},{"teal":375,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[472,473]},{"teal":376,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[474]},{"teal":377,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[475]},{"teal":378,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[476]},{"teal":379,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[477,478]},{"teal":380,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[479]},{"teal":381,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[480]},{"teal":384,"source":"contracts/InjectedRewardsPool.algo.ts:128","errorMessage":"argument 0 (mbrPayment) for initStorage must be a pay transaction","pc":[481]},{"teal":387,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[482,483,484]},{"teal":388,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[485]},{"teal":389,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[486]},{"teal":393,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[487,488,489]},{"teal":396,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[490]},{"teal":397,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[491]},{"teal":401,"source":"contracts/InjectedRewardsPool.algo.ts:129","pc":[492]},{"teal":402,"source":"contracts/InjectedRewardsPool.algo.ts:129","pc":[493]},{"teal":403,"source":"contracts/InjectedRewardsPool.algo.ts:129","pc":[494]},{"teal":404,"source":"contracts/InjectedRewardsPool.algo.ts:129","pc":[495]},{"teal":405,"source":"contracts/InjectedRewardsPool.algo.ts:129","pc":[496]},{"teal":408,"source":"contracts/InjectedRewardsPool.algo.ts:129","errorMessage":"staking pool already initialized","pc":[497]},{"teal":412,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[498,499]},{"teal":413,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[500,501]},{"teal":414,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[502]},{"teal":415,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[503]},{"teal":418,"source":"contracts/InjectedRewardsPool.algo.ts:130","errorMessage":"Only admin can init storage","pc":[504]},{"teal":422,"source":"contracts/InjectedRewardsPool.algo.ts:132","pc":[505]},{"teal":423,"source":"contracts/InjectedRewardsPool.algo.ts:132","pc":[506,507]},{"teal":428,"source":"contracts/InjectedRewardsPool.algo.ts:133","pc":[508,509]},{"teal":429,"source":"contracts/InjectedRewardsPool.algo.ts:133","pc":[510]},{"teal":430,"source":"contracts/InjectedRewardsPool.algo.ts:133","pc":[511]},{"teal":431,"source":"contracts/InjectedRewardsPool.algo.ts:133","pc":[512]},{"teal":432,"source":"contracts/InjectedRewardsPool.algo.ts:133","pc":[513,514,515]},{"teal":437,"source":"contracts/InjectedRewardsPool.algo.ts:134","pc":[516,517]},{"teal":438,"source":"contracts/InjectedRewardsPool.algo.ts:134","pc":[518,519]},{"teal":439,"source":"contracts/InjectedRewardsPool.algo.ts:134","pc":[520]},{"teal":440,"source":"contracts/InjectedRewardsPool.algo.ts:134","pc":[521,522]},{"teal":449,"source":"contracts/InjectedRewardsPool.algo.ts:137","pc":[523,524]},{"teal":450,"source":"contracts/InjectedRewardsPool.algo.ts:138","pc":[525,526]},{"teal":451,"source":"contracts/InjectedRewardsPool.algo.ts:137","pc":[527]},{"teal":452,"source":"contracts/InjectedRewardsPool.algo.ts:139","pc":[528,529]},{"teal":453,"source":"contracts/InjectedRewardsPool.algo.ts:139","pc":[530,531,532]},{"teal":454,"source":"contracts/InjectedRewardsPool.algo.ts:138","pc":[533]},{"teal":455,"source":"contracts/InjectedRewardsPool.algo.ts:140","pc":[534,535]},{"teal":456,"source":"contracts/InjectedRewardsPool.algo.ts:140","pc":[536,537,538]},{"teal":457,"source":"contracts/InjectedRewardsPool.algo.ts:139","pc":[539]},{"teal":458,"source":"contracts/InjectedRewardsPool.algo.ts:136","pc":[540,541]},{"teal":463,"source":"contracts/InjectedRewardsPool.algo.ts:143","pc":[542,543]},{"teal":464,"source":"contracts/InjectedRewardsPool.algo.ts:143","pc":[544,545]},{"teal":465,"source":"contracts/InjectedRewardsPool.algo.ts:143","pc":[546,547]},{"teal":466,"source":"contracts/InjectedRewardsPool.algo.ts:143","pc":[548]},{"teal":469,"source":"contracts/InjectedRewardsPool.algo.ts:143","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[549]},{"teal":472,"source":"contracts/InjectedRewardsPool.algo.ts:143","pc":[550,551]},{"teal":473,"source":"contracts/InjectedRewardsPool.algo.ts:143","pc":[552,553]},{"teal":474,"source":"contracts/InjectedRewardsPool.algo.ts:143","pc":[554,555]},{"teal":475,"source":"contracts/InjectedRewardsPool.algo.ts:143","pc":[556]},{"teal":478,"source":"contracts/InjectedRewardsPool.algo.ts:143","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"amount\",\"expected\":\"poolMBR\"}","pc":[557]},{"teal":482,"source":"contracts/InjectedRewardsPool.algo.ts:144","pc":[558]},{"teal":483,"source":"contracts/InjectedRewardsPool.algo.ts:144","pc":[559,560,561,562]},{"teal":484,"source":"contracts/InjectedRewardsPool.algo.ts:144","pc":[563]},{"teal":485,"source":"contracts/InjectedRewardsPool.algo.ts:144","pc":[564]},{"teal":489,"source":"contracts/InjectedRewardsPool.algo.ts:145","pc":[565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580]},{"teal":490,"source":"contracts/InjectedRewardsPool.algo.ts:145","pc":[581,582]},{"teal":491,"source":"contracts/InjectedRewardsPool.algo.ts:145","pc":[583]},{"teal":496,"source":"contracts/InjectedRewardsPool.algo.ts:147","pc":[584,585]},{"teal":497,"source":"contracts/InjectedRewardsPool.algo.ts:147","pc":[586]},{"teal":498,"source":"contracts/InjectedRewardsPool.algo.ts:147","pc":[587]},{"teal":499,"source":"contracts/InjectedRewardsPool.algo.ts:147","pc":[588,589,590]},{"teal":508,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[591]},{"teal":509,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[592,593]},{"teal":510,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[594,595]},{"teal":514,"source":"contracts/InjectedRewardsPool.algo.ts:150","pc":[596,597]},{"teal":515,"source":"contracts/InjectedRewardsPool.algo.ts:150","pc":[598]},{"teal":516,"source":"contracts/InjectedRewardsPool.algo.ts:150","pc":[599,600]},{"teal":520,"source":"contracts/InjectedRewardsPool.algo.ts:151","pc":[601,602]},{"teal":521,"source":"contracts/InjectedRewardsPool.algo.ts:151","pc":[603,604]},{"teal":525,"source":"contracts/InjectedRewardsPool.algo.ts:152","pc":[605]},{"teal":526,"source":"contracts/InjectedRewardsPool.algo.ts:152","pc":[606,607]},{"teal":529,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[608]},{"teal":530,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[609,610]},{"teal":533,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[611]},{"teal":536,"source":"contracts/InjectedRewardsPool.algo.ts:128","pc":[612]},{"teal":541,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[613,614,615]},{"teal":542,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[616]},{"teal":545,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[617,618,619]},{"teal":546,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[620]},{"teal":549,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[621,622]},{"teal":550,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[623]},{"teal":551,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[624]},{"teal":552,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[625]},{"teal":553,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[626,627]},{"teal":554,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[628,629]},{"teal":555,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[630]},{"teal":558,"source":"contracts/InjectedRewardsPool.algo.ts:159","errorMessage":"argument 2 (rewardTxn) for injectRewards must be a axfer transaction","pc":[631]},{"teal":561,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[632,633,634]},{"teal":562,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[635]},{"teal":563,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[636]},{"teal":567,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[637,638,639]},{"teal":571,"source":"contracts/InjectedRewardsPool.algo.ts:160","pc":[640,641]},{"teal":572,"source":"contracts/InjectedRewardsPool.algo.ts:160","pc":[642,643]},{"teal":573,"source":"contracts/InjectedRewardsPool.algo.ts:160","pc":[644]},{"teal":574,"source":"contracts/InjectedRewardsPool.algo.ts:160","pc":[645]},{"teal":577,"source":"contracts/InjectedRewardsPool.algo.ts:160","errorMessage":"Only admin can inject rewards","pc":[646]},{"teal":587,"source":"contracts/InjectedRewardsPool.algo.ts:162","pc":[647,648]},{"teal":588,"source":"contracts/InjectedRewardsPool.algo.ts:163","pc":[649,650]},{"teal":589,"source":"contracts/InjectedRewardsPool.algo.ts:163","pc":[651,652]},{"teal":590,"source":"contracts/InjectedRewardsPool.algo.ts:163","pc":[653]},{"teal":591,"source":"contracts/InjectedRewardsPool.algo.ts:163","pc":[654]},{"teal":594,"source":"contracts/InjectedRewardsPool.algo.ts:163","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"sender\",\"expected\":\"this.adminAddress.value\"}","pc":[655]},{"teal":597,"source":"contracts/InjectedRewardsPool.algo.ts:162","pc":[656,657]},{"teal":598,"source":"contracts/InjectedRewardsPool.algo.ts:164","pc":[658,659]},{"teal":599,"source":"contracts/InjectedRewardsPool.algo.ts:164","pc":[660,661]},{"teal":600,"source":"contracts/InjectedRewardsPool.algo.ts:164","pc":[662]},{"teal":603,"source":"contracts/InjectedRewardsPool.algo.ts:164","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[663]},{"teal":606,"source":"contracts/InjectedRewardsPool.algo.ts:162","pc":[664,665]},{"teal":607,"source":"contracts/InjectedRewardsPool.algo.ts:165","pc":[666,667]},{"teal":608,"source":"contracts/InjectedRewardsPool.algo.ts:165","pc":[668,669]},{"teal":609,"source":"contracts/InjectedRewardsPool.algo.ts:165","pc":[670]},{"teal":612,"source":"contracts/InjectedRewardsPool.algo.ts:165","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(rewardAssetId)\"}","pc":[671]},{"teal":615,"source":"contracts/InjectedRewardsPool.algo.ts:162","pc":[672,673]},{"teal":616,"source":"contracts/InjectedRewardsPool.algo.ts:166","pc":[674,675]},{"teal":617,"source":"contracts/InjectedRewardsPool.algo.ts:166","pc":[676,677]},{"teal":618,"source":"contracts/InjectedRewardsPool.algo.ts:166","pc":[678]},{"teal":621,"source":"contracts/InjectedRewardsPool.algo.ts:166","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[679]},{"teal":625,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[680,681]},{"teal":626,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[682]},{"teal":627,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[683,684]},{"teal":628,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[685]},{"teal":629,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[686,687]},{"teal":630,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[688]},{"teal":631,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[689]},{"teal":635,"source":"contracts/InjectedRewardsPool.algo.ts:169","pc":[690,691]},{"teal":636,"source":"contracts/InjectedRewardsPool.algo.ts:169","pc":[692,693]},{"teal":637,"source":"contracts/InjectedRewardsPool.algo.ts:169","pc":[694]},{"teal":638,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[695]},{"teal":643,"source":"contracts/InjectedRewardsPool.algo.ts:173","pc":[696,697,698]},{"teal":644,"source":"contracts/InjectedRewardsPool.algo.ts:173","pc":[699]},{"teal":645,"source":"contracts/InjectedRewardsPool.algo.ts:173","pc":[700]},{"teal":649,"source":"contracts/InjectedRewardsPool.algo.ts:173","pc":[701,702,703]},{"teal":653,"source":"contracts/InjectedRewardsPool.algo.ts:174","pc":[704,705]},{"teal":654,"source":"contracts/InjectedRewardsPool.algo.ts:174","pc":[706,707]},{"teal":655,"source":"contracts/InjectedRewardsPool.algo.ts:174","pc":[708]},{"teal":656,"source":"contracts/InjectedRewardsPool.algo.ts:174","pc":[709]},{"teal":659,"source":"contracts/InjectedRewardsPool.algo.ts:174","errorMessage":"Only admin can delete application","pc":[710]},{"teal":663,"source":"contracts/InjectedRewardsPool.algo.ts:175","pc":[711]},{"teal":664,"source":"contracts/InjectedRewardsPool.algo.ts:175","pc":[712]},{"teal":665,"source":"contracts/InjectedRewardsPool.algo.ts:175","pc":[713]},{"teal":666,"source":"contracts/InjectedRewardsPool.algo.ts:175","pc":[714]},{"teal":669,"source":"contracts/InjectedRewardsPool.algo.ts:175","errorMessage":"Staked assets still exist","pc":[715]},{"teal":678,"source":"contracts/InjectedRewardsPool.algo.ts:178","pc":[716]},{"teal":679,"source":"contracts/InjectedRewardsPool.algo.ts:178","pc":[717,718]},{"teal":680,"source":"contracts/InjectedRewardsPool.algo.ts:178","pc":[719,720]},{"teal":684,"source":"contracts/InjectedRewardsPool.algo.ts:179","pc":[721,722]},{"teal":685,"source":"contracts/InjectedRewardsPool.algo.ts:179","pc":[723]},{"teal":686,"source":"contracts/InjectedRewardsPool.algo.ts:179","pc":[724,725]},{"teal":690,"source":"contracts/InjectedRewardsPool.algo.ts:180","pc":[726,727]},{"teal":691,"source":"contracts/InjectedRewardsPool.algo.ts:180","pc":[728,729]},{"teal":695,"source":"contracts/InjectedRewardsPool.algo.ts:181","pc":[730]},{"teal":696,"source":"contracts/InjectedRewardsPool.algo.ts:181","pc":[731,732]},{"teal":700,"source":"contracts/InjectedRewardsPool.algo.ts:182","pc":[733,734]},{"teal":701,"source":"contracts/InjectedRewardsPool.algo.ts:182","pc":[735,736]},{"teal":704,"source":"contracts/InjectedRewardsPool.algo.ts:178","pc":[737]},{"teal":705,"source":"contracts/InjectedRewardsPool.algo.ts:178","pc":[738,739]},{"teal":708,"source":"contracts/InjectedRewardsPool.algo.ts:178","pc":[740]},{"teal":713,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[741,742]},{"teal":714,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[743]},{"teal":715,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[744,745]},{"teal":716,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[746]},{"teal":717,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[747]},{"teal":718,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[748,749,750]},{"teal":728,"source":"contracts/InjectedRewardsPool.algo.ts:186","pc":[751]},{"teal":729,"source":"contracts/InjectedRewardsPool.algo.ts:186","pc":[752,753]},{"teal":730,"source":"contracts/InjectedRewardsPool.algo.ts:186","pc":[754,755]},{"teal":734,"source":"contracts/InjectedRewardsPool.algo.ts:187","pc":[756,757]},{"teal":735,"source":"contracts/InjectedRewardsPool.algo.ts:187","pc":[758]},{"teal":736,"source":"contracts/InjectedRewardsPool.algo.ts:187","pc":[759,760]},{"teal":740,"source":"contracts/InjectedRewardsPool.algo.ts:188","pc":[761,762]},{"teal":741,"source":"contracts/InjectedRewardsPool.algo.ts:188","pc":[763,764]},{"teal":745,"source":"contracts/InjectedRewardsPool.algo.ts:189","pc":[765]},{"teal":746,"source":"contracts/InjectedRewardsPool.algo.ts:189","pc":[766,767]},{"teal":750,"source":"contracts/InjectedRewardsPool.algo.ts:190","pc":[768,769]},{"teal":751,"source":"contracts/InjectedRewardsPool.algo.ts:190","pc":[770,771]},{"teal":754,"source":"contracts/InjectedRewardsPool.algo.ts:186","pc":[772]},{"teal":755,"source":"contracts/InjectedRewardsPool.algo.ts:186","pc":[773,774]},{"teal":758,"source":"contracts/InjectedRewardsPool.algo.ts:186","pc":[775]},{"teal":768,"source":"contracts/InjectedRewardsPool.algo.ts:194","pc":[776]},{"teal":769,"source":"contracts/InjectedRewardsPool.algo.ts:194","pc":[777]},{"teal":770,"source":"contracts/InjectedRewardsPool.algo.ts:194","pc":[778,779]},{"teal":774,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[780,781]},{"teal":775,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[782]},{"teal":776,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[783,784]},{"teal":777,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[785]},{"teal":778,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[786,787]},{"teal":779,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[788]},{"teal":780,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[789,790]},{"teal":784,"source":"contracts/InjectedRewardsPool.algo.ts:196","pc":[791,792]},{"teal":785,"source":"contracts/InjectedRewardsPool.algo.ts:196","pc":[793]},{"teal":786,"source":"contracts/InjectedRewardsPool.algo.ts:196","pc":[794,795]},{"teal":790,"source":"contracts/InjectedRewardsPool.algo.ts:197","pc":[796,797]},{"teal":791,"source":"contracts/InjectedRewardsPool.algo.ts:197","pc":[798,799]},{"teal":795,"source":"contracts/InjectedRewardsPool.algo.ts:22","pc":[800,801]},{"teal":796,"source":"contracts/InjectedRewardsPool.algo.ts:198","pc":[802,803]},{"teal":799,"source":"contracts/InjectedRewardsPool.algo.ts:194","pc":[804]},{"teal":800,"source":"contracts/InjectedRewardsPool.algo.ts:173","pc":[805]},{"teal":805,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[806,807,808]},{"teal":806,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[809]},{"teal":809,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[810,811]},{"teal":810,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[812]},{"teal":811,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[813]},{"teal":812,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[814]},{"teal":813,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[815,816]},{"teal":814,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[817,818]},{"teal":815,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[819]},{"teal":818,"source":"contracts/InjectedRewardsPool.algo.ts:202","errorMessage":"argument 1 (stakeTxn) for stake must be a axfer transaction","pc":[820]},{"teal":821,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[821,822,823]},{"teal":822,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[824]},{"teal":823,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[825]},{"teal":827,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[826,827,828]},{"teal":830,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[829]},{"teal":831,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[830,831]},{"teal":835,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[832,833]},{"teal":836,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[834,835]},{"teal":840,"source":"contracts/InjectedRewardsPool.algo.ts:204","pc":[836,837]},{"teal":841,"source":"contracts/InjectedRewardsPool.algo.ts:204","pc":[838]},{"teal":842,"source":"contracts/InjectedRewardsPool.algo.ts:204","pc":[839]},{"teal":845,"source":"contracts/InjectedRewardsPool.algo.ts:204","errorMessage":"Invalid quantity","pc":[840]},{"teal":850,"source":"contracts/InjectedRewardsPool.algo.ts:205","pc":[841,842]},{"teal":851,"source":"contracts/InjectedRewardsPool.algo.ts:205","pc":[843,844]},{"teal":852,"source":"contracts/InjectedRewardsPool.algo.ts:205","pc":[845]},{"teal":853,"source":"contracts/InjectedRewardsPool.algo.ts:205","pc":[846,847,848]},{"teal":858,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[849]},{"teal":859,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[850]},{"teal":860,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[851,852]},{"teal":861,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[853]},{"teal":862,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[854,855]},{"teal":863,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[856]},{"teal":864,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[857]},{"teal":865,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[858,859]},{"teal":866,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[860,861]},{"teal":867,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[862,863]},{"teal":868,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[864,865]},{"teal":869,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[866]},{"teal":880,"source":"contracts/InjectedRewardsPool.algo.ts:208","pc":[867,868]},{"teal":881,"source":"contracts/InjectedRewardsPool.algo.ts:209","pc":[869,870]},{"teal":882,"source":"contracts/InjectedRewardsPool.algo.ts:209","pc":[871,872]},{"teal":883,"source":"contracts/InjectedRewardsPool.algo.ts:209","pc":[873]},{"teal":886,"source":"contracts/InjectedRewardsPool.algo.ts:209","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}","pc":[874]},{"teal":889,"source":"contracts/InjectedRewardsPool.algo.ts:208","pc":[875,876]},{"teal":890,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[877,878]},{"teal":891,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[879,880]},{"teal":892,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[881]},{"teal":895,"source":"contracts/InjectedRewardsPool.algo.ts:210","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[882]},{"teal":898,"source":"contracts/InjectedRewardsPool.algo.ts:208","pc":[883,884]},{"teal":899,"source":"contracts/InjectedRewardsPool.algo.ts:211","pc":[885,886]},{"teal":900,"source":"contracts/InjectedRewardsPool.algo.ts:211","pc":[887,888]},{"teal":901,"source":"contracts/InjectedRewardsPool.algo.ts:211","pc":[889]},{"teal":902,"source":"contracts/InjectedRewardsPool.algo.ts:211","pc":[890]},{"teal":905,"source":"contracts/InjectedRewardsPool.algo.ts:211","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.stakedAssetId.value)\"}","pc":[891]},{"teal":908,"source":"contracts/InjectedRewardsPool.algo.ts:208","pc":[892,893]},{"teal":909,"source":"contracts/InjectedRewardsPool.algo.ts:212","pc":[894,895]},{"teal":910,"source":"contracts/InjectedRewardsPool.algo.ts:212","pc":[896,897]},{"teal":911,"source":"contracts/InjectedRewardsPool.algo.ts:212","pc":[898]},{"teal":914,"source":"contracts/InjectedRewardsPool.algo.ts:212","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[899]},{"teal":918,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[900]},{"teal":919,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[901,902]},{"teal":924,"source":"contracts/InjectedRewardsPool.algo.ts:215","pc":[903,904]},{"teal":925,"source":"contracts/InjectedRewardsPool.algo.ts:215","pc":[905,906]},{"teal":926,"source":"contracts/InjectedRewardsPool.algo.ts:215","pc":[907]},{"teal":927,"source":"contracts/InjectedRewardsPool.algo.ts:215","pc":[908,909,910]},{"teal":932,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[911]},{"teal":933,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[912]},{"teal":934,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[913,914]},{"teal":935,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[915]},{"teal":936,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[916,917]},{"teal":937,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[918]},{"teal":938,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[919]},{"teal":939,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[920,921]},{"teal":940,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[922,923]},{"teal":941,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[924,925]},{"teal":942,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[926,927]},{"teal":943,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[928]},{"teal":948,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[929]},{"teal":949,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[930,931]},{"teal":954,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[932,933]},{"teal":955,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[934,935,936]},{"teal":956,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[937]},{"teal":957,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[938,939,940]},{"teal":962,"source":"contracts/InjectedRewardsPool.algo.ts:219","pc":[941,942]},{"teal":963,"source":"contracts/InjectedRewardsPool.algo.ts:219","pc":[943,944,945]},{"teal":966,"source":"contracts/InjectedRewardsPool.algo.ts:219","pc":[946,947,948]},{"teal":972,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[949,950]},{"teal":973,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[951]},{"teal":974,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[952]},{"teal":975,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[953]},{"teal":976,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[954]},{"teal":977,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[955,956]},{"teal":978,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[957]},{"teal":979,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[958,959]},{"teal":980,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[960]},{"teal":981,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[961,962]},{"teal":982,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[963]},{"teal":983,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[964,965,966]},{"teal":989,"source":"contracts/InjectedRewardsPool.algo.ts:223","pc":[967,968]},{"teal":990,"source":"contracts/InjectedRewardsPool.algo.ts:223","pc":[969,970]},{"teal":991,"source":"contracts/InjectedRewardsPool.algo.ts:223","pc":[971]},{"teal":992,"source":"contracts/InjectedRewardsPool.algo.ts:223","pc":[972,973,974]},{"teal":997,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[975]},{"teal":998,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[976]},{"teal":999,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[977,978]},{"teal":1000,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[979]},{"teal":1001,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[980,981]},{"teal":1002,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[982]},{"teal":1003,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[983]},{"teal":1004,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[984,985]},{"teal":1005,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[986,987]},{"teal":1006,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[988,989]},{"teal":1007,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[990,991]},{"teal":1008,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[992]},{"teal":1013,"source":"contracts/InjectedRewardsPool.algo.ts:227","pc":[993,994]},{"teal":1014,"source":"contracts/InjectedRewardsPool.algo.ts:227","pc":[995]},{"teal":1015,"source":"contracts/InjectedRewardsPool.algo.ts:227","pc":[996]},{"teal":1016,"source":"contracts/InjectedRewardsPool.algo.ts:227","pc":[997]},{"teal":1017,"source":"contracts/InjectedRewardsPool.algo.ts:227","pc":[998]},{"teal":1018,"source":"contracts/InjectedRewardsPool.algo.ts:227","pc":[999,1000]},{"teal":1019,"source":"contracts/InjectedRewardsPool.algo.ts:227","pc":[1001]},{"teal":1020,"source":"contracts/InjectedRewardsPool.algo.ts:227","pc":[1002,1003]},{"teal":1024,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1004,1005]},{"teal":1025,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1006,1007]},{"teal":1026,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1008,1009]},{"teal":1027,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1010,1011,1012]},{"teal":1028,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1013]},{"teal":1029,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1014,1015]},{"teal":1030,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1016,1017]},{"teal":1031,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1018]},{"teal":1032,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1019]},{"teal":1033,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1020]},{"teal":1034,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1021,1022]},{"teal":1039,"source":"contracts/InjectedRewardsPool.algo.ts:230","pc":[1023,1024]},{"teal":1040,"source":"contracts/InjectedRewardsPool.algo.ts:230","pc":[1025,1026]},{"teal":1041,"source":"contracts/InjectedRewardsPool.algo.ts:230","pc":[1027]},{"teal":1042,"source":"contracts/InjectedRewardsPool.algo.ts:230","pc":[1028,1029,1030]},{"teal":1047,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1031]},{"teal":1048,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1032]},{"teal":1049,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1033,1034]},{"teal":1050,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1035]},{"teal":1051,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1036,1037]},{"teal":1052,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1038]},{"teal":1053,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1039]},{"teal":1054,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1040,1041]},{"teal":1055,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1042,1043]},{"teal":1056,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1044,1045]},{"teal":1057,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1046,1047]},{"teal":1058,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1048]},{"teal":1063,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1049,1050]},{"teal":1064,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1051]},{"teal":1065,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1052]},{"teal":1066,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1053,1054]},{"teal":1067,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1055]},{"teal":1068,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1056,1057]},{"teal":1069,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1058]},{"teal":1073,"source":"contracts/InjectedRewardsPool.algo.ts:234","pc":[1059]},{"teal":1074,"source":"contracts/InjectedRewardsPool.algo.ts:234","pc":[1060]},{"teal":1075,"source":"contracts/InjectedRewardsPool.algo.ts:234","pc":[1061,1062]},{"teal":1076,"source":"contracts/InjectedRewardsPool.algo.ts:234","pc":[1063,1064]},{"teal":1077,"source":"contracts/InjectedRewardsPool.algo.ts:234","pc":[1065]},{"teal":1078,"source":"contracts/InjectedRewardsPool.algo.ts:234","pc":[1066]},{"teal":1079,"source":"contracts/InjectedRewardsPool.algo.ts:234","pc":[1067]},{"teal":1080,"source":"contracts/InjectedRewardsPool.algo.ts:234","pc":[1068]},{"teal":1084,"source":"contracts/InjectedRewardsPool.algo.ts:235","pc":[1069]},{"teal":1085,"source":"contracts/InjectedRewardsPool.algo.ts:235","pc":[1070,1071]},{"teal":1086,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[1072,1073,1074]},{"teal":1091,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1075,1076]},{"teal":1092,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1077]},{"teal":1093,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1078]},{"teal":1094,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1079]},{"teal":1095,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1080]},{"teal":1096,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1081,1082]},{"teal":1097,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1083]},{"teal":1098,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1084,1085]},{"teal":1099,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1086]},{"teal":1100,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1087,1088]},{"teal":1101,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1089]},{"teal":1102,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1090,1091,1092]},{"teal":1108,"source":"contracts/InjectedRewardsPool.algo.ts:238","pc":[1093,1094]},{"teal":1109,"source":"contracts/InjectedRewardsPool.algo.ts:238","pc":[1095,1096]},{"teal":1110,"source":"contracts/InjectedRewardsPool.algo.ts:238","pc":[1097]},{"teal":1111,"source":"contracts/InjectedRewardsPool.algo.ts:238","pc":[1098,1099,1100]},{"teal":1116,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1101]},{"teal":1117,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1102]},{"teal":1118,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1103,1104]},{"teal":1119,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1105]},{"teal":1120,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1106,1107]},{"teal":1121,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1108]},{"teal":1122,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1109]},{"teal":1123,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1110,1111]},{"teal":1124,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1112,1113]},{"teal":1125,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1114,1115]},{"teal":1126,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1116,1117]},{"teal":1127,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1118]},{"teal":1132,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1119]},{"teal":1133,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1120]},{"teal":1134,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1121]},{"teal":1135,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1122,1123]},{"teal":1136,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1124,1125]},{"teal":1137,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1126]},{"teal":1138,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1127]},{"teal":1143,"source":"contracts/InjectedRewardsPool.algo.ts:242","pc":[1128,1129]},{"teal":1144,"source":"contracts/InjectedRewardsPool.algo.ts:242","pc":[1130,1131]},{"teal":1145,"source":"contracts/InjectedRewardsPool.algo.ts:242","pc":[1132]},{"teal":1146,"source":"contracts/InjectedRewardsPool.algo.ts:242","pc":[1133,1134,1135]},{"teal":1151,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1136]},{"teal":1152,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1137]},{"teal":1153,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1138,1139]},{"teal":1154,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1140]},{"teal":1155,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1141,1142]},{"teal":1156,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1143]},{"teal":1157,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1144]},{"teal":1158,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1145,1146]},{"teal":1159,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1147,1148]},{"teal":1160,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1149,1150]},{"teal":1161,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1151,1152]},{"teal":1162,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1153]},{"teal":1172,"source":"contracts/InjectedRewardsPool.algo.ts:245","pc":[1154,1155]},{"teal":1173,"source":"contracts/InjectedRewardsPool.algo.ts:245","pc":[1156]},{"teal":1174,"source":"contracts/InjectedRewardsPool.algo.ts:245","pc":[1157]},{"teal":1175,"source":"contracts/InjectedRewardsPool.algo.ts:246","pc":[1158,1159]},{"teal":1176,"source":"contracts/InjectedRewardsPool.algo.ts:247","pc":[1160,1161]},{"teal":1177,"source":"contracts/InjectedRewardsPool.algo.ts:247","pc":[1162,1163]},{"teal":1178,"source":"contracts/InjectedRewardsPool.algo.ts:247","pc":[1164]},{"teal":1179,"source":"contracts/InjectedRewardsPool.algo.ts:247","pc":[1165]},{"teal":1180,"source":"contracts/InjectedRewardsPool.algo.ts:248","pc":[1166,1167]},{"teal":1181,"source":"contracts/InjectedRewardsPool.algo.ts:248","pc":[1168]},{"teal":1182,"source":"contracts/InjectedRewardsPool.algo.ts:249","pc":[1169,1170]},{"teal":1183,"source":"contracts/InjectedRewardsPool.algo.ts:249","pc":[1171]},{"teal":1184,"source":"contracts/InjectedRewardsPool.algo.ts:245","pc":[1172]},{"teal":1185,"source":"contracts/InjectedRewardsPool.algo.ts:245","pc":[1173,1174]},{"teal":1186,"source":"contracts/InjectedRewardsPool.algo.ts:245","pc":[1175]},{"teal":1191,"source":"contracts/InjectedRewardsPool.algo.ts:251","pc":[1176,1177]},{"teal":1192,"source":"contracts/InjectedRewardsPool.algo.ts:251","pc":[1178,1179]},{"teal":1193,"source":"contracts/InjectedRewardsPool.algo.ts:251","pc":[1180]},{"teal":1194,"source":"contracts/InjectedRewardsPool.algo.ts:251","pc":[1181,1182,1183]},{"teal":1199,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1184]},{"teal":1200,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1185]},{"teal":1201,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1186,1187]},{"teal":1202,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1188]},{"teal":1203,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1189,1190]},{"teal":1204,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1191]},{"teal":1205,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1192]},{"teal":1206,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1193,1194]},{"teal":1207,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1195,1196]},{"teal":1208,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1197,1198]},{"teal":1209,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1199,1200]},{"teal":1210,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1201]},{"teal":1215,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1202,1203]},{"teal":1216,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1204]},{"teal":1217,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1205]},{"teal":1218,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1206]},{"teal":1219,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1207]},{"teal":1220,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1208]},{"teal":1224,"source":"contracts/InjectedRewardsPool.algo.ts:255","pc":[1209]},{"teal":1225,"source":"contracts/InjectedRewardsPool.algo.ts:255","pc":[1210,1211]},{"teal":1231,"source":"contracts/InjectedRewardsPool.algo.ts:258","pc":[1212,1213]},{"teal":1232,"source":"contracts/InjectedRewardsPool.algo.ts:258","pc":[1214,1215]},{"teal":1233,"source":"contracts/InjectedRewardsPool.algo.ts:258","pc":[1216]},{"teal":1234,"source":"contracts/InjectedRewardsPool.algo.ts:258","pc":[1217,1218,1219]},{"teal":1239,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1220]},{"teal":1240,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1221]},{"teal":1241,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1222,1223]},{"teal":1242,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1224]},{"teal":1243,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1225,1226]},{"teal":1244,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1227]},{"teal":1245,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1228]},{"teal":1246,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1229,1230]},{"teal":1247,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1231,1232]},{"teal":1248,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1233,1234]},{"teal":1249,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1235,1236]},{"teal":1250,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1237]},{"teal":1257,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[1238,1239]},{"teal":1258,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[1240]},{"teal":1259,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[1241]},{"teal":1260,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[1242,1243]},{"teal":1261,"source":"contracts/InjectedRewardsPool.algo.ts:218","pc":[1244,1245,1246]},{"teal":1266,"source":"contracts/InjectedRewardsPool.algo.ts:262","pc":[1247,1248]},{"teal":1269,"source":"contracts/InjectedRewardsPool.algo.ts:262","errorMessage":"Stake  failed","pc":[1249]},{"teal":1270,"source":"contracts/InjectedRewardsPool.algo.ts:202","pc":[1250]},{"teal":1275,"source":"contracts/InjectedRewardsPool.algo.ts:265","pc":[1251,1252,1253]},{"teal":1276,"source":"contracts/InjectedRewardsPool.algo.ts:265","pc":[1254]},{"teal":1277,"source":"contracts/InjectedRewardsPool.algo.ts:265","pc":[1255]},{"teal":1281,"source":"contracts/InjectedRewardsPool.algo.ts:265","pc":[1256,1257,1258]},{"teal":1284,"source":"contracts/InjectedRewardsPool.algo.ts:265","pc":[1259]},{"teal":1285,"source":"contracts/InjectedRewardsPool.algo.ts:265","pc":[1260,1261]},{"teal":1290,"source":"contracts/InjectedRewardsPool.algo.ts:266","pc":[1262,1263]},{"teal":1291,"source":"contracts/InjectedRewardsPool.algo.ts:266","pc":[1264]},{"teal":1292,"source":"contracts/InjectedRewardsPool.algo.ts:266","pc":[1265,1266]},{"teal":1293,"source":"contracts/InjectedRewardsPool.algo.ts:266","pc":[1267]},{"teal":1294,"source":"contracts/InjectedRewardsPool.algo.ts:266","pc":[1268,1269]},{"teal":1295,"source":"contracts/InjectedRewardsPool.algo.ts:266","pc":[1270]},{"teal":1296,"source":"contracts/InjectedRewardsPool.algo.ts:266","pc":[1271]},{"teal":1297,"source":"contracts/InjectedRewardsPool.algo.ts:266","pc":[1272,1273,1274]},{"teal":1302,"source":"contracts/InjectedRewardsPool.algo.ts:267","pc":[1275,1276]},{"teal":1303,"source":"contracts/InjectedRewardsPool.algo.ts:267","pc":[1277]},{"teal":1304,"source":"contracts/InjectedRewardsPool.algo.ts:267","pc":[1278,1279]},{"teal":1308,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1280]},{"teal":1309,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1281,1282]},{"teal":1314,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1283,1284]},{"teal":1315,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1285,1286]},{"teal":1316,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1287]},{"teal":1317,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1288]},{"teal":1318,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1289,1290,1291]},{"teal":1323,"source":"contracts/InjectedRewardsPool.algo.ts:270","pc":[1292,1293]},{"teal":1324,"source":"contracts/InjectedRewardsPool.algo.ts:270","pc":[1294,1295]},{"teal":1325,"source":"contracts/InjectedRewardsPool.algo.ts:270","pc":[1296]},{"teal":1326,"source":"contracts/InjectedRewardsPool.algo.ts:270","pc":[1297,1298,1299]},{"teal":1331,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1300]},{"teal":1332,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1301]},{"teal":1333,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1302,1303]},{"teal":1334,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1304]},{"teal":1335,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1305,1306]},{"teal":1336,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1307]},{"teal":1337,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1308]},{"teal":1338,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1309,1310]},{"teal":1339,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1311,1312]},{"teal":1340,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1313,1314]},{"teal":1341,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1315,1316]},{"teal":1342,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1317]},{"teal":1348,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1318,1319]},{"teal":1349,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1320]},{"teal":1350,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1321]},{"teal":1351,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1322,1323]},{"teal":1352,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1324]},{"teal":1353,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1325,1326]},{"teal":1354,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1327]},{"teal":1355,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1328,1329]},{"teal":1356,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1330]},{"teal":1357,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1331]},{"teal":1358,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1332]},{"teal":1359,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1333]},{"teal":1360,"source":"contracts/InjectedRewardsPool.algo.ts:274","pc":[1334,1335,1336]},{"teal":1365,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1337,1338]},{"teal":1366,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1339]},{"teal":1367,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1340]},{"teal":1368,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1341]},{"teal":1369,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1342]},{"teal":1370,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1343,1344]},{"teal":1371,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1345]},{"teal":1372,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1346,1347]},{"teal":1376,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1348,1349]},{"teal":1377,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1350,1351,1352]},{"teal":1378,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1353]},{"teal":1379,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1354,1355]},{"teal":1380,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1356]},{"teal":1381,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1357]},{"teal":1382,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1358]},{"teal":1383,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1359]},{"teal":1384,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1360]},{"teal":1385,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1361]},{"teal":1386,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1362]},{"teal":1387,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1363]},{"teal":1388,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1364]},{"teal":1391,"source":"contracts/InjectedRewardsPool.algo.ts:277","errorMessage":"wideRatio failed","pc":[1365]},{"teal":1392,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1366,1367]},{"teal":1396,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1368,1369]},{"teal":1397,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1370,1371]},{"teal":1398,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1372,1373]},{"teal":1399,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1374]},{"teal":1400,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1375]},{"teal":1401,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1376,1377]},{"teal":1406,"source":"contracts/InjectedRewardsPool.algo.ts:280","pc":[1378,1379]},{"teal":1407,"source":"contracts/InjectedRewardsPool.algo.ts:280","pc":[1380,1381]},{"teal":1408,"source":"contracts/InjectedRewardsPool.algo.ts:280","pc":[1382]},{"teal":1409,"source":"contracts/InjectedRewardsPool.algo.ts:280","pc":[1383,1384,1385]},{"teal":1414,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1386]},{"teal":1415,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1387]},{"teal":1416,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1388,1389]},{"teal":1417,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1390]},{"teal":1418,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1391,1392]},{"teal":1419,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1393]},{"teal":1420,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1394]},{"teal":1421,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1395,1396]},{"teal":1422,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1397,1398]},{"teal":1423,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1399,1400]},{"teal":1424,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1401,1402]},{"teal":1425,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1403]},{"teal":1431,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1404,1405]},{"teal":1432,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1406]},{"teal":1433,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1407]},{"teal":1434,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1408,1409,1410]},{"teal":1439,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1411,1412]},{"teal":1440,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1413,1414]},{"teal":1441,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1415]},{"teal":1442,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1416]},{"teal":1443,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1417,1418]},{"teal":1444,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1419]},{"teal":1445,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1420]},{"teal":1446,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1421]},{"teal":1447,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1422]},{"teal":1448,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1423]},{"teal":1451,"source":"contracts/InjectedRewardsPool.algo.ts:285","errorMessage":"wideRatio failed","pc":[1424]},{"teal":1452,"source":"contracts/InjectedRewardsPool.algo.ts:285","pc":[1425,1426]},{"teal":1457,"source":"contracts/InjectedRewardsPool.algo.ts:286","pc":[1427,1428]},{"teal":1458,"source":"contracts/InjectedRewardsPool.algo.ts:286","pc":[1429]},{"teal":1459,"source":"contracts/InjectedRewardsPool.algo.ts:286","pc":[1430]},{"teal":1460,"source":"contracts/InjectedRewardsPool.algo.ts:286","pc":[1431,1432,1433]},{"teal":1465,"source":"contracts/InjectedRewardsPool.algo.ts:287","pc":[1434]},{"teal":1466,"source":"contracts/InjectedRewardsPool.algo.ts:287","pc":[1435,1436]},{"teal":1472,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1437,1438]},{"teal":1473,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1439]},{"teal":1474,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1440,1441]},{"teal":1475,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1442]},{"teal":1476,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1443,1444,1445]},{"teal":1481,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1446,1447]},{"teal":1482,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1448]},{"teal":1483,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1449]},{"teal":1484,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1450,1451]},{"teal":1485,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1452]},{"teal":1486,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1453]},{"teal":1491,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1454,1455]},{"teal":1492,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1456]},{"teal":1493,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1457,1458]},{"teal":1494,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1459]},{"teal":1495,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1460]},{"teal":1496,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1461,1462,1463]},{"teal":1501,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1464,1465]},{"teal":1502,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1466,1467]},{"teal":1503,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1468,1469]},{"teal":1504,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1470,1471,1472]},{"teal":1505,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1473]},{"teal":1506,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1474,1475]},{"teal":1507,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1476]},{"teal":1508,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1477]},{"teal":1509,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1478]},{"teal":1510,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1479,1480]},{"teal":1514,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1481]},{"teal":1515,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1482]},{"teal":1516,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1483]},{"teal":1517,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1484,1485]},{"teal":1518,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1486]},{"teal":1519,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1487]},{"teal":1520,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1488,1489,1490]},{"teal":1525,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1491,1492]},{"teal":1526,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1493,1494]},{"teal":1527,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1495,1496]},{"teal":1528,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1497,1498,1499]},{"teal":1529,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1500]},{"teal":1530,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1501,1502]},{"teal":1531,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1503]},{"teal":1532,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1504]},{"teal":1533,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1505]},{"teal":1534,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1506,1507]},{"teal":1537,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1508,1509,1510]},{"teal":1543,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1511,1512]},{"teal":1544,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1513]},{"teal":1545,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1514,1515]},{"teal":1546,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1516]},{"teal":1547,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1517]},{"teal":1548,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1518,1519,1520]},{"teal":1553,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1521,1522]},{"teal":1554,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1523,1524]},{"teal":1555,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1525,1526]},{"teal":1556,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1527,1528,1529]},{"teal":1557,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1530]},{"teal":1558,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1531,1532]},{"teal":1559,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1533,1534]},{"teal":1560,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1535]},{"teal":1561,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1536]},{"teal":1562,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1537]},{"teal":1563,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1538]},{"teal":1564,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1539]},{"teal":1565,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1540,1541]},{"teal":1569,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1542]},{"teal":1570,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1543]},{"teal":1571,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1544]},{"teal":1572,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1545,1546]},{"teal":1573,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1547,1548]},{"teal":1574,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1549]},{"teal":1575,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1550]},{"teal":1576,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1551]},{"teal":1577,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1552]},{"teal":1578,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1553,1554,1555]},{"teal":1583,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1556,1557]},{"teal":1584,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1558,1559]},{"teal":1585,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1560,1561]},{"teal":1586,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1562,1563,1564]},{"teal":1587,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1565]},{"teal":1588,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1566,1567]},{"teal":1589,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1568]},{"teal":1590,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1569]},{"teal":1591,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1570]},{"teal":1592,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1571,1572]},{"teal":1597,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1573,1574]},{"teal":1598,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1575]},{"teal":1599,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1576]},{"teal":1604,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1577,1578]},{"teal":1605,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1579]},{"teal":1606,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1580]},{"teal":1607,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1581,1582]},{"teal":1608,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1583]},{"teal":1609,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1584,1585]},{"teal":1610,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1586]},{"teal":1619,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1587,1588]},{"teal":1620,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1589]},{"teal":1621,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1590]},{"teal":1622,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1591,1592]},{"teal":1623,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1593,1594,1595]},{"teal":1628,"source":"contracts/InjectedRewardsPool.algo.ts:316","pc":[1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612]},{"teal":1629,"source":"contracts/InjectedRewardsPool.algo.ts:316","pc":[1613,1614]},{"teal":1630,"source":"contracts/InjectedRewardsPool.algo.ts:316","pc":[1615]},{"teal":1633,"source":"contracts/InjectedRewardsPool.algo.ts:265","pc":[1616]},{"teal":1637,"source":"contracts/InjectedRewardsPool.algo.ts:320","pc":[1617,1618,1619]},{"teal":1640,"source":"contracts/InjectedRewardsPool.algo.ts:320","pc":[1620]},{"teal":1644,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1621]},{"teal":1645,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1622,1623]},{"teal":1650,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1624,1625]},{"teal":1651,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1626,1627]},{"teal":1652,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1628]},{"teal":1653,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1629]},{"teal":1654,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1630,1631,1632]},{"teal":1659,"source":"contracts/InjectedRewardsPool.algo.ts:322","pc":[1633,1634]},{"teal":1660,"source":"contracts/InjectedRewardsPool.algo.ts:322","pc":[1635,1636]},{"teal":1661,"source":"contracts/InjectedRewardsPool.algo.ts:322","pc":[1637]},{"teal":1662,"source":"contracts/InjectedRewardsPool.algo.ts:322","pc":[1638,1639,1640]},{"teal":1667,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1641]},{"teal":1668,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1642]},{"teal":1669,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1643,1644]},{"teal":1670,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1645]},{"teal":1671,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1646,1647]},{"teal":1672,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1648]},{"teal":1673,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1649]},{"teal":1674,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1650,1651]},{"teal":1675,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1652,1653]},{"teal":1676,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1654,1655]},{"teal":1677,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1656,1657]},{"teal":1678,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1658]},{"teal":1684,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1659,1660]},{"teal":1685,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1661]},{"teal":1686,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1662]},{"teal":1687,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1663]},{"teal":1688,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1664]},{"teal":1689,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1665,1666]},{"teal":1690,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1667]},{"teal":1691,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1668,1669]},{"teal":1692,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1670]},{"teal":1693,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1671,1672]},{"teal":1694,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1673]},{"teal":1695,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1674,1675,1676]},{"teal":1700,"source":"contracts/InjectedRewardsPool.algo.ts:326","pc":[1677,1678]},{"teal":1701,"source":"contracts/InjectedRewardsPool.algo.ts:326","pc":[1679]},{"teal":1702,"source":"contracts/InjectedRewardsPool.algo.ts:326","pc":[1680]},{"teal":1703,"source":"contracts/InjectedRewardsPool.algo.ts:326","pc":[1681]},{"teal":1704,"source":"contracts/InjectedRewardsPool.algo.ts:326","pc":[1682]},{"teal":1705,"source":"contracts/InjectedRewardsPool.algo.ts:326","pc":[1683,1684]},{"teal":1706,"source":"contracts/InjectedRewardsPool.algo.ts:326","pc":[1685]},{"teal":1707,"source":"contracts/InjectedRewardsPool.algo.ts:326","pc":[1686,1687,1688]},{"teal":1714,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1689,1690]},{"teal":1715,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1691]},{"teal":1716,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1692]},{"teal":1717,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1693,1694]},{"teal":1718,"source":"contracts/InjectedRewardsPool.algo.ts:321","pc":[1695,1696,1697]},{"teal":1728,"source":"contracts/InjectedRewardsPool.algo.ts:330","pc":[1698,1699]},{"teal":1729,"source":"contracts/InjectedRewardsPool.algo.ts:331","pc":[1700,1701]},{"teal":1730,"source":"contracts/InjectedRewardsPool.algo.ts:331","pc":[1702]},{"teal":1731,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1703,1704]},{"teal":1732,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1705]},{"teal":1733,"source":"contracts/InjectedRewardsPool.algo.ts:333","pc":[1706,1707]},{"teal":1734,"source":"contracts/InjectedRewardsPool.algo.ts:333","pc":[1708]},{"teal":1738,"source":"contracts/InjectedRewardsPool.algo.ts:320","pc":[1709,1710]},{"teal":1739,"source":"contracts/InjectedRewardsPool.algo.ts:320","pc":[1711]},{"teal":1744,"source":"contracts/InjectedRewardsPool.algo.ts:337","pc":[1712,1713,1714]},{"teal":1745,"source":"contracts/InjectedRewardsPool.algo.ts:337","pc":[1715]},{"teal":1746,"source":"contracts/InjectedRewardsPool.algo.ts:337","pc":[1716]},{"teal":1750,"source":"contracts/InjectedRewardsPool.algo.ts:337","pc":[1717,1718,1719]},{"teal":1753,"source":"contracts/InjectedRewardsPool.algo.ts:337","pc":[1720]},{"teal":1757,"source":"contracts/InjectedRewardsPool.algo.ts:338","pc":[1721,1722]},{"teal":1758,"source":"contracts/InjectedRewardsPool.algo.ts:338","pc":[1723,1724,1725]},{"teal":1759,"source":"contracts/InjectedRewardsPool.algo.ts:338","pc":[1726,1727]},{"teal":1764,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1728,1729]},{"teal":1765,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1730,1731,1732]},{"teal":1766,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1733]},{"teal":1767,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1734]},{"teal":1768,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1735]},{"teal":1769,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1736,1737,1738]},{"teal":1780,"source":"contracts/InjectedRewardsPool.algo.ts:341","pc":[1739]},{"teal":1781,"source":"contracts/InjectedRewardsPool.algo.ts:341","pc":[1740,1741]},{"teal":1782,"source":"contracts/InjectedRewardsPool.algo.ts:341","pc":[1742,1743]},{"teal":1786,"source":"contracts/InjectedRewardsPool.algo.ts:342","pc":[1744,1745]},{"teal":1787,"source":"contracts/InjectedRewardsPool.algo.ts:342","pc":[1746]},{"teal":1788,"source":"contracts/InjectedRewardsPool.algo.ts:342","pc":[1747,1748]},{"teal":1792,"source":"contracts/InjectedRewardsPool.algo.ts:343","pc":[1749,1750]},{"teal":1793,"source":"contracts/InjectedRewardsPool.algo.ts:343","pc":[1751,1752]},{"teal":1797,"source":"contracts/InjectedRewardsPool.algo.ts:344","pc":[1753,1754]},{"teal":1798,"source":"contracts/InjectedRewardsPool.algo.ts:344","pc":[1755,1756]},{"teal":1802,"source":"contracts/InjectedRewardsPool.algo.ts:345","pc":[1757,1758]},{"teal":1803,"source":"contracts/InjectedRewardsPool.algo.ts:345","pc":[1759,1760,1761]},{"teal":1804,"source":"contracts/InjectedRewardsPool.algo.ts:345","pc":[1762]},{"teal":1805,"source":"contracts/InjectedRewardsPool.algo.ts:345","pc":[1763,1764]},{"teal":1809,"source":"contracts/InjectedRewardsPool.algo.ts:22","pc":[1765,1766]},{"teal":1810,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1767,1768]},{"teal":1813,"source":"contracts/InjectedRewardsPool.algo.ts:341","pc":[1769]},{"teal":1817,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1770,1771]},{"teal":1818,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1772,1773]},{"teal":1819,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1774,1775]},{"teal":1820,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1776,1777]},{"teal":1826,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1778,1779]},{"teal":1827,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1780,1781]},{"teal":1828,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1782]},{"teal":1829,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1783,1784,1785]},{"teal":1834,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1786]},{"teal":1835,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1787]},{"teal":1836,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1788,1789]},{"teal":1837,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1790]},{"teal":1838,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1791,1792]},{"teal":1839,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1793]},{"teal":1840,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1794]},{"teal":1841,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1795,1796]},{"teal":1842,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1797,1798]},{"teal":1843,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1799,1800]},{"teal":1844,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1801,1802]},{"teal":1845,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1803]},{"teal":1850,"source":"contracts/InjectedRewardsPool.algo.ts:353","pc":[1804,1805]},{"teal":1851,"source":"contracts/InjectedRewardsPool.algo.ts:353","pc":[1806,1807]},{"teal":1852,"source":"contracts/InjectedRewardsPool.algo.ts:353","pc":[1808,1809,1810]},{"teal":1853,"source":"contracts/InjectedRewardsPool.algo.ts:353","pc":[1811,1812,1813]},{"teal":1854,"source":"contracts/InjectedRewardsPool.algo.ts:337","pc":[1814]},{"teal":1859,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1815,1816,1817]},{"teal":1860,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1818]},{"teal":1863,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1819,1820,1821]},{"teal":1864,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1822]},{"teal":1865,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1823]},{"teal":1869,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1824,1825,1826]},{"teal":1872,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1827]},{"teal":1873,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1828,1829]},{"teal":1877,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[1830]},{"teal":1878,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[1831,1832]},{"teal":1883,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[1833,1834]},{"teal":1884,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[1835,1836]},{"teal":1885,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[1837]},{"teal":1886,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[1838]},{"teal":1887,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[1839,1840,1841]},{"teal":1892,"source":"contracts/InjectedRewardsPool.algo.ts:358","pc":[1842,1843]},{"teal":1893,"source":"contracts/InjectedRewardsPool.algo.ts:358","pc":[1844,1845]},{"teal":1894,"source":"contracts/InjectedRewardsPool.algo.ts:358","pc":[1846]},{"teal":1895,"source":"contracts/InjectedRewardsPool.algo.ts:358","pc":[1847,1848,1849]},{"teal":1900,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1850]},{"teal":1901,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1851]},{"teal":1902,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1852,1853]},{"teal":1903,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1854]},{"teal":1904,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1855,1856]},{"teal":1905,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1857]},{"teal":1906,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1858]},{"teal":1907,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1859,1860]},{"teal":1908,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1861,1862]},{"teal":1909,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1863,1864]},{"teal":1910,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1865,1866]},{"teal":1911,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1867]},{"teal":1916,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1868,1869]},{"teal":1917,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1870]},{"teal":1918,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1871]},{"teal":1919,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1872]},{"teal":1920,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1873]},{"teal":1921,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1874,1875]},{"teal":1922,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1876]},{"teal":1923,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1877,1878]},{"teal":1928,"source":"contracts/InjectedRewardsPool.algo.ts:362","pc":[1879,1880]},{"teal":1929,"source":"contracts/InjectedRewardsPool.algo.ts:362","pc":[1881,1882,1883]},{"teal":1930,"source":"contracts/InjectedRewardsPool.algo.ts:362","pc":[1884,1885]},{"teal":1931,"source":"contracts/InjectedRewardsPool.algo.ts:362","pc":[1886]},{"teal":1932,"source":"contracts/InjectedRewardsPool.algo.ts:362","pc":[1887,1888,1889]},{"teal":1938,"source":"contracts/InjectedRewardsPool.algo.ts:363","pc":[1890,1891]},{"teal":1939,"source":"contracts/InjectedRewardsPool.algo.ts:363","pc":[1892,1893,1894]},{"teal":1940,"source":"contracts/InjectedRewardsPool.algo.ts:363","pc":[1895]},{"teal":1941,"source":"contracts/InjectedRewardsPool.algo.ts:363","pc":[1896]},{"teal":1942,"source":"contracts/InjectedRewardsPool.algo.ts:363","pc":[1897]},{"teal":1943,"source":"contracts/InjectedRewardsPool.algo.ts:363","pc":[1898,1899,1900]},{"teal":1948,"source":"contracts/InjectedRewardsPool.algo.ts:364","pc":[1901,1902]},{"teal":1949,"source":"contracts/InjectedRewardsPool.algo.ts:364","pc":[1903,1904,1905]},{"teal":1950,"source":"contracts/InjectedRewardsPool.algo.ts:364","pc":[1906]},{"teal":1951,"source":"contracts/InjectedRewardsPool.algo.ts:364","pc":[1907,1908]},{"teal":1952,"source":"contracts/InjectedRewardsPool.algo.ts:364","pc":[1909]},{"teal":1953,"source":"contracts/InjectedRewardsPool.algo.ts:364","pc":[1910]},{"teal":1958,"source":"contracts/InjectedRewardsPool.algo.ts:365","pc":[1911,1912]},{"teal":1959,"source":"contracts/InjectedRewardsPool.algo.ts:365","pc":[1913]},{"teal":1960,"source":"contracts/InjectedRewardsPool.algo.ts:365","pc":[1914]},{"teal":1961,"source":"contracts/InjectedRewardsPool.algo.ts:365","pc":[1915]},{"teal":1962,"source":"contracts/InjectedRewardsPool.algo.ts:365","pc":[1916,1917,1918]},{"teal":1972,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[1919]},{"teal":1973,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[1920]},{"teal":1974,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[1921,1922]},{"teal":1978,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1923,1924]},{"teal":1979,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1925]},{"teal":1980,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1926]},{"teal":1981,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1927,1928,1929]},{"teal":1982,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1930,1931]},{"teal":1983,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1932,1933,1934]},{"teal":1984,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1935]},{"teal":1985,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1936,1937,1938]},{"teal":1988,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1939,1940]},{"teal":1991,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[1941,1942]},{"teal":1995,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[1943,1944]},{"teal":1996,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[1945,1946]},{"teal":2000,"source":"contracts/InjectedRewardsPool.algo.ts:369","pc":[1947,1948]},{"teal":2001,"source":"contracts/InjectedRewardsPool.algo.ts:369","pc":[1949,1950]},{"teal":2005,"source":"contracts/InjectedRewardsPool.algo.ts:370","pc":[1951]},{"teal":2006,"source":"contracts/InjectedRewardsPool.algo.ts:370","pc":[1952,1953]},{"teal":2009,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[1954]},{"teal":2010,"source":"contracts/InjectedRewardsPool.algo.ts:365","pc":[1955,1956,1957]},{"teal":2021,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[1958]},{"teal":2022,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[1959,1960]},{"teal":2023,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[1961,1962]},{"teal":2027,"source":"contracts/InjectedRewardsPool.algo.ts:374","pc":[1963,1964]},{"teal":2028,"source":"contracts/InjectedRewardsPool.algo.ts:374","pc":[1965]},{"teal":2029,"source":"contracts/InjectedRewardsPool.algo.ts:374","pc":[1966,1967]},{"teal":2033,"source":"contracts/InjectedRewardsPool.algo.ts:375","pc":[1968,1969]},{"teal":2034,"source":"contracts/InjectedRewardsPool.algo.ts:375","pc":[1970,1971]},{"teal":2038,"source":"contracts/InjectedRewardsPool.algo.ts:376","pc":[1972,1973]},{"teal":2039,"source":"contracts/InjectedRewardsPool.algo.ts:376","pc":[1974,1975]},{"teal":2043,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1976,1977]},{"teal":2044,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1978]},{"teal":2045,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1979]},{"teal":2046,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1980,1981,1982]},{"teal":2047,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1983,1984]},{"teal":2048,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1985,1986,1987]},{"teal":2049,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1988]},{"teal":2050,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1989,1990,1991]},{"teal":2053,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1992,1993]},{"teal":2056,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[1994,1995]},{"teal":2060,"source":"contracts/InjectedRewardsPool.algo.ts:22","pc":[1996,1997]},{"teal":2061,"source":"contracts/InjectedRewardsPool.algo.ts:378","pc":[1998,1999]},{"teal":2064,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[2000]},{"teal":2072,"source":"contracts/InjectedRewardsPool.algo.ts:383","pc":[2001,2002]},{"teal":2073,"source":"contracts/InjectedRewardsPool.algo.ts:383","pc":[2003,2004,2005]},{"teal":2074,"source":"contracts/InjectedRewardsPool.algo.ts:383","pc":[2006]},{"teal":2075,"source":"contracts/InjectedRewardsPool.algo.ts:383","pc":[2007]},{"teal":2076,"source":"contracts/InjectedRewardsPool.algo.ts:383","pc":[2008]},{"teal":2077,"source":"contracts/InjectedRewardsPool.algo.ts:383","pc":[2009,2010,2011]},{"teal":2088,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2012]},{"teal":2089,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2013,2014]},{"teal":2090,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2015,2016]},{"teal":2094,"source":"contracts/InjectedRewardsPool.algo.ts:385","pc":[2017,2018]},{"teal":2095,"source":"contracts/InjectedRewardsPool.algo.ts:385","pc":[2019]},{"teal":2096,"source":"contracts/InjectedRewardsPool.algo.ts:385","pc":[2020,2021]},{"teal":2100,"source":"contracts/InjectedRewardsPool.algo.ts:386","pc":[2022,2023]},{"teal":2101,"source":"contracts/InjectedRewardsPool.algo.ts:386","pc":[2024,2025]},{"teal":2105,"source":"contracts/InjectedRewardsPool.algo.ts:387","pc":[2026,2027]},{"teal":2106,"source":"contracts/InjectedRewardsPool.algo.ts:387","pc":[2028,2029]},{"teal":2110,"source":"contracts/InjectedRewardsPool.algo.ts:388","pc":[2030,2031]},{"teal":2111,"source":"contracts/InjectedRewardsPool.algo.ts:388","pc":[2032,2033,2034]},{"teal":2112,"source":"contracts/InjectedRewardsPool.algo.ts:388","pc":[2035]},{"teal":2113,"source":"contracts/InjectedRewardsPool.algo.ts:388","pc":[2036,2037]},{"teal":2117,"source":"contracts/InjectedRewardsPool.algo.ts:22","pc":[2038,2039]},{"teal":2118,"source":"contracts/InjectedRewardsPool.algo.ts:389","pc":[2040,2041]},{"teal":2121,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2042]},{"teal":2125,"source":"contracts/InjectedRewardsPool.algo.ts:391","pc":[2043,2044]},{"teal":2126,"source":"contracts/InjectedRewardsPool.algo.ts:391","pc":[2045,2046]},{"teal":2127,"source":"contracts/InjectedRewardsPool.algo.ts:391","pc":[2047,2048]},{"teal":2128,"source":"contracts/InjectedRewardsPool.algo.ts:391","pc":[2049,2050]},{"teal":2133,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2051]},{"teal":2134,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2052]},{"teal":2135,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2053]},{"teal":2136,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2054,2055]},{"teal":2137,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2056]},{"teal":2138,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2057]},{"teal":2139,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2058,2059,2060]},{"teal":2140,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2061,2062]},{"teal":2141,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2063,2064,2065]},{"teal":2142,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2066]},{"teal":2143,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2067,2068,2069]},{"teal":2146,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2070,2071]},{"teal":2149,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2072]},{"teal":2150,"source":"contracts/InjectedRewardsPool.algo.ts:395","pc":[2073]},{"teal":2155,"source":"contracts/InjectedRewardsPool.algo.ts:397","pc":[2074,2075]},{"teal":2156,"source":"contracts/InjectedRewardsPool.algo.ts:397","pc":[2076,2077]},{"teal":2157,"source":"contracts/InjectedRewardsPool.algo.ts:397","pc":[2078]},{"teal":2158,"source":"contracts/InjectedRewardsPool.algo.ts:397","pc":[2079,2080,2081]},{"teal":2163,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2082]},{"teal":2164,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2083]},{"teal":2165,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2084,2085]},{"teal":2166,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2086]},{"teal":2167,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2087,2088]},{"teal":2168,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2089]},{"teal":2169,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2090]},{"teal":2170,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2091,2092]},{"teal":2171,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2093,2094]},{"teal":2172,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2095,2096]},{"teal":2173,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2097,2098]},{"teal":2174,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2099]},{"teal":2180,"source":"contracts/InjectedRewardsPool.algo.ts:401","pc":[2100,2101]},{"teal":2181,"source":"contracts/InjectedRewardsPool.algo.ts:401","pc":[2102]},{"teal":2182,"source":"contracts/InjectedRewardsPool.algo.ts:401","pc":[2103]},{"teal":2183,"source":"contracts/InjectedRewardsPool.algo.ts:401","pc":[2104,2105,2106]},{"teal":2193,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2107,2108]},{"teal":2194,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2109,2110]},{"teal":2195,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2111]},{"teal":2196,"source":"contracts/InjectedRewardsPool.algo.ts:405","pc":[2112,2113]},{"teal":2197,"source":"contracts/InjectedRewardsPool.algo.ts:405","pc":[2114]},{"teal":2198,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2115,2116]},{"teal":2199,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2117]},{"teal":2200,"source":"contracts/InjectedRewardsPool.algo.ts:402","pc":[2118,2119]},{"teal":2204,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2120,2121]},{"teal":2205,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2122,2123]},{"teal":2206,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2124,2125,2126]},{"teal":2207,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2127,2128,2129]},{"teal":2211,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2130,2131]},{"teal":2212,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2132]},{"teal":2213,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2133]},{"teal":2214,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2134]},{"teal":2215,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2135]},{"teal":2216,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2136]},{"teal":2217,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2137]},{"teal":2218,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2138]},{"teal":2219,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2139,2140]},{"teal":2220,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2141]},{"teal":2221,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2142,2143]},{"teal":2222,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2144]},{"teal":2223,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2145,2146,2147]},{"teal":2224,"source":"contracts/InjectedRewardsPool.algo.ts:410","pc":[2148,2149]},{"teal":2228,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2150,2151]},{"teal":2229,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2152]},{"teal":2230,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2153]},{"teal":2231,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2154]},{"teal":2232,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2155]},{"teal":2233,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2156]},{"teal":2234,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2157]},{"teal":2235,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2158]},{"teal":2236,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2159,2160]},{"teal":2237,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2161]},{"teal":2238,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2162,2163]},{"teal":2239,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2164]},{"teal":2240,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2165,2166,2167]},{"teal":2241,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2168,2169]},{"teal":2246,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2170,2171]},{"teal":2247,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2172,2173]},{"teal":2248,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2174]},{"teal":2249,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2175,2176,2177]},{"teal":2254,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2178]},{"teal":2255,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2179]},{"teal":2256,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2180,2181]},{"teal":2257,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2182]},{"teal":2258,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2183,2184]},{"teal":2259,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2185]},{"teal":2260,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2186]},{"teal":2261,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2187,2188]},{"teal":2262,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2189,2190]},{"teal":2263,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2191,2192]},{"teal":2264,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2193,2194]},{"teal":2265,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2195]},{"teal":2270,"source":"contracts/InjectedRewardsPool.algo.ts:415","pc":[2196,2197]},{"teal":2271,"source":"contracts/InjectedRewardsPool.algo.ts:415","pc":[2198,2199]},{"teal":2272,"source":"contracts/InjectedRewardsPool.algo.ts:415","pc":[2200,2201,2202]},{"teal":2276,"source":"contracts/InjectedRewardsPool.algo.ts:417","pc":[2203,2204]},{"teal":2277,"source":"contracts/InjectedRewardsPool.algo.ts:417","pc":[2205,2206]},{"teal":2278,"source":"contracts/InjectedRewardsPool.algo.ts:417","pc":[2207,2208,2209]},{"teal":2282,"source":"contracts/InjectedRewardsPool.algo.ts:418","pc":[2210,2211]},{"teal":2283,"source":"contracts/InjectedRewardsPool.algo.ts:418","pc":[2212]},{"teal":2284,"source":"contracts/InjectedRewardsPool.algo.ts:418","pc":[2213]},{"teal":2285,"source":"contracts/InjectedRewardsPool.algo.ts:418","pc":[2214]},{"teal":2286,"source":"contracts/InjectedRewardsPool.algo.ts:418","pc":[2215]},{"teal":2287,"source":"contracts/InjectedRewardsPool.algo.ts:418","pc":[2216]},{"teal":2288,"source":"contracts/InjectedRewardsPool.algo.ts:401","pc":[2217,2218,2219]},{"teal":2293,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2220,2221]},{"teal":2294,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2222,2223]},{"teal":2295,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2224,2225]},{"teal":2296,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2226,2227,2228]},{"teal":2297,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2229]},{"teal":2298,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2230,2231]},{"teal":2299,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2232]},{"teal":2300,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2233]},{"teal":2301,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2234]},{"teal":2302,"source":"contracts/InjectedRewardsPool.algo.ts:420","pc":[2235,2236]},{"teal":2306,"source":"contracts/InjectedRewardsPool.algo.ts:421","pc":[2237,2238]},{"teal":2307,"source":"contracts/InjectedRewardsPool.algo.ts:421","pc":[2239,2240]},{"teal":2308,"source":"contracts/InjectedRewardsPool.algo.ts:421","pc":[2241,2242]},{"teal":2309,"source":"contracts/InjectedRewardsPool.algo.ts:421","pc":[2243,2244]},{"teal":2314,"source":"contracts/InjectedRewardsPool.algo.ts:423","pc":[2245,2246]},{"teal":2315,"source":"contracts/InjectedRewardsPool.algo.ts:423","pc":[2247,2248]},{"teal":2316,"source":"contracts/InjectedRewardsPool.algo.ts:423","pc":[2249,2250,2251]},{"teal":2317,"source":"contracts/InjectedRewardsPool.algo.ts:423","pc":[2252,2253,2254]},{"teal":2324,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[2255,2256]},{"teal":2325,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[2257]},{"teal":2326,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[2258]},{"teal":2327,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[2259,2260]},{"teal":2328,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[2261,2262,2263]},{"teal":2331,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[2264]},{"teal":2335,"source":"contracts/InjectedRewardsPool.algo.ts:428","pc":[2265,2266,2267]},{"teal":2338,"source":"contracts/InjectedRewardsPool.algo.ts:428","pc":[2268]},{"teal":2342,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2269]},{"teal":2343,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2270,2271]},{"teal":2348,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2272,2273]},{"teal":2349,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2274,2275]},{"teal":2350,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2276]},{"teal":2351,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2277]},{"teal":2352,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2278,2279,2280]},{"teal":2357,"source":"contracts/InjectedRewardsPool.algo.ts:430","pc":[2281,2282]},{"teal":2358,"source":"contracts/InjectedRewardsPool.algo.ts:430","pc":[2283,2284]},{"teal":2359,"source":"contracts/InjectedRewardsPool.algo.ts:430","pc":[2285]},{"teal":2360,"source":"contracts/InjectedRewardsPool.algo.ts:430","pc":[2286,2287,2288]},{"teal":2365,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2289]},{"teal":2366,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2290]},{"teal":2367,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2291,2292]},{"teal":2368,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2293]},{"teal":2369,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2294,2295]},{"teal":2370,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2296]},{"teal":2371,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2297]},{"teal":2372,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2298,2299]},{"teal":2373,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2300,2301]},{"teal":2374,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2302,2303]},{"teal":2375,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2304,2305]},{"teal":2376,"source":"contracts/InjectedRewardsPool.algo.ts:431","pc":[2306]},{"teal":2382,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2307,2308]},{"teal":2383,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2309]},{"teal":2384,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2310]},{"teal":2385,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2311]},{"teal":2386,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2312]},{"teal":2387,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2313,2314]},{"teal":2388,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2315]},{"teal":2389,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2316,2317]},{"teal":2390,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2318]},{"teal":2391,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2319,2320]},{"teal":2392,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2321]},{"teal":2393,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2322,2323,2324]},{"teal":2398,"source":"contracts/InjectedRewardsPool.algo.ts:434","pc":[2325,2326]},{"teal":2399,"source":"contracts/InjectedRewardsPool.algo.ts:434","pc":[2327,2328,2329]},{"teal":2406,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2330,2331]},{"teal":2407,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2332]},{"teal":2408,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2333]},{"teal":2409,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2334,2335]},{"teal":2410,"source":"contracts/InjectedRewardsPool.algo.ts:429","pc":[2336,2337,2338]},{"teal":2415,"source":"contracts/InjectedRewardsPool.algo.ts:437","pc":[2339]},{"teal":2419,"source":"contracts/InjectedRewardsPool.algo.ts:428","pc":[2340,2341]},{"teal":2420,"source":"contracts/InjectedRewardsPool.algo.ts:428","pc":[2342]},{"teal":2424,"source":"contracts/InjectedRewardsPool.algo.ts:440","pc":[2343,2344,2345]},{"teal":2427,"source":"contracts/InjectedRewardsPool.algo.ts:440","pc":[2346]},{"teal":2431,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2347]},{"teal":2432,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2348,2349]},{"teal":2437,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2350,2351]},{"teal":2438,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2352,2353]},{"teal":2439,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2354]},{"teal":2440,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2355]},{"teal":2441,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2356,2357,2358]},{"teal":2446,"source":"contracts/InjectedRewardsPool.algo.ts:442","pc":[2359,2360]},{"teal":2447,"source":"contracts/InjectedRewardsPool.algo.ts:442","pc":[2361,2362]},{"teal":2448,"source":"contracts/InjectedRewardsPool.algo.ts:442","pc":[2363]},{"teal":2449,"source":"contracts/InjectedRewardsPool.algo.ts:442","pc":[2364,2365,2366]},{"teal":2454,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2367]},{"teal":2455,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2368]},{"teal":2456,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2369,2370]},{"teal":2457,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2371]},{"teal":2458,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2372,2373]},{"teal":2459,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2374]},{"teal":2460,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2375]},{"teal":2461,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2376,2377]},{"teal":2462,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2378,2379]},{"teal":2463,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2380,2381]},{"teal":2464,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2382,2383]},{"teal":2465,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2384]},{"teal":2471,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2385,2386]},{"teal":2472,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2387]},{"teal":2473,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2388]},{"teal":2474,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2389]},{"teal":2475,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2390]},{"teal":2476,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2391,2392]},{"teal":2477,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2393]},{"teal":2478,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2394,2395]},{"teal":2479,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2396]},{"teal":2480,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2397,2398]},{"teal":2481,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2399]},{"teal":2482,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2400,2401,2402]},{"teal":2487,"source":"contracts/InjectedRewardsPool.algo.ts:446","pc":[2403,2404]},{"teal":2488,"source":"contracts/InjectedRewardsPool.algo.ts:446","pc":[2405]},{"teal":2489,"source":"contracts/InjectedRewardsPool.algo.ts:446","pc":[2406]},{"teal":2490,"source":"contracts/InjectedRewardsPool.algo.ts:446","pc":[2407,2408]},{"teal":2491,"source":"contracts/InjectedRewardsPool.algo.ts:446","pc":[2409]},{"teal":2492,"source":"contracts/InjectedRewardsPool.algo.ts:446","pc":[2410,2411]},{"teal":2493,"source":"contracts/InjectedRewardsPool.algo.ts:446","pc":[2412]},{"teal":2497,"source":"contracts/InjectedRewardsPool.algo.ts:447","pc":[2413]},{"teal":2498,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2414,2415,2416]},{"teal":2503,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2417,2418]},{"teal":2504,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2419]},{"teal":2505,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2420]},{"teal":2506,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2421]},{"teal":2507,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2422]},{"teal":2508,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2423,2424]},{"teal":2509,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2425]},{"teal":2510,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2426,2427]},{"teal":2511,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2428]},{"teal":2512,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2429,2430]},{"teal":2513,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2431]},{"teal":2514,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2432,2433,2434]},{"teal":2519,"source":"contracts/InjectedRewardsPool.algo.ts:449","pc":[2435,2436]},{"teal":2520,"source":"contracts/InjectedRewardsPool.algo.ts:449","pc":[2437]},{"teal":2521,"source":"contracts/InjectedRewardsPool.algo.ts:449","pc":[2438]},{"teal":2522,"source":"contracts/InjectedRewardsPool.algo.ts:449","pc":[2439,2440]},{"teal":2523,"source":"contracts/InjectedRewardsPool.algo.ts:449","pc":[2441]},{"teal":2524,"source":"contracts/InjectedRewardsPool.algo.ts:449","pc":[2442,2443]},{"teal":2525,"source":"contracts/InjectedRewardsPool.algo.ts:449","pc":[2444]},{"teal":2529,"source":"contracts/InjectedRewardsPool.algo.ts:450","pc":[2445]},{"teal":2536,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2446,2447]},{"teal":2537,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2448]},{"teal":2538,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2449]},{"teal":2539,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2450,2451]},{"teal":2540,"source":"contracts/InjectedRewardsPool.algo.ts:441","pc":[2452,2453,2454]},{"teal":2543,"source":"contracts/InjectedRewardsPool.algo.ts:440","pc":[2455]},{"teal":2547,"source":"contracts/InjectedRewardsPool.algo.ts:454","pc":[2456,2457,2458]},{"teal":2551,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2459,2460]},{"teal":2552,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2461]},{"teal":2553,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2462]},{"teal":2554,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2463,2464]},{"teal":2555,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2465]},{"teal":2556,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2466,2467]},{"teal":2557,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2468]},{"teal":2558,"source":"contracts/InjectedRewardsPool.algo.ts:454","pc":[2469]},{"teal":2563,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2470,2471,2472]},{"teal":2564,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2473]},{"teal":2565,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2474]},{"teal":2569,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2475,2476,2477]},{"teal":2570,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2478]},{"teal":2573,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2479,2480,2481,2482,2483,2484]},{"teal":2574,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2485,2486,2487]},{"teal":2575,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2488,2489,2490,2491]},{"teal":2578,"source":"contracts/InjectedRewardsPool.algo.ts:24","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[2492]},{"teal":2581,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2493,2494,2495,2496,2497,2498]},{"teal":2582,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2499,2500,2501,2502,2503,2504]},{"teal":2583,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2505,2506,2507,2508,2509,2510]},{"teal":2584,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2511,2512,2513,2514,2515,2516]},{"teal":2585,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2517,2518,2519,2520,2521,2522]},{"teal":2586,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2523,2524,2525,2526,2527,2528]},{"teal":2587,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2529,2530,2531,2532,2533,2534]},{"teal":2588,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2535,2536,2537,2538,2539,2540]},{"teal":2589,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2541,2542,2543,2544,2545,2546]},{"teal":2590,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2547,2548,2549,2550,2551,2552]},{"teal":2591,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2553,2554,2555]},{"teal":2592,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2556,2557,2558,2559,2560,2561,2562,2563,2564,2565,2566,2567,2568,2569,2570,2571,2572,2573,2574,2575,2576,2577]},{"teal":2595,"source":"contracts/InjectedRewardsPool.algo.ts:24","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[2578]},{"teal":2598,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2579,2580,2581,2582,2583,2584]},{"teal":2599,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2585,2586,2587]},{"teal":2600,"source":"contracts/InjectedRewardsPool.algo.ts:24","pc":[2588,2589,2590,2591]},{"teal":2603,"source":"contracts/InjectedRewardsPool.algo.ts:24","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[2592]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEx"},"byteCode":{"approval":"CyAOAAE4BqwCBSAEoI0G6AeAgJqm6q/jAefaASh/JgsDCoEBAAdzdGFrZXJzC3RvdGFsU3Rha2VkCm51bVN0YWtlcnMSaW5qZWN0ZWRBU0FSZXdhcmRzCAAAAAAAAAAADXJld2FyZEFzc2V0SWQMYWRtaW5BZGRyZXNzDXN0YWtlZEFzc2V0SWQXbGFzdFJld2FyZEluamVjdGlvblRpbWUxGBQlCzEZCI0MCPoAAAAAAAAAAAlQCOwAAAAAAAAAAAAAADYaAUkVIQYSRIgAAiNDigEAJwiL/2eAD2NvbnRyYWN0VmVyc2lvboHRD2eJMRYjCUk4ECMSRDYaAhc2GgEXiAACI0OKAwAxACcIZBJEJwmL/2cnB4v+ZysiZycKImcnBSJnJwQiZ4v9OAcyChJEi/04CIGAtRgSRLEhB7IQi/+yETIKshQishIisgGzi/6L/xNBABSxIQeyEIv+shEyCrIUIrISIrIBs4k2GgFJFSEGEkSIAAIjQ4oBADEAJwhkEkQnCIv/Z4mKAQGBxBOL/4GQAwsIiYAEFR98dYgABFCwI0OKAAEpSSKMACcHZCITQQAHiwAhCAiMACEIiwAIIQuI/8QIIQ2I/74IjAGLARaMAEYBiTEWIwlJOBAjEkSIAAIjQ4oBAClJKr1MSBREMQAnCGQSRCKMACcHZCITQQAHiwAhCAiMACEIiwAIIQuI/3YIIQ2I/3AIjAGL/zgHMgoSRIv/OAiLARJEKoHg2gG5SIAObWluaW11bUJhbGFuY2WLAWeLACINQQAVsSEHshAnB2SyETIKshQishIisgGziTYaAhc2GgEXMRYjCUk4ECEHEkSIAAIjQ4oDADEAJwhkEkSL/zgAJwhkEkSL/zgUMgoSRIv/OBGL/RJEi/84Eov+EkQnBWSL/ggnBUxnJwoyB2eJiAACI0OKAAAxACcIZBJEK2QiEkSxIQeyECcJZLIRMgOyFSKyEjIKshQisgGzJwlkJwdkE0EAGbEhB7IQJwdkshEyA7IVIrISMgqyFCKyAbOxI7IQJwhkcwBIMgEJsggnCGSyBzIKsgAhCbIBs4k2GgEXMRYjCUk4ECEHEkSIAAIjQ4oCAClHAzIHjACL/iINRDIMIQQMQQASsSWyECKyAShJsh6yHyEFshmzi/84ADEAEkSL/zgUMgoSRIv/OBEnCWQSRIv/OBKL/hJEIowBMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbMijAKLAoH0AwxBATKLAUEAA0IBKosCJAsiCCEGKk4CujEAEkEAbDIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwIkCyQqTgK6jAOLAyEGiwNXIAgXi/84EggWXYwDMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbOLAiQLiwMqTgK7K2SL/zgSCCtMZyOMAUIAiYsCJAsiCCEGKk4CujIDEkEAdzIMIQQMQQASsSWyECKyAShJsh6yHyEFshmzK0lki/84EghnMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbOLAiQLMQCL/zgSFlAnBlAnBlAqTgK7MgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbMnBElkIwhnI4wBMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbOLAiMIjAJC/sWLAUSJiAACI0OKAAApRwQnBWSBAgsnBGQNQQFVJwVkjAAijAGLAScEZAxBATAyDCEEDEEAErElshAisgEoSbIesh8hBbIZs4sBJAshBgiBCCpOAroXIg1BAPqLASQLJCpOArqMAosCVyAIFyEKHSIrZB9ISEwURIwDiwKBMIsDFl2MAjIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwAiDUEAsIsAiwMdIiEKH0hITBREjASLBCISQQADI4wEJwVkiwQPQQBBJwVJZIsECWcnB2QnCWQSQQAbiwIhBosCVyAIF4sECBZdjAIrSWSLBAhnQgARiwIhDIsCVygIF4sECBZdjAJCAEInB2QnCWQSQQAjiwIhBosCVyAIF4sEJwVkCQgWXYwCK0lkiwQnBWQJCGdCABGLAiEMiwJXKAgXiwQIFl2MAicFImeLASQLiwIqTgK7iwEjCIwBQv7HgA9sYXN0QWNjcnVhbFRpbWUyB2eJigEBKSKMAIsAJwRkDEEAQTIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwAkCyIIIQYqTgK6i/8SQQAMiwAkCyQqTgK6QgAUiwAjCIwAQv+2MgMnBlAnBlAnBlCMAImIAAIjQ4oAACkxAIj/k4wAiwBXKAgXIg1BACexIQeyECcHZLIRMQCyFDIKsgCLAFcoCBeyEiEJsgGziwAnBlwojAAyDCEEDEEAErElshAisgEoSbIesh8hBbIZs4sAiwBXACCIAhGJNhoBF4gAAiNDigEAKUcEIowAiwAnBGQMQQGmMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbOLACQLJCpOArqMAYsBVwAgMQASQQFtiwFXIAgXIg1BAGSLAVcgCBeL/w9EJwlkIhJBACexI7IQi/8iEkEACYsBVyAIF0IAAov/sggxALIHMgqyACKyAbNCACuxIQeyECcJZLIRMQCyFDIKsgCL/yISQQAJiwFXIAgXQgACi/+yEiEJsgGziwFXKAgXIg1BACexIQeyECcHZLIRMQCyFDIKsgCLAVcoCBeyEiEJsgGziwEnBlwojAErSWSL/yISQQAJiwFXIAgXQgACi/8JZzIMIQQMQQASsSWyECKyAShJsh6yHyEFshmzi/8iEkEAcTIDJwZQJwZQJwZQjAKLAosBVwAgiADVJwRkIwkkCyIIIQYqTgK6iP3tjAMnBGQjCSQLIgghBipOArqIAGGMBDIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwCLA4gA/YsEiwKIAPYnBElkIwlnQgAZiwEhBosBVyAIF4v/CRZdjAGLAScGXCiMAYsBiwFXACCIAFiLACMIjABC/lGJigEBKSKMAIsAJwRkDEEAOjIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwAkCyIIIQYqTgK6i/8SQQAFiwBCAAqLACMIjABC/70ijACJigIAKSKMAIsAJwRkDEEAYDIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwAkCyIIIQYqTgK6i/8SQQAOiwAkC4v+Kk4Cu4lCAB2LACQLIgghBipOAroyAxJBAAuLACQLi/4qTgK7iYsAIwiMAEL/l4mKAgCL/iQLi/8qTgK7iYgAAiNDigAAiYAE0yS+pDYaAI4B9wgAgAQTw/UDgASj/qQPgARMQ2cmgARHz8wEgAQ0cAfrgAT060oDgATqS8pXgASlrmvRgASBPOiagAQxcsqdNhoAjgr23vdb94f3xvhT+RT60fye/QX/lACABCSHwyw2GgCOAfiYAA==","clear":"Cw=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":1,"patch":2,"commitHash":"088f89dd"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


// Type definitions for ARC-56 structs

export type MbrReturn = {
  mbrPayment: bigint
}


/**
 * Converts the ABI tuple representation of a mbrReturn to the struct representation
 */
export function MbrReturnFromTuple(abiTuple: [bigint]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.mbrReturn, APP_SPEC.structs) as MbrReturn
}

/**
 * The argument types for the InjectedRewardsPool contract
 */
export type InjectedRewardsPoolArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication(address)void': {
      adminAddress: string
    }
    'initApplication(uint64,uint64,pay)void': {
      /**
       * The asset ID of the token to be staked in the pool.
       */
      stakedAssetId: bigint | number
      /**
       * The asset ID of the token to be distributed as rewards.
       */
      rewardAssetId: bigint | number
      /**
       * The payment transaction providing the initial minimum balance for the contract.
       */
      initialBalanceTxn: AppMethodCallTransactionArgument
    }
    'updateAdminAddress(address)void': {
      adminAddress: string
    }
    'getMBRForPoolCreation()(uint64)': Record<string, never>
    'initStorage(pay)void': {
      mbrPayment: AppMethodCallTransactionArgument
    }
    'injectRewards(axfer,uint64,uint64)void': {
      rewardTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
      rewardAssetId: bigint | number
    }
    'deleteApplication()void': Record<string, never>
    'stake(axfer,uint64)void': {
      stakeTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
    }
    'accrueRewards()void': Record<string, never>
    'claimRewards()void': Record<string, never>
    'unstake(uint64)void': {
      quantity: bigint | number
    }
    'gas()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication(address)void': [adminAddress: string]
    'initApplication(uint64,uint64,pay)void': [stakedAssetId: bigint | number, rewardAssetId: bigint | number, initialBalanceTxn: AppMethodCallTransactionArgument]
    'updateAdminAddress(address)void': [adminAddress: string]
    'getMBRForPoolCreation()(uint64)': []
    'initStorage(pay)void': [mbrPayment: AppMethodCallTransactionArgument]
    'injectRewards(axfer,uint64,uint64)void': [rewardTxn: AppMethodCallTransactionArgument, quantity: bigint | number, rewardAssetId: bigint | number]
    'deleteApplication()void': []
    'stake(axfer,uint64)void': [stakeTxn: AppMethodCallTransactionArgument, quantity: bigint | number]
    'accrueRewards()void': []
    'claimRewards()void': []
    'unstake(uint64)void': [quantity: bigint | number]
    'gas()void': []
  }
}

/**
 * The return type for each method
 */
export type InjectedRewardsPoolReturns = {
  'createApplication(address)void': void
  'initApplication(uint64,uint64,pay)void': void
  'updateAdminAddress(address)void': void
  'getMBRForPoolCreation()(uint64)': MbrReturn
  'initStorage(pay)void': void
  'injectRewards(axfer,uint64,uint64)void': void
  'deleteApplication()void': void
  'stake(axfer,uint64)void': void
  'accrueRewards()void': void
  'claimRewards()void': void
  'unstake(uint64)void': void
  'gas()void': void
}

/**
 * Defines the types of available calls and state of the InjectedRewardsPool smart contract.
 */
export type InjectedRewardsPoolTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication(address)void' | 'createApplication', {
      argsObj: InjectedRewardsPoolArgs['obj']['createApplication(address)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['createApplication(address)void']
      returns: InjectedRewardsPoolReturns['createApplication(address)void']
    }>
    & Record<'initApplication(uint64,uint64,pay)void' | 'initApplication', {
      argsObj: InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,pay)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,pay)void']
      returns: InjectedRewardsPoolReturns['initApplication(uint64,uint64,pay)void']
    }>
    & Record<'updateAdminAddress(address)void' | 'updateAdminAddress', {
      argsObj: InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']
      returns: InjectedRewardsPoolReturns['updateAdminAddress(address)void']
    }>
    & Record<'getMBRForPoolCreation()(uint64)' | 'getMBRForPoolCreation', {
      argsObj: InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)']
      argsTuple: InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']
      returns: InjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)']
    }>
    & Record<'initStorage(pay)void' | 'initStorage', {
      argsObj: InjectedRewardsPoolArgs['obj']['initStorage(pay)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']
      returns: InjectedRewardsPoolReturns['initStorage(pay)void']
    }>
    & Record<'injectRewards(axfer,uint64,uint64)void' | 'injectRewards', {
      argsObj: InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']
      returns: InjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: InjectedRewardsPoolArgs['obj']['deleteApplication()void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['deleteApplication()void']
      returns: InjectedRewardsPoolReturns['deleteApplication()void']
    }>
    & Record<'stake(axfer,uint64)void' | 'stake', {
      argsObj: InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']
      returns: InjectedRewardsPoolReturns['stake(axfer,uint64)void']
    }>
    & Record<'accrueRewards()void' | 'accrueRewards', {
      argsObj: InjectedRewardsPoolArgs['obj']['accrueRewards()void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['accrueRewards()void']
      returns: InjectedRewardsPoolReturns['accrueRewards()void']
    }>
    & Record<'claimRewards()void' | 'claimRewards', {
      argsObj: InjectedRewardsPoolArgs['obj']['claimRewards()void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['claimRewards()void']
      returns: InjectedRewardsPoolReturns['claimRewards()void']
    }>
    & Record<'unstake(uint64)void' | 'unstake', {
      argsObj: InjectedRewardsPoolArgs['obj']['unstake(uint64)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']
      returns: InjectedRewardsPoolReturns['unstake(uint64)void']
    }>
    & Record<'gas()void' | 'gas', {
      argsObj: InjectedRewardsPoolArgs['obj']['gas()void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['gas()void']
      returns: InjectedRewardsPoolReturns['gas()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        stakedAssetId: bigint
        rewardAssetId: bigint
        totalStaked: bigint
        injectedAsaRewards: bigint
        lastRewardInjectionTime: bigint
        lastAccrualTime: bigint
        adminAddress: string
        minimumBalance: bigint
        numStakers: bigint
        contractVersion: bigint
      }
      maps: {}
    }
    box: {
      keys: {
        stakers: [[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]]
      }
      maps: {}
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type InjectedRewardsPoolSignatures = keyof InjectedRewardsPoolTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type InjectedRewardsPoolNonVoidMethodSignatures = keyof InjectedRewardsPoolTypes['methods'] extends infer T ? T extends keyof InjectedRewardsPoolTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the InjectedRewardsPool smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends InjectedRewardsPoolSignatures> = InjectedRewardsPoolTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the InjectedRewardsPool smart contract to the method's return type
 */
export type MethodReturn<TSignature extends InjectedRewardsPoolSignatures> = InjectedRewardsPoolTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = InjectedRewardsPoolTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = InjectedRewardsPoolTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type InjectedRewardsPoolCreateCallParams =
  | Expand<CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & {method: 'createApplication(address)void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type InjectedRewardsPoolDeleteCallParams =
  | Expand<CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type InjectedRewardsPoolDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: InjectedRewardsPoolCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: InjectedRewardsPoolDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the InjectedRewardsPool smart contract
 */
export abstract class InjectedRewardsPoolParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends InjectedRewardsPoolCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication(address)void':
            return InjectedRewardsPoolParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the InjectedRewardsPool smart contract using the createApplication(address)void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication(address)void' as const,
          args: Array.isArray(params.args) ? params.args : [params.args.adminAddress],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends InjectedRewardsPoolDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return InjectedRewardsPoolParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the InjectedRewardsPool smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the initApplication(uint64,uint64,pay)void ABI method
   *
  * Initializes the staking pool application with the specified staked asset and reward asset.
  
  
  Sets up global state variables, verifies the initial funding payment, and opts the contract into the staked asset
  and reward asset if necesary.
  Only the admin address can call this function.

   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initApplication(params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,pay)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initApplication(uint64,uint64,pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakedAssetId, params.args.rewardAssetId, params.args.initialBalanceTxn],
    }
  }
  /**
   * Constructs a no op call for the updateAdminAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateAdminAddress(params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateAdminAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.adminAddress],
    }
  }
  /**
   * Constructs a no op call for the getMBRForPoolCreation()(uint64) ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getMbrForPoolCreation(params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getMBRForPoolCreation()(uint64)' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the initStorage(pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initStorage(params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initStorage(pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.mbrPayment],
    }
  }
  /**
   * Constructs a no op call for the injectRewards(axfer,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static injectRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'injectRewards(axfer,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.rewardTxn, params.args.quantity, params.args.rewardAssetId],
    }
  }
  /**
   * Constructs a no op call for the stake(axfer,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static stake(params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'stake(axfer,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakeTxn, params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the accrueRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static accrueRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'accrueRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the claimRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static claimRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'claimRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the unstake(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static unstake(params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'unstake(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the gas()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gas(params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gas()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the InjectedRewardsPool smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class InjectedRewardsPoolFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `InjectedRewardsPoolFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClient {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new InjectedRewardsPoolClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new InjectedRewardsPoolClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the InjectedRewardsPool smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: InjectedRewardsPoolDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? InjectedRewardsPoolParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (InjectedRewardsPoolCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? InjectedRewardsPoolParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (InjectedRewardsPoolDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new InjectedRewardsPoolClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the InjectedRewardsPool smart contract using the createApplication(address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.params.create(InjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the InjectedRewardsPool smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(InjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the InjectedRewardsPool smart contract using the createApplication(address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.createTransaction.create(InjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the InjectedRewardsPool smart contract using an ABI method call using the createApplication(address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        const result = await this.appFactory.send.create(InjectedRewardsPoolParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | InjectedRewardsPoolReturns['createApplication(address)void']) }, appClient: new InjectedRewardsPoolClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the InjectedRewardsPool smart contract
 */
export class InjectedRewardsPoolClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `InjectedRewardsPoolClient`
   *
   * @param appClient An `AppClient` instance which has been created with the InjectedRewardsPool app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `InjectedRewardsPoolClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends InjectedRewardsPoolNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `InjectedRewardsPoolClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<InjectedRewardsPoolClient> {
    return new InjectedRewardsPoolClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `InjectedRewardsPoolClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<InjectedRewardsPoolClient> {
    return new InjectedRewardsPoolClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClient {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the InjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(InjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the InjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initApplication(uint64,uint64,pay)void` ABI method.
     *
    * Initializes the staking pool application with the specified staked asset and reward asset.
    
    
    Sets up global state variables, verifies the initial funding payment, and opts the contract into the staked asset
    and reward asset if necesary.
    Only the admin address can call this function.

     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,pay)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateAdminAddress: (params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getMbrForPoolCreation: (params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initStorage: (params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    injectRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    stake: (params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    accrueRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    claimRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    unstake: (params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gas: (params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the InjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(InjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the InjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initApplication(uint64,uint64,pay)void` ABI method.
     *
    * Initializes the staking pool application with the specified staked asset and reward asset.
    
    
    Sets up global state variables, verifies the initial funding payment, and opts the contract into the staked asset
    and reward asset if necesary.
    Only the admin address can call this function.

     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,pay)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateAdminAddress: (params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getMbrForPoolCreation: (params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initStorage: (params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    injectRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    stake: (params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    accrueRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    claimRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    unstake: (params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gas: (params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the InjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(InjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the InjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initApplication(uint64,uint64,pay)void` ABI method.
     *
    * Initializes the staking pool application with the specified staked asset and reward asset.
    
    
    Sets up global state variables, verifies the initial funding payment, and opts the contract into the staked asset
    and reward asset if necesary.
    Only the admin address can call this function.

     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initApplication: async (params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,pay)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.initApplication(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['initApplication(uint64,uint64,pay)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateAdminAddress: async (params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.updateAdminAddress(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['updateAdminAddress(address)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getMbrForPoolCreation: async (params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initStorage: async (params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.initStorage(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['initStorage(pay)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    injectRewards: async (params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.injectRewards(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    stake: async (params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.stake(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['stake(axfer,uint64)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    accrueRewards: async (params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.accrueRewards(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['accrueRewards()void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    claimRewards: async (params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.claimRewards(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['claimRewards()void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    unstake: async (params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.unstake(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['unstake(uint64)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gas: async (params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.gas(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['gas()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new InjectedRewardsPoolClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current InjectedRewardsPool app
   */
  state = {
    /**
     * Methods to access global state for the current InjectedRewardsPool app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          stakedAssetId: result.stakedAssetId,
          rewardAssetId: result.rewardAssetId,
          totalStaked: result.totalStaked,
          injectedAsaRewards: result.injectedASARewards,
          lastRewardInjectionTime: result.lastRewardInjectionTime,
          lastAccrualTime: result.lastAccrualTime,
          adminAddress: result.adminAddress,
          minimumBalance: result.minimumBalance,
          numStakers: result.numStakers,
          contractVersion: result.contractVersion,
        }
      },
      /**
       * Get the current value of the stakedAssetId key in global state
       */
      stakedAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("stakedAssetId")) as bigint | undefined },
      /**
       * Get the current value of the rewardAssetId key in global state
       */
      rewardAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("rewardAssetId")) as bigint | undefined },
      /**
       * Get the current value of the totalStaked key in global state
       */
      totalStaked: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("totalStaked")) as bigint | undefined },
      /**
       * Get the current value of the injectedASARewards key in global state
       */
      injectedAsaRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("injectedASARewards")) as bigint | undefined },
      /**
       * Get the current value of the lastRewardInjectionTime key in global state
       */
      lastRewardInjectionTime: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("lastRewardInjectionTime")) as bigint | undefined },
      /**
       * Get the current value of the lastAccrualTime key in global state
       */
      lastAccrualTime: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("lastAccrualTime")) as bigint | undefined },
      /**
       * Get the current value of the adminAddress key in global state
       */
      adminAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("adminAddress")) as string | undefined },
      /**
       * Get the current value of the minimumBalance key in global state
       */
      minimumBalance: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("minimumBalance")) as bigint | undefined },
      /**
       * Get the current value of the numStakers key in global state
       */
      numStakers: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("numStakers")) as bigint | undefined },
      /**
       * Get the current value of the contractVersion key in global state
       */
      contractVersion: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("contractVersion")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current InjectedRewardsPool app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
          stakers: result.stakers,
        }
      },
      /**
       * Get the current value of the stakers key in box state
       */
      stakers: async (): Promise<[[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]] | undefined> => { return (await this.appClient.state.box.getValue("stakers")) as [[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]] | undefined },
    },
  }

  public newGroup(): InjectedRewardsPoolComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a initApplication(uint64,uint64,pay)void method call against the InjectedRewardsPool contract
       */
      initApplication(params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,pay)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initApplication(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateAdminAddress(address)void method call against the InjectedRewardsPool contract
       */
      updateAdminAddress(params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateAdminAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a getMBRForPoolCreation()(uint64) method call against the InjectedRewardsPool contract
       */
      getMbrForPoolCreation(params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getMbrForPoolCreation(params)))
        resultMappers.push((v) => client.decodeReturnValue('getMBRForPoolCreation()(uint64)', v))
        return this
      },
      /**
       * Add a initStorage(pay)void method call against the InjectedRewardsPool contract
       */
      initStorage(params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initStorage(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a injectRewards(axfer,uint64,uint64)void method call against the InjectedRewardsPool contract
       */
      injectRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.injectRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a stake(axfer,uint64)void method call against the InjectedRewardsPool contract
       */
      stake(params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.stake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a accrueRewards()void method call against the InjectedRewardsPool contract
       */
      accrueRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.accrueRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a claimRewards()void method call against the InjectedRewardsPool contract
       */
      claimRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.claimRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a unstake(uint64)void method call against the InjectedRewardsPool contract
       */
      unstake(params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.unstake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gas()void method call against the InjectedRewardsPool contract
       */
      gas(params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gas(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the InjectedRewardsPool contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as InjectedRewardsPoolComposer
  }
}
export type InjectedRewardsPoolComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the initApplication(uint64,uint64,pay)void ABI method.
   *
  * Initializes the staking pool application with the specified staked asset and reward asset.
  
  
  Sets up global state variables, verifies the initial funding payment, and opts the contract into the staked asset
  and reward asset if necesary.
  Only the admin address can call this function.

   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initApplication(params?: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,pay)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,pay)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['initApplication(uint64,uint64,pay)void'] | undefined]>

  /**
   * Calls the updateAdminAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateAdminAddress(params?: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['updateAdminAddress(address)void'] | undefined]>

  /**
   * Calls the getMBRForPoolCreation()(uint64) ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getMbrForPoolCreation(params?: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'] | undefined]>

  /**
   * Calls the initStorage(pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initStorage(params?: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['initStorage(pay)void'] | undefined]>

  /**
   * Calls the injectRewards(axfer,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  injectRewards(params?: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'] | undefined]>

  /**
   * Calls the stake(axfer,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  stake(params?: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['stake(axfer,uint64)void'] | undefined]>

  /**
   * Calls the accrueRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  accrueRewards(params?: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['accrueRewards()void'] | undefined]>

  /**
   * Calls the claimRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  claimRewards(params?: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['claimRewards()void'] | undefined]>

  /**
   * Calls the unstake(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  unstake(params?: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['unstake(uint64)void'] | undefined]>

  /**
   * Calls the gas()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gas(params?: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['gas()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the InjectedRewardsPool smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the InjectedRewardsPool smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): InjectedRewardsPoolComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): InjectedRewardsPoolComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<InjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<InjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<InjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<InjectedRewardsPoolComposerResults<TReturns>>
}
export type InjectedRewardsPoolComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

