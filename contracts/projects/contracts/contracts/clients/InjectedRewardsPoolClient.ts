/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"InjectedRewardsPool","desc":"","methods":[{"name":"createApplication","args":[{"name":"adminAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"initApplication","args":[{"name":"stakedAsset","type":"uint64"},{"name":"rewardAssetId","type":"uint64"},{"name":"minStakePeriodForRewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateMinStakePeriod","args":[{"name":"minStakePeriodForRewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateAdminAddress","args":[{"name":"adminAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getMBRForPoolCreation","args":[],"returns":{"type":"(uint64)","struct":"mbrReturn"},"actions":{"create":[],"call":["NoOp"]}},{"name":"initStorage","args":[{"name":"mbrPayment","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"injectRewards","args":[{"name":"rewardTxn","type":"axfer"},{"name":"quantity","type":"uint64"},{"name":"rewardAssetId","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"injectAlgoRewards","args":[{"name":"payTxn","type":"pay"},{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}},{"name":"stake","args":[{"name":"stakeTxn","type":"axfer"},{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"accrueRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"claimRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"unstake","args":[{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setFreeze","args":[{"name":"enabled","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gas","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{"mbrReturn":[{"name":"mbrPayment","type":"uint64"}]},"state":{"schema":{"global":{"bytes":2,"ints":9},"local":{"bytes":0,"ints":0}},"keys":{"global":{"stakedAssetId":{"key":"c3Rha2VkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"rewardAssetId":{"key":"cmV3YXJkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"minStakePeriodForRewards":{"key":"bWluU3Rha2VQZXJpb2RGb3JSZXdhcmRz","keyType":"AVMBytes","valueType":"uint64"},"totalStaked":{"key":"dG90YWxTdGFrZWQ=","keyType":"AVMBytes","valueType":"uint64"},"algoInjectedRewards":{"key":"YWxnb0luamVjdGVkUmV3YXJkcw==","keyType":"AVMBytes","valueType":"uint64"},"injectedASARewards":{"key":"aW5qZWN0ZWRBU0FSZXdhcmRz","keyType":"AVMBytes","valueType":"uint64"},"lastRewardInjectionTime":{"key":"bGFzdFJld2FyZEluamVjdGlvblRpbWU=","keyType":"AVMBytes","valueType":"uint64"},"adminAddress":{"key":"YWRtaW5BZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"minimumBalance":{"key":"bWluaW11bUJhbGFuY2U=","keyType":"AVMBytes","valueType":"uint64"},"numStakers":{"key":"bnVtU3Rha2Vycw==","keyType":"AVMBytes","valueType":"uint64"},"freeze":{"key":"ZnJlZXpl","keyType":"AVMBytes","valueType":"bool"}},"local":{},"box":{"stakers":{"key":"c3Rha2Vycw==","keyType":"AVMBytes","valueType":"(address,uint64,uint64,uint64,uint64,uint64,uint64,uint64)[250]"}}},"maps":{"global":{},"local":{},"box":{}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[0]},{"teal":2,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32]},{"teal":3,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217]},{"teal":15,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[218,219]},{"teal":16,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[220]},{"teal":17,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[221]},{"teal":18,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[222]},{"teal":19,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[223,224]},{"teal":20,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[225]},{"teal":21,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251]},{"teal":25,"source":"contracts/InjectedRewardsPool.algo.ts:23","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[252]},{"teal":30,"source":"contracts/InjectedRewardsPool.algo.ts:55","pc":[253,254,255]},{"teal":31,"source":"contracts/InjectedRewardsPool.algo.ts:55","pc":[256]},{"teal":32,"source":"contracts/InjectedRewardsPool.algo.ts:55","pc":[257]},{"teal":33,"source":"contracts/InjectedRewardsPool.algo.ts:55","pc":[258,259]},{"teal":34,"source":"contracts/InjectedRewardsPool.algo.ts:55","pc":[260]},{"teal":37,"source":"contracts/InjectedRewardsPool.algo.ts:55","errorMessage":"argument 0 (adminAddress) for createApplication must be a address","pc":[261]},{"teal":40,"source":"contracts/InjectedRewardsPool.algo.ts:54","pc":[262,263,264]},{"teal":41,"source":"contracts/InjectedRewardsPool.algo.ts:54","pc":[265]},{"teal":42,"source":"contracts/InjectedRewardsPool.algo.ts:54","pc":[266]},{"teal":46,"source":"contracts/InjectedRewardsPool.algo.ts:54","pc":[267,268,269]},{"teal":50,"source":"contracts/InjectedRewardsPool.algo.ts:57","pc":[270,271]},{"teal":51,"source":"contracts/InjectedRewardsPool.algo.ts:57","pc":[272,273]},{"teal":52,"source":"contracts/InjectedRewardsPool.algo.ts:57","pc":[274]},{"teal":53,"source":"contracts/InjectedRewardsPool.algo.ts:54","pc":[275]},{"teal":58,"source":"contracts/InjectedRewardsPool.algo.ts:63","pc":[276,277,278]},{"teal":59,"source":"contracts/InjectedRewardsPool.algo.ts:63","pc":[279]},{"teal":62,"source":"contracts/InjectedRewardsPool.algo.ts:62","pc":[280,281,282]},{"teal":63,"source":"contracts/InjectedRewardsPool.algo.ts:62","pc":[283]},{"teal":66,"source":"contracts/InjectedRewardsPool.algo.ts:61","pc":[284,285,286]},{"teal":67,"source":"contracts/InjectedRewardsPool.algo.ts:61","pc":[287]},{"teal":70,"source":"contracts/InjectedRewardsPool.algo.ts:60","pc":[288,289,290]},{"teal":71,"source":"contracts/InjectedRewardsPool.algo.ts:60","pc":[291]},{"teal":72,"source":"contracts/InjectedRewardsPool.algo.ts:60","pc":[292]},{"teal":76,"source":"contracts/InjectedRewardsPool.algo.ts:60","pc":[293,294,295]},{"teal":80,"source":"contracts/InjectedRewardsPool.algo.ts:65","pc":[296,297]},{"teal":81,"source":"contracts/InjectedRewardsPool.algo.ts:65","pc":[298,299]},{"teal":82,"source":"contracts/InjectedRewardsPool.algo.ts:65","pc":[300]},{"teal":83,"source":"contracts/InjectedRewardsPool.algo.ts:65","pc":[301]},{"teal":86,"source":"contracts/InjectedRewardsPool.algo.ts:65","errorMessage":"Only admin can init application","pc":[302]},{"teal":90,"source":"contracts/InjectedRewardsPool.algo.ts:67","pc":[303,304]},{"teal":91,"source":"contracts/InjectedRewardsPool.algo.ts:67","pc":[305,306]},{"teal":92,"source":"contracts/InjectedRewardsPool.algo.ts:67","pc":[307]},{"teal":96,"source":"contracts/InjectedRewardsPool.algo.ts:68","pc":[308,309]},{"teal":97,"source":"contracts/InjectedRewardsPool.algo.ts:68","pc":[310,311]},{"teal":98,"source":"contracts/InjectedRewardsPool.algo.ts:68","pc":[312]},{"teal":102,"source":"contracts/InjectedRewardsPool.algo.ts:69","pc":[313,314]},{"teal":103,"source":"contracts/InjectedRewardsPool.algo.ts:69","pc":[315]},{"teal":104,"source":"contracts/InjectedRewardsPool.algo.ts:69","pc":[316]},{"teal":108,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[317,318]},{"teal":109,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[319,320]},{"teal":110,"source":"contracts/InjectedRewardsPool.algo.ts:70","pc":[321]},{"teal":114,"source":"contracts/InjectedRewardsPool.algo.ts:71","pc":[322,323]},{"teal":115,"source":"contracts/InjectedRewardsPool.algo.ts:71","pc":[324]},{"teal":116,"source":"contracts/InjectedRewardsPool.algo.ts:71","pc":[325]},{"teal":120,"source":"contracts/InjectedRewardsPool.algo.ts:72","pc":[326,327]},{"teal":121,"source":"contracts/InjectedRewardsPool.algo.ts:72","pc":[328]},{"teal":122,"source":"contracts/InjectedRewardsPool.algo.ts:72","pc":[329,330]},{"teal":123,"source":"contracts/InjectedRewardsPool.algo.ts:72","pc":[331]},{"teal":124,"source":"contracts/InjectedRewardsPool.algo.ts:72","pc":[332,333]},{"teal":125,"source":"contracts/InjectedRewardsPool.algo.ts:72","pc":[334]},{"teal":126,"source":"contracts/InjectedRewardsPool.algo.ts:72","pc":[335]},{"teal":130,"source":"contracts/InjectedRewardsPool.algo.ts:73","pc":[336,337]},{"teal":131,"source":"contracts/InjectedRewardsPool.algo.ts:73","pc":[338]},{"teal":132,"source":"contracts/InjectedRewardsPool.algo.ts:73","pc":[339]},{"teal":136,"source":"contracts/InjectedRewardsPool.algo.ts:74","pc":[340,341]},{"teal":137,"source":"contracts/InjectedRewardsPool.algo.ts:74","pc":[342]},{"teal":138,"source":"contracts/InjectedRewardsPool.algo.ts:74","pc":[343]},{"teal":142,"source":"contracts/InjectedRewardsPool.algo.ts:75","pc":[344,345]},{"teal":143,"source":"contracts/InjectedRewardsPool.algo.ts:75","pc":[346]},{"teal":144,"source":"contracts/InjectedRewardsPool.algo.ts:75","pc":[347]},{"teal":152,"source":"contracts/InjectedRewardsPool.algo.ts:77","pc":[348]},{"teal":153,"source":"contracts/InjectedRewardsPool.algo.ts:77","pc":[349,350]},{"teal":154,"source":"contracts/InjectedRewardsPool.algo.ts:77","pc":[351,352]},{"teal":158,"source":"contracts/InjectedRewardsPool.algo.ts:78","pc":[353,354]},{"teal":159,"source":"contracts/InjectedRewardsPool.algo.ts:78","pc":[355,356]},{"teal":163,"source":"contracts/InjectedRewardsPool.algo.ts:79","pc":[357,358]},{"teal":164,"source":"contracts/InjectedRewardsPool.algo.ts:79","pc":[359,360]},{"teal":168,"source":"contracts/InjectedRewardsPool.algo.ts:80","pc":[361]},{"teal":169,"source":"contracts/InjectedRewardsPool.algo.ts:80","pc":[362,363]},{"teal":172,"source":"contracts/InjectedRewardsPool.algo.ts:77","pc":[364]},{"teal":173,"source":"contracts/InjectedRewardsPool.algo.ts:77","pc":[365,366]},{"teal":176,"source":"contracts/InjectedRewardsPool.algo.ts:77","pc":[367]},{"teal":177,"source":"contracts/InjectedRewardsPool.algo.ts:60","pc":[368]},{"teal":182,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[369,370,371]},{"teal":183,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[372]},{"teal":186,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[373,374,375]},{"teal":187,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[376]},{"teal":188,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[377]},{"teal":192,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[378,379,380]},{"teal":196,"source":"contracts/InjectedRewardsPool.algo.ts:86","pc":[381,382]},{"teal":197,"source":"contracts/InjectedRewardsPool.algo.ts:86","pc":[383,384]},{"teal":198,"source":"contracts/InjectedRewardsPool.algo.ts:86","pc":[385]},{"teal":199,"source":"contracts/InjectedRewardsPool.algo.ts:86","pc":[386]},{"teal":202,"source":"contracts/InjectedRewardsPool.algo.ts:86","errorMessage":"Only admin can update min stake period","pc":[387]},{"teal":206,"source":"contracts/InjectedRewardsPool.algo.ts:87","pc":[388,389]},{"teal":207,"source":"contracts/InjectedRewardsPool.algo.ts:87","pc":[390,391]},{"teal":208,"source":"contracts/InjectedRewardsPool.algo.ts:87","pc":[392]},{"teal":209,"source":"contracts/InjectedRewardsPool.algo.ts:85","pc":[393]},{"teal":214,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[394,395,396]},{"teal":215,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[397]},{"teal":216,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[398]},{"teal":217,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[399,400]},{"teal":218,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[401]},{"teal":221,"source":"contracts/InjectedRewardsPool.algo.ts:89","errorMessage":"argument 0 (adminAddress) for updateAdminAddress must be a address","pc":[402]},{"teal":224,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[403,404,405]},{"teal":225,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[406]},{"teal":226,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[407]},{"teal":230,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[408,409,410]},{"teal":234,"source":"contracts/InjectedRewardsPool.algo.ts:90","pc":[411,412]},{"teal":235,"source":"contracts/InjectedRewardsPool.algo.ts:90","pc":[413,414]},{"teal":236,"source":"contracts/InjectedRewardsPool.algo.ts:90","pc":[415]},{"teal":237,"source":"contracts/InjectedRewardsPool.algo.ts:90","pc":[416]},{"teal":240,"source":"contracts/InjectedRewardsPool.algo.ts:90","errorMessage":"Only admin can update admin address","pc":[417]},{"teal":244,"source":"contracts/InjectedRewardsPool.algo.ts:91","pc":[418,419]},{"teal":245,"source":"contracts/InjectedRewardsPool.algo.ts:91","pc":[420,421]},{"teal":246,"source":"contracts/InjectedRewardsPool.algo.ts:91","pc":[422]},{"teal":247,"source":"contracts/InjectedRewardsPool.algo.ts:89","pc":[423]},{"teal":251,"source":"contracts/InjectedRewardsPool.algo.ts:94","pc":[424,425,426]},{"teal":255,"source":"contracts/InjectedRewardsPool.algo.ts:98","pc":[427,428,429]},{"teal":256,"source":"contracts/InjectedRewardsPool.algo.ts:98","pc":[430,431]},{"teal":257,"source":"contracts/InjectedRewardsPool.algo.ts:98","pc":[432,433,434]},{"teal":258,"source":"contracts/InjectedRewardsPool.algo.ts:98","pc":[435]},{"teal":259,"source":"contracts/InjectedRewardsPool.algo.ts:98","pc":[436]},{"teal":260,"source":"contracts/InjectedRewardsPool.algo.ts:94","pc":[437]},{"teal":265,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[438,439,440,441,442,443]},{"teal":268,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[444,445,446]},{"teal":269,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[447]},{"teal":270,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[448]},{"teal":271,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[449]},{"teal":272,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[450]},{"teal":276,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[451,452,453]},{"teal":279,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[454]},{"teal":280,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[455]},{"teal":284,"source":"contracts/InjectedRewardsPool.algo.ts:102","pc":[456]},{"teal":285,"source":"contracts/InjectedRewardsPool.algo.ts:102","pc":[457,458]},{"teal":290,"source":"contracts/InjectedRewardsPool.algo.ts:103","pc":[459,460]},{"teal":291,"source":"contracts/InjectedRewardsPool.algo.ts:103","pc":[461]},{"teal":292,"source":"contracts/InjectedRewardsPool.algo.ts:103","pc":[462]},{"teal":293,"source":"contracts/InjectedRewardsPool.algo.ts:103","pc":[463]},{"teal":294,"source":"contracts/InjectedRewardsPool.algo.ts:103","pc":[464,465,466]},{"teal":299,"source":"contracts/InjectedRewardsPool.algo.ts:104","pc":[467,468]},{"teal":300,"source":"contracts/InjectedRewardsPool.algo.ts:104","pc":[469,470]},{"teal":301,"source":"contracts/InjectedRewardsPool.algo.ts:104","pc":[471]},{"teal":302,"source":"contracts/InjectedRewardsPool.algo.ts:104","pc":[472,473]},{"teal":310,"source":"contracts/InjectedRewardsPool.algo.ts:106","pc":[474,475]},{"teal":311,"source":"contracts/InjectedRewardsPool.algo.ts:107","pc":[476,477]},{"teal":312,"source":"contracts/InjectedRewardsPool.algo.ts:106","pc":[478]},{"teal":313,"source":"contracts/InjectedRewardsPool.algo.ts:108","pc":[479,480]},{"teal":314,"source":"contracts/InjectedRewardsPool.algo.ts:108","pc":[481,482,483]},{"teal":315,"source":"contracts/InjectedRewardsPool.algo.ts:107","pc":[484]},{"teal":316,"source":"contracts/InjectedRewardsPool.algo.ts:109","pc":[485,486]},{"teal":317,"source":"contracts/InjectedRewardsPool.algo.ts:109","pc":[487,488,489]},{"teal":318,"source":"contracts/InjectedRewardsPool.algo.ts:108","pc":[490]},{"teal":319,"source":"contracts/InjectedRewardsPool.algo.ts:106","pc":[491,492]},{"teal":325,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[493,494]},{"teal":326,"source":"contracts/InjectedRewardsPool.algo.ts:112","pc":[495]},{"teal":329,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[496,497]},{"teal":332,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[498,499]},{"teal":333,"source":"contracts/InjectedRewardsPool.algo.ts:101","pc":[500]},{"teal":338,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[501,502]},{"teal":339,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[503]},{"teal":340,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[504]},{"teal":341,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[505]},{"teal":342,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[506,507]},{"teal":343,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[508]},{"teal":344,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[509]},{"teal":347,"source":"contracts/InjectedRewardsPool.algo.ts:116","errorMessage":"argument 0 (mbrPayment) for initStorage must be a pay transaction","pc":[510]},{"teal":350,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[511,512,513]},{"teal":351,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[514]},{"teal":352,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[515]},{"teal":356,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[516,517,518]},{"teal":359,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[519]},{"teal":360,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[520]},{"teal":364,"source":"contracts/InjectedRewardsPool.algo.ts:117","pc":[521]},{"teal":365,"source":"contracts/InjectedRewardsPool.algo.ts:117","pc":[522]},{"teal":366,"source":"contracts/InjectedRewardsPool.algo.ts:117","pc":[523]},{"teal":367,"source":"contracts/InjectedRewardsPool.algo.ts:117","pc":[524]},{"teal":368,"source":"contracts/InjectedRewardsPool.algo.ts:117","pc":[525]},{"teal":371,"source":"contracts/InjectedRewardsPool.algo.ts:117","errorMessage":"staking pool already initialized","pc":[526]},{"teal":375,"source":"contracts/InjectedRewardsPool.algo.ts:118","pc":[527,528]},{"teal":376,"source":"contracts/InjectedRewardsPool.algo.ts:118","pc":[529,530]},{"teal":377,"source":"contracts/InjectedRewardsPool.algo.ts:118","pc":[531]},{"teal":378,"source":"contracts/InjectedRewardsPool.algo.ts:118","pc":[532]},{"teal":381,"source":"contracts/InjectedRewardsPool.algo.ts:118","errorMessage":"Only admin can init storage","pc":[533]},{"teal":385,"source":"contracts/InjectedRewardsPool.algo.ts:120","pc":[534]},{"teal":386,"source":"contracts/InjectedRewardsPool.algo.ts:120","pc":[535,536]},{"teal":391,"source":"contracts/InjectedRewardsPool.algo.ts:121","pc":[537,538]},{"teal":392,"source":"contracts/InjectedRewardsPool.algo.ts:121","pc":[539]},{"teal":393,"source":"contracts/InjectedRewardsPool.algo.ts:121","pc":[540]},{"teal":394,"source":"contracts/InjectedRewardsPool.algo.ts:121","pc":[541]},{"teal":395,"source":"contracts/InjectedRewardsPool.algo.ts:121","pc":[542,543,544]},{"teal":400,"source":"contracts/InjectedRewardsPool.algo.ts:122","pc":[545,546]},{"teal":401,"source":"contracts/InjectedRewardsPool.algo.ts:122","pc":[547,548]},{"teal":402,"source":"contracts/InjectedRewardsPool.algo.ts:122","pc":[549]},{"teal":403,"source":"contracts/InjectedRewardsPool.algo.ts:122","pc":[550,551]},{"teal":411,"source":"contracts/InjectedRewardsPool.algo.ts:124","pc":[552,553]},{"teal":412,"source":"contracts/InjectedRewardsPool.algo.ts:125","pc":[554,555]},{"teal":413,"source":"contracts/InjectedRewardsPool.algo.ts:124","pc":[556]},{"teal":414,"source":"contracts/InjectedRewardsPool.algo.ts:126","pc":[557,558]},{"teal":415,"source":"contracts/InjectedRewardsPool.algo.ts:126","pc":[559,560,561]},{"teal":416,"source":"contracts/InjectedRewardsPool.algo.ts:125","pc":[562]},{"teal":417,"source":"contracts/InjectedRewardsPool.algo.ts:127","pc":[563,564]},{"teal":418,"source":"contracts/InjectedRewardsPool.algo.ts:127","pc":[565,566,567]},{"teal":419,"source":"contracts/InjectedRewardsPool.algo.ts:126","pc":[568]},{"teal":420,"source":"contracts/InjectedRewardsPool.algo.ts:124","pc":[569,570]},{"teal":425,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[571,572]},{"teal":426,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[573,574]},{"teal":427,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[575,576]},{"teal":428,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[577]},{"teal":431,"source":"contracts/InjectedRewardsPool.algo.ts:130","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[578]},{"teal":434,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[579,580]},{"teal":435,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[581,582]},{"teal":436,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[583,584]},{"teal":437,"source":"contracts/InjectedRewardsPool.algo.ts:130","pc":[585]},{"teal":440,"source":"contracts/InjectedRewardsPool.algo.ts:130","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"amount\",\"expected\":\"poolMBR\"}","pc":[586]},{"teal":444,"source":"contracts/InjectedRewardsPool.algo.ts:131","pc":[587]},{"teal":445,"source":"contracts/InjectedRewardsPool.algo.ts:131","pc":[588,589,590,591]},{"teal":446,"source":"contracts/InjectedRewardsPool.algo.ts:131","pc":[592]},{"teal":447,"source":"contracts/InjectedRewardsPool.algo.ts:131","pc":[593]},{"teal":451,"source":"contracts/InjectedRewardsPool.algo.ts:132","pc":[594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609]},{"teal":452,"source":"contracts/InjectedRewardsPool.algo.ts:132","pc":[610,611]},{"teal":453,"source":"contracts/InjectedRewardsPool.algo.ts:132","pc":[612]},{"teal":458,"source":"contracts/InjectedRewardsPool.algo.ts:134","pc":[613,614]},{"teal":459,"source":"contracts/InjectedRewardsPool.algo.ts:134","pc":[615]},{"teal":460,"source":"contracts/InjectedRewardsPool.algo.ts:134","pc":[616]},{"teal":461,"source":"contracts/InjectedRewardsPool.algo.ts:134","pc":[617,618,619]},{"teal":470,"source":"contracts/InjectedRewardsPool.algo.ts:136","pc":[620]},{"teal":471,"source":"contracts/InjectedRewardsPool.algo.ts:136","pc":[621,622]},{"teal":472,"source":"contracts/InjectedRewardsPool.algo.ts:136","pc":[623,624]},{"teal":476,"source":"contracts/InjectedRewardsPool.algo.ts:137","pc":[625,626]},{"teal":477,"source":"contracts/InjectedRewardsPool.algo.ts:137","pc":[627]},{"teal":478,"source":"contracts/InjectedRewardsPool.algo.ts:137","pc":[628,629]},{"teal":482,"source":"contracts/InjectedRewardsPool.algo.ts:138","pc":[630,631]},{"teal":483,"source":"contracts/InjectedRewardsPool.algo.ts:138","pc":[632,633]},{"teal":487,"source":"contracts/InjectedRewardsPool.algo.ts:139","pc":[634]},{"teal":488,"source":"contracts/InjectedRewardsPool.algo.ts:139","pc":[635,636]},{"teal":491,"source":"contracts/InjectedRewardsPool.algo.ts:136","pc":[637]},{"teal":492,"source":"contracts/InjectedRewardsPool.algo.ts:136","pc":[638,639]},{"teal":495,"source":"contracts/InjectedRewardsPool.algo.ts:136","pc":[640]},{"teal":498,"source":"contracts/InjectedRewardsPool.algo.ts:116","pc":[641]},{"teal":503,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[642,643,644]},{"teal":504,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[645]},{"teal":507,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[646,647,648]},{"teal":508,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[649]},{"teal":511,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[650,651]},{"teal":512,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[652]},{"teal":513,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[653]},{"teal":514,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[654]},{"teal":515,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[655,656]},{"teal":516,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[657,658]},{"teal":517,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[659]},{"teal":520,"source":"contracts/InjectedRewardsPool.algo.ts:146","errorMessage":"argument 2 (rewardTxn) for injectRewards must be a axfer transaction","pc":[660]},{"teal":523,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[661,662,663]},{"teal":524,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[664]},{"teal":525,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[665]},{"teal":529,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[666,667,668]},{"teal":533,"source":"contracts/InjectedRewardsPool.algo.ts:147","pc":[669,670]},{"teal":534,"source":"contracts/InjectedRewardsPool.algo.ts:147","pc":[671,672]},{"teal":535,"source":"contracts/InjectedRewardsPool.algo.ts:147","pc":[673]},{"teal":536,"source":"contracts/InjectedRewardsPool.algo.ts:147","pc":[674]},{"teal":539,"source":"contracts/InjectedRewardsPool.algo.ts:147","errorMessage":"Only admin can inject rewards","pc":[675]},{"teal":549,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[676,677]},{"teal":550,"source":"contracts/InjectedRewardsPool.algo.ts:150","pc":[678,679]},{"teal":551,"source":"contracts/InjectedRewardsPool.algo.ts:150","pc":[680,681]},{"teal":552,"source":"contracts/InjectedRewardsPool.algo.ts:150","pc":[682]},{"teal":553,"source":"contracts/InjectedRewardsPool.algo.ts:150","pc":[683]},{"teal":556,"source":"contracts/InjectedRewardsPool.algo.ts:150","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"sender\",\"expected\":\"this.adminAddress.value\"}","pc":[684]},{"teal":559,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[685,686]},{"teal":560,"source":"contracts/InjectedRewardsPool.algo.ts:151","pc":[687,688]},{"teal":561,"source":"contracts/InjectedRewardsPool.algo.ts:151","pc":[689,690]},{"teal":562,"source":"contracts/InjectedRewardsPool.algo.ts:151","pc":[691]},{"teal":565,"source":"contracts/InjectedRewardsPool.algo.ts:151","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[692]},{"teal":568,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[693,694]},{"teal":569,"source":"contracts/InjectedRewardsPool.algo.ts:152","pc":[695,696]},{"teal":570,"source":"contracts/InjectedRewardsPool.algo.ts:152","pc":[697,698]},{"teal":571,"source":"contracts/InjectedRewardsPool.algo.ts:152","pc":[699]},{"teal":574,"source":"contracts/InjectedRewardsPool.algo.ts:152","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(rewardAssetId)\"}","pc":[700]},{"teal":577,"source":"contracts/InjectedRewardsPool.algo.ts:149","pc":[701,702]},{"teal":578,"source":"contracts/InjectedRewardsPool.algo.ts:153","pc":[703,704]},{"teal":579,"source":"contracts/InjectedRewardsPool.algo.ts:153","pc":[705,706]},{"teal":580,"source":"contracts/InjectedRewardsPool.algo.ts:153","pc":[707]},{"teal":583,"source":"contracts/InjectedRewardsPool.algo.ts:153","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[708]},{"teal":587,"source":"contracts/InjectedRewardsPool.algo.ts:155","pc":[709,710]},{"teal":588,"source":"contracts/InjectedRewardsPool.algo.ts:155","pc":[711]},{"teal":589,"source":"contracts/InjectedRewardsPool.algo.ts:155","pc":[712,713]},{"teal":590,"source":"contracts/InjectedRewardsPool.algo.ts:155","pc":[714]},{"teal":591,"source":"contracts/InjectedRewardsPool.algo.ts:155","pc":[715,716]},{"teal":592,"source":"contracts/InjectedRewardsPool.algo.ts:155","pc":[717]},{"teal":593,"source":"contracts/InjectedRewardsPool.algo.ts:155","pc":[718]},{"teal":597,"source":"contracts/InjectedRewardsPool.algo.ts:156","pc":[719,720]},{"teal":598,"source":"contracts/InjectedRewardsPool.algo.ts:156","pc":[721,722]},{"teal":599,"source":"contracts/InjectedRewardsPool.algo.ts:156","pc":[723]},{"teal":600,"source":"contracts/InjectedRewardsPool.algo.ts:146","pc":[724]},{"teal":605,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[725,726,727]},{"teal":606,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[728]},{"teal":609,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[729,730]},{"teal":610,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[731]},{"teal":611,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[732]},{"teal":612,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[733]},{"teal":613,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[734,735]},{"teal":614,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[736]},{"teal":615,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[737]},{"teal":618,"source":"contracts/InjectedRewardsPool.algo.ts:159","errorMessage":"argument 1 (payTxn) for injectAlgoRewards must be a pay transaction","pc":[738]},{"teal":621,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[739,740,741]},{"teal":622,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[742]},{"teal":623,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[743]},{"teal":627,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[744,745,746]},{"teal":631,"source":"contracts/InjectedRewardsPool.algo.ts:160","pc":[747,748]},{"teal":632,"source":"contracts/InjectedRewardsPool.algo.ts:160","pc":[749,750]},{"teal":633,"source":"contracts/InjectedRewardsPool.algo.ts:160","pc":[751]},{"teal":634,"source":"contracts/InjectedRewardsPool.algo.ts:160","pc":[752]},{"teal":637,"source":"contracts/InjectedRewardsPool.algo.ts:160","errorMessage":"Only admin can inject rewards","pc":[753]},{"teal":645,"source":"contracts/InjectedRewardsPool.algo.ts:162","pc":[754,755]},{"teal":646,"source":"contracts/InjectedRewardsPool.algo.ts:163","pc":[756,757]},{"teal":647,"source":"contracts/InjectedRewardsPool.algo.ts:163","pc":[758,759]},{"teal":648,"source":"contracts/InjectedRewardsPool.algo.ts:163","pc":[760]},{"teal":651,"source":"contracts/InjectedRewardsPool.algo.ts:163","errorMessage":"transaction verification failed: {\"txn\":\"payTxn\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[761]},{"teal":654,"source":"contracts/InjectedRewardsPool.algo.ts:162","pc":[762,763]},{"teal":655,"source":"contracts/InjectedRewardsPool.algo.ts:164","pc":[764,765]},{"teal":656,"source":"contracts/InjectedRewardsPool.algo.ts:164","pc":[766,767]},{"teal":657,"source":"contracts/InjectedRewardsPool.algo.ts:164","pc":[768]},{"teal":660,"source":"contracts/InjectedRewardsPool.algo.ts:164","errorMessage":"transaction verification failed: {\"txn\":\"payTxn\",\"field\":\"amount\",\"expected\":\"quantity\"}","pc":[769]},{"teal":664,"source":"contracts/InjectedRewardsPool.algo.ts:167","pc":[770,771]},{"teal":665,"source":"contracts/InjectedRewardsPool.algo.ts:167","pc":[772]},{"teal":666,"source":"contracts/InjectedRewardsPool.algo.ts:167","pc":[773,774]},{"teal":667,"source":"contracts/InjectedRewardsPool.algo.ts:167","pc":[775]},{"teal":668,"source":"contracts/InjectedRewardsPool.algo.ts:167","pc":[776,777]},{"teal":669,"source":"contracts/InjectedRewardsPool.algo.ts:167","pc":[778]},{"teal":670,"source":"contracts/InjectedRewardsPool.algo.ts:167","pc":[779]},{"teal":674,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[780,781]},{"teal":675,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[782,783]},{"teal":676,"source":"contracts/InjectedRewardsPool.algo.ts:168","pc":[784]},{"teal":677,"source":"contracts/InjectedRewardsPool.algo.ts:159","pc":[785]},{"teal":682,"source":"contracts/InjectedRewardsPool.algo.ts:172","pc":[786,787,788]},{"teal":683,"source":"contracts/InjectedRewardsPool.algo.ts:172","pc":[789]},{"teal":684,"source":"contracts/InjectedRewardsPool.algo.ts:172","pc":[790]},{"teal":688,"source":"contracts/InjectedRewardsPool.algo.ts:172","pc":[791,792,793]},{"teal":692,"source":"contracts/InjectedRewardsPool.algo.ts:173","pc":[794,795]},{"teal":693,"source":"contracts/InjectedRewardsPool.algo.ts:173","pc":[796,797]},{"teal":694,"source":"contracts/InjectedRewardsPool.algo.ts:173","pc":[798]},{"teal":695,"source":"contracts/InjectedRewardsPool.algo.ts:173","pc":[799]},{"teal":698,"source":"contracts/InjectedRewardsPool.algo.ts:173","errorMessage":"Only admin can delete application","pc":[800]},{"teal":699,"source":"contracts/InjectedRewardsPool.algo.ts:172","pc":[801]},{"teal":704,"source":"contracts/InjectedRewardsPool.algo.ts:186","pc":[802,803,804]},{"teal":705,"source":"contracts/InjectedRewardsPool.algo.ts:186","pc":[805]},{"teal":708,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[806,807]},{"teal":709,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[808]},{"teal":710,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[809]},{"teal":711,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[810]},{"teal":712,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[811,812]},{"teal":713,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[813,814]},{"teal":714,"source":"contracts/InjectedRewardsPool.algo.ts:185","pc":[815]},{"teal":717,"source":"contracts/InjectedRewardsPool.algo.ts:185","errorMessage":"argument 1 (stakeTxn) for stake must be a axfer transaction","pc":[816]},{"teal":720,"source":"contracts/InjectedRewardsPool.algo.ts:184","pc":[817,818,819]},{"teal":721,"source":"contracts/InjectedRewardsPool.algo.ts:184","pc":[820]},{"teal":722,"source":"contracts/InjectedRewardsPool.algo.ts:184","pc":[821]},{"teal":726,"source":"contracts/InjectedRewardsPool.algo.ts:184","pc":[822,823,824]},{"teal":729,"source":"contracts/InjectedRewardsPool.algo.ts:184","pc":[825]},{"teal":730,"source":"contracts/InjectedRewardsPool.algo.ts:184","pc":[826,827]},{"teal":734,"source":"contracts/InjectedRewardsPool.algo.ts:188","pc":[828,829]},{"teal":735,"source":"contracts/InjectedRewardsPool.algo.ts:188","pc":[830,831]},{"teal":739,"source":"contracts/InjectedRewardsPool.algo.ts:189","pc":[832,833]},{"teal":740,"source":"contracts/InjectedRewardsPool.algo.ts:189","pc":[834]},{"teal":741,"source":"contracts/InjectedRewardsPool.algo.ts:189","pc":[835]},{"teal":744,"source":"contracts/InjectedRewardsPool.algo.ts:189","errorMessage":"Invalid quantity","pc":[836]},{"teal":749,"source":"contracts/InjectedRewardsPool.algo.ts:190","pc":[837,838]},{"teal":750,"source":"contracts/InjectedRewardsPool.algo.ts:190","pc":[839,840]},{"teal":751,"source":"contracts/InjectedRewardsPool.algo.ts:190","pc":[841]},{"teal":752,"source":"contracts/InjectedRewardsPool.algo.ts:190","pc":[842,843,844]},{"teal":757,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[845]},{"teal":758,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[846]},{"teal":759,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[847,848]},{"teal":760,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[849]},{"teal":761,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[850,851]},{"teal":762,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[852]},{"teal":763,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[853]},{"teal":764,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[854,855]},{"teal":765,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[856,857]},{"teal":766,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[858,859]},{"teal":767,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[860,861]},{"teal":768,"source":"contracts/InjectedRewardsPool.algo.ts:191","pc":[862]},{"teal":779,"source":"contracts/InjectedRewardsPool.algo.ts:193","pc":[863,864]},{"teal":780,"source":"contracts/InjectedRewardsPool.algo.ts:194","pc":[865,866]},{"teal":781,"source":"contracts/InjectedRewardsPool.algo.ts:194","pc":[867,868]},{"teal":782,"source":"contracts/InjectedRewardsPool.algo.ts:194","pc":[869]},{"teal":785,"source":"contracts/InjectedRewardsPool.algo.ts:194","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}","pc":[870]},{"teal":788,"source":"contracts/InjectedRewardsPool.algo.ts:193","pc":[871,872]},{"teal":789,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[873,874]},{"teal":790,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[875,876]},{"teal":791,"source":"contracts/InjectedRewardsPool.algo.ts:195","pc":[877]},{"teal":794,"source":"contracts/InjectedRewardsPool.algo.ts:195","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[878]},{"teal":797,"source":"contracts/InjectedRewardsPool.algo.ts:193","pc":[879,880]},{"teal":798,"source":"contracts/InjectedRewardsPool.algo.ts:196","pc":[881,882]},{"teal":799,"source":"contracts/InjectedRewardsPool.algo.ts:196","pc":[883,884]},{"teal":800,"source":"contracts/InjectedRewardsPool.algo.ts:196","pc":[885]},{"teal":801,"source":"contracts/InjectedRewardsPool.algo.ts:196","pc":[886]},{"teal":804,"source":"contracts/InjectedRewardsPool.algo.ts:196","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.stakedAssetId.value)\"}","pc":[887]},{"teal":807,"source":"contracts/InjectedRewardsPool.algo.ts:193","pc":[888,889]},{"teal":808,"source":"contracts/InjectedRewardsPool.algo.ts:197","pc":[890,891]},{"teal":809,"source":"contracts/InjectedRewardsPool.algo.ts:197","pc":[892,893]},{"teal":810,"source":"contracts/InjectedRewardsPool.algo.ts:197","pc":[894]},{"teal":813,"source":"contracts/InjectedRewardsPool.algo.ts:197","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[895]},{"teal":817,"source":"contracts/InjectedRewardsPool.algo.ts:199","pc":[896]},{"teal":818,"source":"contracts/InjectedRewardsPool.algo.ts:199","pc":[897,898]},{"teal":823,"source":"contracts/InjectedRewardsPool.algo.ts:200","pc":[899,900]},{"teal":824,"source":"contracts/InjectedRewardsPool.algo.ts:200","pc":[901,902]},{"teal":825,"source":"contracts/InjectedRewardsPool.algo.ts:200","pc":[903]},{"teal":826,"source":"contracts/InjectedRewardsPool.algo.ts:200","pc":[904,905,906]},{"teal":831,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[907]},{"teal":832,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[908]},{"teal":833,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[909,910]},{"teal":834,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[911]},{"teal":835,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[912,913]},{"teal":836,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[914]},{"teal":837,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[915]},{"teal":838,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[916,917]},{"teal":839,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[918,919]},{"teal":840,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[920,921]},{"teal":841,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[922,923]},{"teal":842,"source":"contracts/InjectedRewardsPool.algo.ts:201","pc":[924]},{"teal":847,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[925]},{"teal":848,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[926,927]},{"teal":853,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[928,929]},{"teal":854,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[930,931,932]},{"teal":855,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[933]},{"teal":856,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[934,935,936]},{"teal":861,"source":"contracts/InjectedRewardsPool.algo.ts:204","pc":[937,938]},{"teal":862,"source":"contracts/InjectedRewardsPool.algo.ts:204","pc":[939,940,941]},{"teal":865,"source":"contracts/InjectedRewardsPool.algo.ts:204","pc":[942,943,944]},{"teal":871,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[945,946]},{"teal":872,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[947]},{"teal":873,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[948]},{"teal":874,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[949]},{"teal":875,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[950]},{"teal":876,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[951,952]},{"teal":877,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[953]},{"teal":878,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[954,955]},{"teal":879,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[956]},{"teal":880,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[957,958]},{"teal":881,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[959]},{"teal":882,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[960,961,962]},{"teal":888,"source":"contracts/InjectedRewardsPool.algo.ts:209","pc":[963,964]},{"teal":889,"source":"contracts/InjectedRewardsPool.algo.ts:209","pc":[965,966]},{"teal":890,"source":"contracts/InjectedRewardsPool.algo.ts:209","pc":[967]},{"teal":891,"source":"contracts/InjectedRewardsPool.algo.ts:209","pc":[968,969,970]},{"teal":896,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[971]},{"teal":897,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[972]},{"teal":898,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[973,974]},{"teal":899,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[975]},{"teal":900,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[976,977]},{"teal":901,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[978]},{"teal":902,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[979]},{"teal":903,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[980,981]},{"teal":904,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[982,983]},{"teal":905,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[984,985]},{"teal":906,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[986,987]},{"teal":907,"source":"contracts/InjectedRewardsPool.algo.ts:210","pc":[988]},{"teal":912,"source":"contracts/InjectedRewardsPool.algo.ts:213","pc":[989,990]},{"teal":913,"source":"contracts/InjectedRewardsPool.algo.ts:213","pc":[991]},{"teal":914,"source":"contracts/InjectedRewardsPool.algo.ts:213","pc":[992]},{"teal":915,"source":"contracts/InjectedRewardsPool.algo.ts:213","pc":[993]},{"teal":916,"source":"contracts/InjectedRewardsPool.algo.ts:213","pc":[994]},{"teal":917,"source":"contracts/InjectedRewardsPool.algo.ts:213","pc":[995,996]},{"teal":918,"source":"contracts/InjectedRewardsPool.algo.ts:213","pc":[997]},{"teal":919,"source":"contracts/InjectedRewardsPool.algo.ts:213","pc":[998,999]},{"teal":923,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1000,1001]},{"teal":924,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1002,1003]},{"teal":925,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1004,1005]},{"teal":926,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1006,1007,1008]},{"teal":927,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1009]},{"teal":928,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1010,1011]},{"teal":929,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1012,1013]},{"teal":930,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1014]},{"teal":931,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1015]},{"teal":932,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1016]},{"teal":933,"source":"contracts/InjectedRewardsPool.algo.ts:214","pc":[1017,1018]},{"teal":938,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[1019,1020]},{"teal":939,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[1021,1022]},{"teal":940,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[1023]},{"teal":941,"source":"contracts/InjectedRewardsPool.algo.ts:216","pc":[1024,1025,1026]},{"teal":946,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1027]},{"teal":947,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1028]},{"teal":948,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1029,1030]},{"teal":949,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1031]},{"teal":950,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1032,1033]},{"teal":951,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1034]},{"teal":952,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1035]},{"teal":953,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1036,1037]},{"teal":954,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1038,1039]},{"teal":955,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1040,1041]},{"teal":956,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1042,1043]},{"teal":957,"source":"contracts/InjectedRewardsPool.algo.ts:217","pc":[1044]},{"teal":962,"source":"contracts/InjectedRewardsPool.algo.ts:219","pc":[1045,1046]},{"teal":963,"source":"contracts/InjectedRewardsPool.algo.ts:219","pc":[1047]},{"teal":964,"source":"contracts/InjectedRewardsPool.algo.ts:219","pc":[1048,1049]},{"teal":965,"source":"contracts/InjectedRewardsPool.algo.ts:219","pc":[1050,1051]},{"teal":969,"source":"contracts/InjectedRewardsPool.algo.ts:220","pc":[1052,1053]},{"teal":970,"source":"contracts/InjectedRewardsPool.algo.ts:220","pc":[1054,1055]},{"teal":971,"source":"contracts/InjectedRewardsPool.algo.ts:220","pc":[1056,1057]},{"teal":972,"source":"contracts/InjectedRewardsPool.algo.ts:220","pc":[1058]},{"teal":973,"source":"contracts/InjectedRewardsPool.algo.ts:220","pc":[1059]},{"teal":974,"source":"contracts/InjectedRewardsPool.algo.ts:220","pc":[1060,1061]},{"teal":979,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[1062,1063]},{"teal":980,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[1064,1065]},{"teal":981,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[1066]},{"teal":982,"source":"contracts/InjectedRewardsPool.algo.ts:221","pc":[1067,1068,1069]},{"teal":987,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1070]},{"teal":988,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1071]},{"teal":989,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1072,1073]},{"teal":990,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1074]},{"teal":991,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1075,1076]},{"teal":992,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1077]},{"teal":993,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1078]},{"teal":994,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1079,1080]},{"teal":995,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1081,1082]},{"teal":996,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1083,1084]},{"teal":997,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1085,1086]},{"teal":998,"source":"contracts/InjectedRewardsPool.algo.ts:222","pc":[1087]},{"teal":1003,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[1088,1089]},{"teal":1004,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[1090]},{"teal":1005,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[1091]},{"teal":1006,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[1092,1093]},{"teal":1007,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[1094]},{"teal":1008,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[1095,1096]},{"teal":1009,"source":"contracts/InjectedRewardsPool.algo.ts:224","pc":[1097]},{"teal":1014,"source":"contracts/InjectedRewardsPool.algo.ts:225","pc":[1098,1099]},{"teal":1015,"source":"contracts/InjectedRewardsPool.algo.ts:225","pc":[1100,1101]},{"teal":1016,"source":"contracts/InjectedRewardsPool.algo.ts:225","pc":[1102]},{"teal":1017,"source":"contracts/InjectedRewardsPool.algo.ts:225","pc":[1103,1104,1105]},{"teal":1022,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1106]},{"teal":1023,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1107]},{"teal":1024,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1108,1109]},{"teal":1025,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1110]},{"teal":1026,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1111,1112]},{"teal":1027,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1113]},{"teal":1028,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1114]},{"teal":1029,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1115,1116]},{"teal":1030,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1117,1118]},{"teal":1031,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1119,1120]},{"teal":1032,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1121,1122]},{"teal":1033,"source":"contracts/InjectedRewardsPool.algo.ts:226","pc":[1123]},{"teal":1038,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1124,1125]},{"teal":1039,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1126]},{"teal":1040,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1127,1128]},{"teal":1041,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1129,1130]},{"teal":1042,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1131]},{"teal":1043,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1132,1133]},{"teal":1044,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1134]},{"teal":1045,"source":"contracts/InjectedRewardsPool.algo.ts:228","pc":[1135]},{"teal":1049,"source":"contracts/InjectedRewardsPool.algo.ts:229","pc":[1136]},{"teal":1050,"source":"contracts/InjectedRewardsPool.algo.ts:229","pc":[1137,1138]},{"teal":1051,"source":"contracts/InjectedRewardsPool.algo.ts:206","pc":[1139,1140,1141]},{"teal":1056,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1142,1143]},{"teal":1057,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1144]},{"teal":1058,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1145]},{"teal":1059,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1146]},{"teal":1060,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1147]},{"teal":1061,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1148,1149]},{"teal":1062,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1150]},{"teal":1063,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1151,1152]},{"teal":1064,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1153]},{"teal":1065,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1154,1155]},{"teal":1066,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1156]},{"teal":1067,"source":"contracts/InjectedRewardsPool.algo.ts:231","pc":[1157,1158,1159]},{"teal":1073,"source":"contracts/InjectedRewardsPool.algo.ts:232","pc":[1160,1161]},{"teal":1074,"source":"contracts/InjectedRewardsPool.algo.ts:232","pc":[1162,1163]},{"teal":1075,"source":"contracts/InjectedRewardsPool.algo.ts:232","pc":[1164]},{"teal":1076,"source":"contracts/InjectedRewardsPool.algo.ts:232","pc":[1165,1166,1167]},{"teal":1081,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1168]},{"teal":1082,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1169]},{"teal":1083,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1170,1171]},{"teal":1084,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1172]},{"teal":1085,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1173,1174]},{"teal":1086,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1175]},{"teal":1087,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1176]},{"teal":1088,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1177,1178]},{"teal":1089,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1179,1180]},{"teal":1090,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1181,1182]},{"teal":1091,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1183,1184]},{"teal":1092,"source":"contracts/InjectedRewardsPool.algo.ts:233","pc":[1185]},{"teal":1097,"source":"contracts/InjectedRewardsPool.algo.ts:235","pc":[1186,1187]},{"teal":1098,"source":"contracts/InjectedRewardsPool.algo.ts:235","pc":[1188]},{"teal":1099,"source":"contracts/InjectedRewardsPool.algo.ts:235","pc":[1189]},{"teal":1100,"source":"contracts/InjectedRewardsPool.algo.ts:235","pc":[1190,1191]},{"teal":1101,"source":"contracts/InjectedRewardsPool.algo.ts:235","pc":[1192,1193]},{"teal":1102,"source":"contracts/InjectedRewardsPool.algo.ts:235","pc":[1194]},{"teal":1103,"source":"contracts/InjectedRewardsPool.algo.ts:235","pc":[1195]},{"teal":1108,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1196,1197]},{"teal":1109,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1198,1199]},{"teal":1110,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1200]},{"teal":1111,"source":"contracts/InjectedRewardsPool.algo.ts:236","pc":[1201,1202,1203]},{"teal":1116,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1204]},{"teal":1117,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1205]},{"teal":1118,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1206,1207]},{"teal":1119,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1208]},{"teal":1120,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1209,1210]},{"teal":1121,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1211]},{"teal":1122,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1212]},{"teal":1123,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1213,1214]},{"teal":1124,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1215,1216]},{"teal":1125,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1217,1218]},{"teal":1126,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1219,1220]},{"teal":1127,"source":"contracts/InjectedRewardsPool.algo.ts:237","pc":[1221]},{"teal":1141,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1222,1223]},{"teal":1142,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1224]},{"teal":1143,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1225]},{"teal":1144,"source":"contracts/InjectedRewardsPool.algo.ts:240","pc":[1226,1227]},{"teal":1145,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1228,1229]},{"teal":1146,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1230,1231]},{"teal":1147,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1232]},{"teal":1148,"source":"contracts/InjectedRewardsPool.algo.ts:241","pc":[1233]},{"teal":1149,"source":"contracts/InjectedRewardsPool.algo.ts:242","pc":[1234]},{"teal":1150,"source":"contracts/InjectedRewardsPool.algo.ts:242","pc":[1235]},{"teal":1151,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1236,1237]},{"teal":1152,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1238]},{"teal":1153,"source":"contracts/InjectedRewardsPool.algo.ts:243","pc":[1239]},{"teal":1154,"source":"contracts/InjectedRewardsPool.algo.ts:244","pc":[1240]},{"teal":1155,"source":"contracts/InjectedRewardsPool.algo.ts:244","pc":[1241]},{"teal":1156,"source":"contracts/InjectedRewardsPool.algo.ts:245","pc":[1242,1243]},{"teal":1157,"source":"contracts/InjectedRewardsPool.algo.ts:245","pc":[1244]},{"teal":1158,"source":"contracts/InjectedRewardsPool.algo.ts:245","pc":[1245]},{"teal":1159,"source":"contracts/InjectedRewardsPool.algo.ts:246","pc":[1246]},{"teal":1160,"source":"contracts/InjectedRewardsPool.algo.ts:246","pc":[1247]},{"teal":1161,"source":"contracts/InjectedRewardsPool.algo.ts:247","pc":[1248]},{"teal":1162,"source":"contracts/InjectedRewardsPool.algo.ts:247","pc":[1249]},{"teal":1163,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1250]},{"teal":1164,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1251,1252]},{"teal":1165,"source":"contracts/InjectedRewardsPool.algo.ts:239","pc":[1253]},{"teal":1170,"source":"contracts/InjectedRewardsPool.algo.ts:249","pc":[1254,1255]},{"teal":1171,"source":"contracts/InjectedRewardsPool.algo.ts:249","pc":[1256,1257]},{"teal":1172,"source":"contracts/InjectedRewardsPool.algo.ts:249","pc":[1258]},{"teal":1173,"source":"contracts/InjectedRewardsPool.algo.ts:249","pc":[1259,1260,1261]},{"teal":1178,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1262]},{"teal":1179,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1263]},{"teal":1180,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1264,1265]},{"teal":1181,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1266]},{"teal":1182,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1267,1268]},{"teal":1183,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1269]},{"teal":1184,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1270]},{"teal":1185,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1271,1272]},{"teal":1186,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1273,1274]},{"teal":1187,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1275,1276]},{"teal":1188,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1277,1278]},{"teal":1189,"source":"contracts/InjectedRewardsPool.algo.ts:250","pc":[1279]},{"teal":1194,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1280,1281]},{"teal":1195,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1282]},{"teal":1196,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1283]},{"teal":1197,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1284]},{"teal":1198,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1285]},{"teal":1199,"source":"contracts/InjectedRewardsPool.algo.ts:252","pc":[1286]},{"teal":1204,"source":"contracts/InjectedRewardsPool.algo.ts:253","pc":[1287,1288]},{"teal":1205,"source":"contracts/InjectedRewardsPool.algo.ts:253","pc":[1289,1290]},{"teal":1206,"source":"contracts/InjectedRewardsPool.algo.ts:253","pc":[1291]},{"teal":1207,"source":"contracts/InjectedRewardsPool.algo.ts:253","pc":[1292,1293,1294]},{"teal":1212,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1295]},{"teal":1213,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1296]},{"teal":1214,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1297,1298]},{"teal":1215,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1299]},{"teal":1216,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1300,1301]},{"teal":1217,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1302]},{"teal":1218,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1303]},{"teal":1219,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1304,1305]},{"teal":1220,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1306,1307]},{"teal":1221,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1308,1309]},{"teal":1222,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1310,1311]},{"teal":1223,"source":"contracts/InjectedRewardsPool.algo.ts:254","pc":[1312]},{"teal":1228,"source":"contracts/InjectedRewardsPool.algo.ts:256","pc":[1313]},{"teal":1229,"source":"contracts/InjectedRewardsPool.algo.ts:256","pc":[1314,1315]},{"teal":1235,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1316,1317]},{"teal":1236,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1318,1319]},{"teal":1237,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1320]},{"teal":1238,"source":"contracts/InjectedRewardsPool.algo.ts:259","pc":[1321,1322,1323]},{"teal":1243,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1324]},{"teal":1244,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1325]},{"teal":1245,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1326,1327]},{"teal":1246,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1328]},{"teal":1247,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1329,1330]},{"teal":1248,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1331]},{"teal":1249,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1332]},{"teal":1250,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1333,1334]},{"teal":1251,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1335,1336]},{"teal":1252,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1337,1338]},{"teal":1253,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1339,1340]},{"teal":1254,"source":"contracts/InjectedRewardsPool.algo.ts:260","pc":[1341]},{"teal":1261,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[1342,1343]},{"teal":1262,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[1344]},{"teal":1263,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[1345]},{"teal":1264,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[1346,1347]},{"teal":1265,"source":"contracts/InjectedRewardsPool.algo.ts:203","pc":[1348,1349,1350]},{"teal":1270,"source":"contracts/InjectedRewardsPool.algo.ts:263","pc":[1351,1352]},{"teal":1273,"source":"contracts/InjectedRewardsPool.algo.ts:263","errorMessage":"Stake  failed","pc":[1353]},{"teal":1274,"source":"contracts/InjectedRewardsPool.algo.ts:184","pc":[1354]},{"teal":1279,"source":"contracts/InjectedRewardsPool.algo.ts:268","pc":[1355,1356,1357]},{"teal":1280,"source":"contracts/InjectedRewardsPool.algo.ts:268","pc":[1358]},{"teal":1281,"source":"contracts/InjectedRewardsPool.algo.ts:268","pc":[1359]},{"teal":1285,"source":"contracts/InjectedRewardsPool.algo.ts:268","pc":[1360,1361,1362]},{"teal":1288,"source":"contracts/InjectedRewardsPool.algo.ts:268","pc":[1363]},{"teal":1289,"source":"contracts/InjectedRewardsPool.algo.ts:268","pc":[1364,1365]},{"teal":1293,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1366,1367]},{"teal":1294,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1368]},{"teal":1295,"source":"contracts/InjectedRewardsPool.algo.ts:269","pc":[1369,1370]},{"teal":1299,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1371,1372]},{"teal":1300,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1373]},{"teal":1301,"source":"contracts/InjectedRewardsPool.algo.ts:271","pc":[1374,1375]},{"teal":1306,"source":"contracts/InjectedRewardsPool.algo.ts:272","pc":[1376,1377]},{"teal":1307,"source":"contracts/InjectedRewardsPool.algo.ts:272","pc":[1378,1379]},{"teal":1308,"source":"contracts/InjectedRewardsPool.algo.ts:272","pc":[1380]},{"teal":1309,"source":"contracts/InjectedRewardsPool.algo.ts:272","pc":[1381,1382,1383]},{"teal":1314,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1384]},{"teal":1315,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1385]},{"teal":1316,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1386,1387]},{"teal":1317,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1388]},{"teal":1318,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1389,1390]},{"teal":1319,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1391]},{"teal":1320,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1392]},{"teal":1321,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1393,1394]},{"teal":1322,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1395,1396]},{"teal":1323,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1397,1398]},{"teal":1324,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1399,1400]},{"teal":1325,"source":"contracts/InjectedRewardsPool.algo.ts:273","pc":[1401]},{"teal":1330,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1402]},{"teal":1331,"source":"contracts/InjectedRewardsPool.algo.ts:275","pc":[1403,1404]},{"teal":1335,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1405]},{"teal":1336,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1406,1407]},{"teal":1341,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1408,1409]},{"teal":1342,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1410,1411]},{"teal":1343,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1412]},{"teal":1344,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1413]},{"teal":1345,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1414,1415,1416]},{"teal":1350,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1417,1418]},{"teal":1351,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1419]},{"teal":1352,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1420]},{"teal":1353,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1421,1422]},{"teal":1354,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1423]},{"teal":1355,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1424,1425]},{"teal":1356,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1426]},{"teal":1357,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1427,1428]},{"teal":1358,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1429]},{"teal":1359,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1430]},{"teal":1360,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1431]},{"teal":1361,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1432]},{"teal":1362,"source":"contracts/InjectedRewardsPool.algo.ts:277","pc":[1433,1434,1435]},{"teal":1368,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1436,1437]},{"teal":1369,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1438,1439]},{"teal":1370,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1440]},{"teal":1371,"source":"contracts/InjectedRewardsPool.algo.ts:278","pc":[1441,1442,1443]},{"teal":1376,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1444]},{"teal":1377,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1445]},{"teal":1378,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1446,1447]},{"teal":1379,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1448]},{"teal":1380,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1449,1450]},{"teal":1381,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1451]},{"teal":1382,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1452]},{"teal":1383,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1453,1454]},{"teal":1384,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1455,1456]},{"teal":1385,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1457,1458]},{"teal":1386,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1459,1460]},{"teal":1387,"source":"contracts/InjectedRewardsPool.algo.ts:279","pc":[1461]},{"teal":1392,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1462,1463]},{"teal":1393,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1464]},{"teal":1394,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1465]},{"teal":1395,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1466,1467]},{"teal":1396,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1468]},{"teal":1397,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1469,1470]},{"teal":1398,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1471,1472]},{"teal":1399,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1473]},{"teal":1400,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1474]},{"teal":1401,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1475,1476]},{"teal":1402,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1477]},{"teal":1403,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1478,1479]},{"teal":1404,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1480]},{"teal":1405,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1481,1482]},{"teal":1406,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1483]},{"teal":1407,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1484]},{"teal":1408,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1485]},{"teal":1409,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1486]},{"teal":1410,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1487]},{"teal":1411,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1488,1489]},{"teal":1412,"source":"contracts/InjectedRewardsPool.algo.ts:281","pc":[1490]},{"teal":1417,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1491,1492]},{"teal":1418,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1493]},{"teal":1419,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1494]},{"teal":1420,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1495,1496]},{"teal":1421,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1497]},{"teal":1422,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1498,1499]},{"teal":1423,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1500]},{"teal":1424,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1501,1502]},{"teal":1425,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1503]},{"teal":1426,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1504]},{"teal":1427,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1505,1506]},{"teal":1428,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1507]},{"teal":1429,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1508]},{"teal":1430,"source":"contracts/InjectedRewardsPool.algo.ts:283","pc":[1509,1510,1511]},{"teal":1435,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1512,1513]},{"teal":1436,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1514,1515]},{"teal":1437,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1516]},{"teal":1438,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1517]},{"teal":1439,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1518,1519]},{"teal":1440,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1520]},{"teal":1441,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1521,1522]},{"teal":1442,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1523]},{"teal":1443,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1524,1525]},{"teal":1444,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1526]},{"teal":1445,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1527]},{"teal":1446,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1528]},{"teal":1447,"source":"contracts/InjectedRewardsPool.algo.ts:284","pc":[1529,1530]},{"teal":1456,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1531,1532]},{"teal":1457,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1533]},{"teal":1458,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1534]},{"teal":1459,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1535,1536]},{"teal":1460,"source":"contracts/InjectedRewardsPool.algo.ts:276","pc":[1537,1538,1539]},{"teal":1465,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1540]},{"teal":1466,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1541,1542]},{"teal":1471,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1543,1544]},{"teal":1472,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1545,1546]},{"teal":1473,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1547]},{"teal":1474,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1548]},{"teal":1475,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1549,1550,1551]},{"teal":1480,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1552,1553]},{"teal":1481,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1554,1555]},{"teal":1482,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1556]},{"teal":1483,"source":"contracts/InjectedRewardsPool.algo.ts:290","pc":[1557,1558,1559]},{"teal":1488,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1560]},{"teal":1489,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1561]},{"teal":1490,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1562,1563]},{"teal":1491,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1564]},{"teal":1492,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1565,1566]},{"teal":1493,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1567]},{"teal":1494,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1568]},{"teal":1495,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1569,1570]},{"teal":1496,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1571,1572]},{"teal":1497,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1573,1574]},{"teal":1498,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1575,1576]},{"teal":1499,"source":"contracts/InjectedRewardsPool.algo.ts:291","pc":[1577]},{"teal":1504,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1578,1579]},{"teal":1505,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1580]},{"teal":1506,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1581]},{"teal":1507,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1582,1583]},{"teal":1508,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1584]},{"teal":1509,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1585,1586]},{"teal":1510,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1587]},{"teal":1511,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1588,1589]},{"teal":1512,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1590]},{"teal":1513,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1591]},{"teal":1514,"source":"contracts/InjectedRewardsPool.algo.ts:293","pc":[1592,1593]},{"teal":1519,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1594,1595]},{"teal":1520,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1596]},{"teal":1521,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1597]},{"teal":1522,"source":"contracts/InjectedRewardsPool.algo.ts:295","pc":[1598,1599,1600]},{"teal":1527,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1601,1602]},{"teal":1528,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1603]},{"teal":1529,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1604]},{"teal":1530,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1605]},{"teal":1531,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1606]},{"teal":1532,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1607,1608]},{"teal":1533,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1609]},{"teal":1534,"source":"contracts/InjectedRewardsPool.algo.ts:296","pc":[1610,1611]},{"teal":1539,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1612,1613]},{"teal":1540,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1614,1615,1616]},{"teal":1541,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1617]},{"teal":1542,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1618,1619]},{"teal":1543,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1620]},{"teal":1544,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1621]},{"teal":1545,"source":"contracts/InjectedRewardsPool.algo.ts:298","pc":[1622,1623,1624]},{"teal":1550,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1625,1626]},{"teal":1551,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1627,1628]},{"teal":1552,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1629]},{"teal":1553,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1630]},{"teal":1554,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1631,1632]},{"teal":1555,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1633]},{"teal":1556,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1634]},{"teal":1557,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1635]},{"teal":1558,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1636]},{"teal":1559,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1637]},{"teal":1562,"source":"contracts/InjectedRewardsPool.algo.ts:301","errorMessage":"wideRatio failed","pc":[1638]},{"teal":1563,"source":"contracts/InjectedRewardsPool.algo.ts:301","pc":[1639,1640]},{"teal":1567,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1641,1642]},{"teal":1568,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1643,1644]},{"teal":1569,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1645,1646]},{"teal":1570,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1647]},{"teal":1571,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1648]},{"teal":1572,"source":"contracts/InjectedRewardsPool.algo.ts:302","pc":[1649,1650]},{"teal":1577,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1651,1652]},{"teal":1578,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1653]},{"teal":1579,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1654]},{"teal":1580,"source":"contracts/InjectedRewardsPool.algo.ts:304","pc":[1655,1656,1657]},{"teal":1585,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1658,1659]},{"teal":1586,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1660,1661]},{"teal":1587,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1662]},{"teal":1588,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1663]},{"teal":1589,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1664,1665]},{"teal":1590,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1666]},{"teal":1591,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1667]},{"teal":1592,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1668]},{"teal":1593,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1669]},{"teal":1594,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1670]},{"teal":1597,"source":"contracts/InjectedRewardsPool.algo.ts:305","errorMessage":"wideRatio failed","pc":[1671]},{"teal":1598,"source":"contracts/InjectedRewardsPool.algo.ts:305","pc":[1672,1673]},{"teal":1603,"source":"contracts/InjectedRewardsPool.algo.ts:306","pc":[1674,1675]},{"teal":1604,"source":"contracts/InjectedRewardsPool.algo.ts:306","pc":[1676]},{"teal":1605,"source":"contracts/InjectedRewardsPool.algo.ts:306","pc":[1677]},{"teal":1606,"source":"contracts/InjectedRewardsPool.algo.ts:306","pc":[1678,1679,1680]},{"teal":1611,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1681]},{"teal":1612,"source":"contracts/InjectedRewardsPool.algo.ts:307","pc":[1682,1683]},{"teal":1617,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1684,1685]},{"teal":1618,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1686,1687]},{"teal":1619,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1688,1689]},{"teal":1620,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1690,1691,1692]},{"teal":1621,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1693]},{"teal":1622,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1694,1695]},{"teal":1623,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1696]},{"teal":1624,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1697]},{"teal":1625,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1698]},{"teal":1626,"source":"contracts/InjectedRewardsPool.algo.ts:309","pc":[1699,1700]},{"teal":1630,"source":"contracts/InjectedRewardsPool.algo.ts:310","pc":[1701,1702]},{"teal":1631,"source":"contracts/InjectedRewardsPool.algo.ts:310","pc":[1703]},{"teal":1632,"source":"contracts/InjectedRewardsPool.algo.ts:310","pc":[1704]},{"teal":1633,"source":"contracts/InjectedRewardsPool.algo.ts:310","pc":[1705,1706]},{"teal":1634,"source":"contracts/InjectedRewardsPool.algo.ts:310","pc":[1707]},{"teal":1635,"source":"contracts/InjectedRewardsPool.algo.ts:310","pc":[1708]},{"teal":1640,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1709,1710]},{"teal":1641,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1711]},{"teal":1642,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1712]},{"teal":1643,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1713]},{"teal":1644,"source":"contracts/InjectedRewardsPool.algo.ts:312","pc":[1714,1715,1716]},{"teal":1649,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1717,1718]},{"teal":1650,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1719,1720]},{"teal":1651,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1721,1722]},{"teal":1652,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1723,1724,1725]},{"teal":1653,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1726]},{"teal":1654,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1727,1728]},{"teal":1655,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1729]},{"teal":1656,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1730]},{"teal":1657,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1731]},{"teal":1658,"source":"contracts/InjectedRewardsPool.algo.ts:313","pc":[1732,1733]},{"teal":1662,"source":"contracts/InjectedRewardsPool.algo.ts:314","pc":[1734,1735]},{"teal":1663,"source":"contracts/InjectedRewardsPool.algo.ts:314","pc":[1736]},{"teal":1664,"source":"contracts/InjectedRewardsPool.algo.ts:314","pc":[1737]},{"teal":1665,"source":"contracts/InjectedRewardsPool.algo.ts:314","pc":[1738,1739]},{"teal":1666,"source":"contracts/InjectedRewardsPool.algo.ts:314","pc":[1740]},{"teal":1667,"source":"contracts/InjectedRewardsPool.algo.ts:314","pc":[1741]},{"teal":1675,"source":"contracts/InjectedRewardsPool.algo.ts:318","pc":[1742,1743]},{"teal":1676,"source":"contracts/InjectedRewardsPool.algo.ts:318","pc":[1744,1745]},{"teal":1677,"source":"contracts/InjectedRewardsPool.algo.ts:318","pc":[1746]},{"teal":1678,"source":"contracts/InjectedRewardsPool.algo.ts:318","pc":[1747,1748,1749]},{"teal":1683,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1750]},{"teal":1684,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1751]},{"teal":1685,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1752,1753]},{"teal":1686,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1754]},{"teal":1687,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1755,1756]},{"teal":1688,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1757]},{"teal":1689,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1758]},{"teal":1690,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1759,1760]},{"teal":1691,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1761,1762]},{"teal":1692,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1763,1764]},{"teal":1693,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1765,1766]},{"teal":1694,"source":"contracts/InjectedRewardsPool.algo.ts:319","pc":[1767]},{"teal":1700,"source":"contracts/InjectedRewardsPool.algo.ts:322","pc":[1768,1769]},{"teal":1701,"source":"contracts/InjectedRewardsPool.algo.ts:322","pc":[1770]},{"teal":1702,"source":"contracts/InjectedRewardsPool.algo.ts:322","pc":[1771]},{"teal":1703,"source":"contracts/InjectedRewardsPool.algo.ts:322","pc":[1772,1773,1774]},{"teal":1708,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1775,1776]},{"teal":1709,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1777,1778]},{"teal":1710,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1779]},{"teal":1711,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1780]},{"teal":1712,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1781,1782]},{"teal":1713,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1783]},{"teal":1714,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1784]},{"teal":1715,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1785]},{"teal":1716,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1786]},{"teal":1717,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1787]},{"teal":1720,"source":"contracts/InjectedRewardsPool.algo.ts:323","errorMessage":"wideRatio failed","pc":[1788]},{"teal":1721,"source":"contracts/InjectedRewardsPool.algo.ts:323","pc":[1789,1790]},{"teal":1726,"source":"contracts/InjectedRewardsPool.algo.ts:324","pc":[1791,1792]},{"teal":1727,"source":"contracts/InjectedRewardsPool.algo.ts:324","pc":[1793]},{"teal":1728,"source":"contracts/InjectedRewardsPool.algo.ts:324","pc":[1794]},{"teal":1729,"source":"contracts/InjectedRewardsPool.algo.ts:324","pc":[1795,1796,1797]},{"teal":1734,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1798]},{"teal":1735,"source":"contracts/InjectedRewardsPool.algo.ts:325","pc":[1799,1800]},{"teal":1740,"source":"contracts/InjectedRewardsPool.algo.ts:329","pc":[1801,1802]},{"teal":1741,"source":"contracts/InjectedRewardsPool.algo.ts:329","pc":[1803]},{"teal":1742,"source":"contracts/InjectedRewardsPool.algo.ts:329","pc":[1804]},{"teal":1743,"source":"contracts/InjectedRewardsPool.algo.ts:329","pc":[1805,1806]},{"teal":1744,"source":"contracts/InjectedRewardsPool.algo.ts:329","pc":[1807]},{"teal":1745,"source":"contracts/InjectedRewardsPool.algo.ts:329","pc":[1808]},{"teal":1750,"source":"contracts/InjectedRewardsPool.algo.ts:330","pc":[1809,1810]},{"teal":1751,"source":"contracts/InjectedRewardsPool.algo.ts:330","pc":[1811]},{"teal":1752,"source":"contracts/InjectedRewardsPool.algo.ts:330","pc":[1812,1813]},{"teal":1753,"source":"contracts/InjectedRewardsPool.algo.ts:330","pc":[1814]},{"teal":1754,"source":"contracts/InjectedRewardsPool.algo.ts:330","pc":[1815]},{"teal":1755,"source":"contracts/InjectedRewardsPool.algo.ts:330","pc":[1816,1817,1818]},{"teal":1760,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1819,1820]},{"teal":1761,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1821,1822]},{"teal":1762,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1823,1824]},{"teal":1763,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1825,1826,1827]},{"teal":1764,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1828]},{"teal":1765,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1829,1830]},{"teal":1766,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1831]},{"teal":1767,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1832]},{"teal":1768,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1833]},{"teal":1769,"source":"contracts/InjectedRewardsPool.algo.ts:332","pc":[1834,1835]},{"teal":1773,"source":"contracts/InjectedRewardsPool.algo.ts:333","pc":[1836,1837]},{"teal":1774,"source":"contracts/InjectedRewardsPool.algo.ts:333","pc":[1838]},{"teal":1775,"source":"contracts/InjectedRewardsPool.algo.ts:333","pc":[1839]},{"teal":1776,"source":"contracts/InjectedRewardsPool.algo.ts:333","pc":[1840,1841]},{"teal":1777,"source":"contracts/InjectedRewardsPool.algo.ts:333","pc":[1842]},{"teal":1778,"source":"contracts/InjectedRewardsPool.algo.ts:333","pc":[1843]},{"teal":1779,"source":"contracts/InjectedRewardsPool.algo.ts:330","pc":[1844,1845,1846]},{"teal":1784,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1847,1848]},{"teal":1785,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1849,1850]},{"teal":1786,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1851,1852]},{"teal":1787,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1853,1854,1855]},{"teal":1788,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1856]},{"teal":1789,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1857,1858]},{"teal":1790,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1859]},{"teal":1791,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1860]},{"teal":1792,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1861]},{"teal":1793,"source":"contracts/InjectedRewardsPool.algo.ts:335","pc":[1862,1863]},{"teal":1802,"source":"contracts/InjectedRewardsPool.algo.ts:339","pc":[1864,1865]},{"teal":1803,"source":"contracts/InjectedRewardsPool.algo.ts:339","pc":[1866,1867]},{"teal":1804,"source":"contracts/InjectedRewardsPool.algo.ts:339","pc":[1868,1869]},{"teal":1805,"source":"contracts/InjectedRewardsPool.algo.ts:339","pc":[1870]},{"teal":1806,"source":"contracts/InjectedRewardsPool.algo.ts:339","pc":[1871]},{"teal":1807,"source":"contracts/InjectedRewardsPool.algo.ts:339","pc":[1872,1873]},{"teal":1811,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1874,1875]},{"teal":1812,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1876]},{"teal":1813,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1877]},{"teal":1814,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1878,1879]},{"teal":1815,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1880]},{"teal":1816,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1881,1882]},{"teal":1817,"source":"contracts/InjectedRewardsPool.algo.ts:340","pc":[1883]},{"teal":1824,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1884,1885]},{"teal":1825,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1886]},{"teal":1826,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1887]},{"teal":1827,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1888,1889]},{"teal":1828,"source":"contracts/InjectedRewardsPool.algo.ts:289","pc":[1890,1891,1892]},{"teal":1831,"source":"contracts/InjectedRewardsPool.algo.ts:268","pc":[1893]},{"teal":1835,"source":"contracts/InjectedRewardsPool.algo.ts:345","pc":[1894,1895,1896]},{"teal":1838,"source":"contracts/InjectedRewardsPool.algo.ts:345","pc":[1897]},{"teal":1842,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1898]},{"teal":1843,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1899,1900]},{"teal":1848,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1901,1902]},{"teal":1849,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1903,1904]},{"teal":1850,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1905]},{"teal":1851,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1906]},{"teal":1852,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1907,1908,1909]},{"teal":1857,"source":"contracts/InjectedRewardsPool.algo.ts:347","pc":[1910,1911]},{"teal":1858,"source":"contracts/InjectedRewardsPool.algo.ts:347","pc":[1912,1913]},{"teal":1859,"source":"contracts/InjectedRewardsPool.algo.ts:347","pc":[1914]},{"teal":1860,"source":"contracts/InjectedRewardsPool.algo.ts:347","pc":[1915,1916,1917]},{"teal":1865,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1918]},{"teal":1866,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1919]},{"teal":1867,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1920,1921]},{"teal":1868,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1922]},{"teal":1869,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1923,1924]},{"teal":1870,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1925]},{"teal":1871,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1926]},{"teal":1872,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1927,1928]},{"teal":1873,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1929,1930]},{"teal":1874,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1931,1932]},{"teal":1875,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1933,1934]},{"teal":1876,"source":"contracts/InjectedRewardsPool.algo.ts:348","pc":[1935]},{"teal":1882,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1936,1937]},{"teal":1883,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1938]},{"teal":1884,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1939]},{"teal":1885,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1940]},{"teal":1886,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1941]},{"teal":1887,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1942,1943]},{"teal":1888,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1944]},{"teal":1889,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1945,1946]},{"teal":1890,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1947]},{"teal":1891,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1948,1949]},{"teal":1892,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1950]},{"teal":1893,"source":"contracts/InjectedRewardsPool.algo.ts:350","pc":[1951,1952,1953]},{"teal":1898,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1954,1955]},{"teal":1899,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1956]},{"teal":1900,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1957]},{"teal":1901,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1958]},{"teal":1902,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1959]},{"teal":1903,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1960,1961]},{"teal":1904,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1962]},{"teal":1905,"source":"contracts/InjectedRewardsPool.algo.ts:351","pc":[1963,1964,1965]},{"teal":1912,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1966,1967]},{"teal":1913,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1968]},{"teal":1914,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1969]},{"teal":1915,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1970,1971]},{"teal":1916,"source":"contracts/InjectedRewardsPool.algo.ts:346","pc":[1972,1973,1974]},{"teal":1930,"source":"contracts/InjectedRewardsPool.algo.ts:355","pc":[1975,1976]},{"teal":1931,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1977]},{"teal":1932,"source":"contracts/InjectedRewardsPool.algo.ts:356","pc":[1978]},{"teal":1933,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[1979]},{"teal":1934,"source":"contracts/InjectedRewardsPool.algo.ts:357","pc":[1980]},{"teal":1935,"source":"contracts/InjectedRewardsPool.algo.ts:358","pc":[1981]},{"teal":1936,"source":"contracts/InjectedRewardsPool.algo.ts:358","pc":[1982]},{"teal":1937,"source":"contracts/InjectedRewardsPool.algo.ts:360","pc":[1983]},{"teal":1938,"source":"contracts/InjectedRewardsPool.algo.ts:360","pc":[1984]},{"teal":1939,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1985]},{"teal":1940,"source":"contracts/InjectedRewardsPool.algo.ts:359","pc":[1986]},{"teal":1941,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1987]},{"teal":1942,"source":"contracts/InjectedRewardsPool.algo.ts:361","pc":[1988]},{"teal":1943,"source":"contracts/InjectedRewardsPool.algo.ts:362","pc":[1989]},{"teal":1944,"source":"contracts/InjectedRewardsPool.algo.ts:362","pc":[1990]},{"teal":1948,"source":"contracts/InjectedRewardsPool.algo.ts:345","pc":[1991,1992]},{"teal":1949,"source":"contracts/InjectedRewardsPool.algo.ts:345","pc":[1993]},{"teal":1954,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[1994,1995,1996]},{"teal":1955,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[1997]},{"teal":1956,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[1998]},{"teal":1960,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[1999,2000,2001]},{"teal":1963,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[2002]},{"teal":1968,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[2003,2004]},{"teal":1969,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[2005,2006]},{"teal":1970,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[2007]},{"teal":1971,"source":"contracts/InjectedRewardsPool.algo.ts:367","pc":[2008,2009,2010]},{"teal":1976,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2011]},{"teal":1977,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2012]},{"teal":1978,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2013,2014]},{"teal":1979,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2015]},{"teal":1980,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2016,2017]},{"teal":1981,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2018]},{"teal":1982,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2019]},{"teal":1983,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2020,2021]},{"teal":1984,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2022,2023]},{"teal":1985,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2024,2025]},{"teal":1986,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2026,2027]},{"teal":1987,"source":"contracts/InjectedRewardsPool.algo.ts:368","pc":[2028]},{"teal":1992,"source":"contracts/InjectedRewardsPool.algo.ts:370","pc":[2029,2030]},{"teal":1993,"source":"contracts/InjectedRewardsPool.algo.ts:370","pc":[2031,2032,2033]},{"teal":1994,"source":"contracts/InjectedRewardsPool.algo.ts:370","pc":[2034,2035]},{"teal":1999,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[2036,2037]},{"teal":2000,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[2038,2039,2040]},{"teal":2001,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[2041]},{"teal":2002,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[2042]},{"teal":2003,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[2043]},{"teal":2004,"source":"contracts/InjectedRewardsPool.algo.ts:373","pc":[2044,2045,2046]},{"teal":2014,"source":"contracts/InjectedRewardsPool.algo.ts:374","pc":[2047]},{"teal":2015,"source":"contracts/InjectedRewardsPool.algo.ts:374","pc":[2048]},{"teal":2016,"source":"contracts/InjectedRewardsPool.algo.ts:374","pc":[2049,2050]},{"teal":2020,"source":"contracts/InjectedRewardsPool.algo.ts:375","pc":[2051,2052]},{"teal":2021,"source":"contracts/InjectedRewardsPool.algo.ts:375","pc":[2053,2054,2055]},{"teal":2022,"source":"contracts/InjectedRewardsPool.algo.ts:375","pc":[2056]},{"teal":2023,"source":"contracts/InjectedRewardsPool.algo.ts:375","pc":[2057,2058]},{"teal":2027,"source":"contracts/InjectedRewardsPool.algo.ts:376","pc":[2059,2060]},{"teal":2028,"source":"contracts/InjectedRewardsPool.algo.ts:376","pc":[2061,2062]},{"teal":2032,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[2063,2064]},{"teal":2033,"source":"contracts/InjectedRewardsPool.algo.ts:377","pc":[2065,2066]},{"teal":2037,"source":"contracts/InjectedRewardsPool.algo.ts:378","pc":[2067,2068]},{"teal":2038,"source":"contracts/InjectedRewardsPool.algo.ts:378","pc":[2069,2070]},{"teal":2041,"source":"contracts/InjectedRewardsPool.algo.ts:374","pc":[2071]},{"teal":2045,"source":"contracts/InjectedRewardsPool.algo.ts:380","pc":[2072,2073]},{"teal":2046,"source":"contracts/InjectedRewardsPool.algo.ts:380","pc":[2074]},{"teal":2047,"source":"contracts/InjectedRewardsPool.algo.ts:380","pc":[2075,2076]},{"teal":2048,"source":"contracts/InjectedRewardsPool.algo.ts:380","pc":[2077,2078]},{"teal":2054,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2079,2080]},{"teal":2055,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2081,2082,2083]},{"teal":2056,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2084]},{"teal":2057,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2085]},{"teal":2058,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2086]},{"teal":2059,"source":"contracts/InjectedRewardsPool.algo.ts:384","pc":[2087,2088,2089]},{"teal":2070,"source":"contracts/InjectedRewardsPool.algo.ts:385","pc":[2090]},{"teal":2071,"source":"contracts/InjectedRewardsPool.algo.ts:385","pc":[2091,2092]},{"teal":2072,"source":"contracts/InjectedRewardsPool.algo.ts:385","pc":[2093,2094]},{"teal":2076,"source":"contracts/InjectedRewardsPool.algo.ts:386","pc":[2095,2096]},{"teal":2077,"source":"contracts/InjectedRewardsPool.algo.ts:386","pc":[2097]},{"teal":2078,"source":"contracts/InjectedRewardsPool.algo.ts:386","pc":[2098,2099]},{"teal":2082,"source":"contracts/InjectedRewardsPool.algo.ts:387","pc":[2100,2101]},{"teal":2083,"source":"contracts/InjectedRewardsPool.algo.ts:387","pc":[2102,2103]},{"teal":2087,"source":"contracts/InjectedRewardsPool.algo.ts:388","pc":[2104,2105]},{"teal":2088,"source":"contracts/InjectedRewardsPool.algo.ts:388","pc":[2106,2107]},{"teal":2092,"source":"contracts/InjectedRewardsPool.algo.ts:389","pc":[2108,2109]},{"teal":2093,"source":"contracts/InjectedRewardsPool.algo.ts:389","pc":[2110,2111,2112]},{"teal":2094,"source":"contracts/InjectedRewardsPool.algo.ts:389","pc":[2113]},{"teal":2095,"source":"contracts/InjectedRewardsPool.algo.ts:389","pc":[2114,2115]},{"teal":2099,"source":"contracts/InjectedRewardsPool.algo.ts:390","pc":[2116,2117]},{"teal":2100,"source":"contracts/InjectedRewardsPool.algo.ts:390","pc":[2118,2119]},{"teal":2103,"source":"contracts/InjectedRewardsPool.algo.ts:385","pc":[2120]},{"teal":2107,"source":"contracts/InjectedRewardsPool.algo.ts:392","pc":[2121,2122]},{"teal":2108,"source":"contracts/InjectedRewardsPool.algo.ts:392","pc":[2123]},{"teal":2109,"source":"contracts/InjectedRewardsPool.algo.ts:392","pc":[2124,2125]},{"teal":2110,"source":"contracts/InjectedRewardsPool.algo.ts:392","pc":[2126,2127]},{"teal":2115,"source":"contracts/InjectedRewardsPool.algo.ts:396","pc":[2128,2129]},{"teal":2116,"source":"contracts/InjectedRewardsPool.algo.ts:396","pc":[2130,2131]},{"teal":2117,"source":"contracts/InjectedRewardsPool.algo.ts:396","pc":[2132,2133]},{"teal":2118,"source":"contracts/InjectedRewardsPool.algo.ts:396","pc":[2134]},{"teal":2119,"source":"contracts/InjectedRewardsPool.algo.ts:396","pc":[2135]},{"teal":2120,"source":"contracts/InjectedRewardsPool.algo.ts:396","pc":[2136,2137]},{"teal":2124,"source":"contracts/InjectedRewardsPool.algo.ts:397","pc":[2138,2139]},{"teal":2125,"source":"contracts/InjectedRewardsPool.algo.ts:397","pc":[2140,2141]},{"teal":2126,"source":"contracts/InjectedRewardsPool.algo.ts:397","pc":[2142,2143,2144]},{"teal":2127,"source":"contracts/InjectedRewardsPool.algo.ts:397","pc":[2145,2146,2147]},{"teal":2132,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2148,2149]},{"teal":2133,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2150,2151]},{"teal":2134,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2152]},{"teal":2135,"source":"contracts/InjectedRewardsPool.algo.ts:398","pc":[2153,2154,2155]},{"teal":2140,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2156]},{"teal":2141,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2157]},{"teal":2142,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2158,2159]},{"teal":2143,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2160]},{"teal":2144,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2161,2162]},{"teal":2145,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2163]},{"teal":2146,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2164]},{"teal":2147,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2165,2166]},{"teal":2148,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2167,2168]},{"teal":2149,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2169,2170]},{"teal":2150,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2171,2172]},{"teal":2151,"source":"contracts/InjectedRewardsPool.algo.ts:399","pc":[2173]},{"teal":2154,"source":"contracts/InjectedRewardsPool.algo.ts:366","pc":[2174]},{"teal":2159,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2175,2176,2177]},{"teal":2160,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2178]},{"teal":2163,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2179,2180,2181]},{"teal":2164,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2182]},{"teal":2165,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2183]},{"teal":2169,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2184,2185,2186]},{"teal":2172,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2187]},{"teal":2173,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2188,2189]},{"teal":2177,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2190]},{"teal":2178,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2191,2192]},{"teal":2183,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2193,2194]},{"teal":2184,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2195,2196]},{"teal":2185,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2197]},{"teal":2186,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2198]},{"teal":2187,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2199,2200,2201]},{"teal":2192,"source":"contracts/InjectedRewardsPool.algo.ts:405","pc":[2202,2203]},{"teal":2193,"source":"contracts/InjectedRewardsPool.algo.ts:405","pc":[2204,2205]},{"teal":2194,"source":"contracts/InjectedRewardsPool.algo.ts:405","pc":[2206]},{"teal":2195,"source":"contracts/InjectedRewardsPool.algo.ts:405","pc":[2207,2208,2209]},{"teal":2200,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2210]},{"teal":2201,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2211]},{"teal":2202,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2212,2213]},{"teal":2203,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2214]},{"teal":2204,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2215,2216]},{"teal":2205,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2217]},{"teal":2206,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2218]},{"teal":2207,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2219,2220]},{"teal":2208,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2221,2222]},{"teal":2209,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2223,2224]},{"teal":2210,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2225,2226]},{"teal":2211,"source":"contracts/InjectedRewardsPool.algo.ts:406","pc":[2227]},{"teal":2216,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2228,2229]},{"teal":2217,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2230]},{"teal":2218,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2231]},{"teal":2219,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2232]},{"teal":2220,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2233]},{"teal":2221,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2234,2235]},{"teal":2222,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2236]},{"teal":2223,"source":"contracts/InjectedRewardsPool.algo.ts:408","pc":[2237,2238]},{"teal":2228,"source":"contracts/InjectedRewardsPool.algo.ts:409","pc":[2239,2240]},{"teal":2229,"source":"contracts/InjectedRewardsPool.algo.ts:409","pc":[2241,2242,2243]},{"teal":2230,"source":"contracts/InjectedRewardsPool.algo.ts:409","pc":[2244,2245]},{"teal":2231,"source":"contracts/InjectedRewardsPool.algo.ts:409","pc":[2246]},{"teal":2232,"source":"contracts/InjectedRewardsPool.algo.ts:409","pc":[2247,2248,2249]},{"teal":2238,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2250,2251]},{"teal":2239,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2252,2253,2254]},{"teal":2240,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2255]},{"teal":2241,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2256]},{"teal":2242,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2257]},{"teal":2243,"source":"contracts/InjectedRewardsPool.algo.ts:411","pc":[2258,2259,2260]},{"teal":2249,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2261,2262]},{"teal":2250,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2263]},{"teal":2251,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2264]},{"teal":2252,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2265]},{"teal":2253,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2266,2267,2268]},{"teal":2263,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2269]},{"teal":2264,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2270]},{"teal":2265,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2271,2272]},{"teal":2269,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2273,2274]},{"teal":2270,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2275]},{"teal":2271,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2276]},{"teal":2272,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2277,2278,2279]},{"teal":2273,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2280,2281]},{"teal":2274,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2282,2283,2284]},{"teal":2275,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2285]},{"teal":2276,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2286,2287,2288]},{"teal":2279,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2289,2290]},{"teal":2282,"source":"contracts/InjectedRewardsPool.algo.ts:414","pc":[2291,2292]},{"teal":2286,"source":"contracts/InjectedRewardsPool.algo.ts:415","pc":[2293,2294]},{"teal":2287,"source":"contracts/InjectedRewardsPool.algo.ts:415","pc":[2295,2296]},{"teal":2291,"source":"contracts/InjectedRewardsPool.algo.ts:416","pc":[2297,2298]},{"teal":2292,"source":"contracts/InjectedRewardsPool.algo.ts:416","pc":[2299,2300]},{"teal":2296,"source":"contracts/InjectedRewardsPool.algo.ts:417","pc":[2301,2302]},{"teal":2297,"source":"contracts/InjectedRewardsPool.algo.ts:417","pc":[2303,2304]},{"teal":2300,"source":"contracts/InjectedRewardsPool.algo.ts:413","pc":[2305]},{"teal":2301,"source":"contracts/InjectedRewardsPool.algo.ts:412","pc":[2306,2307,2308]},{"teal":2312,"source":"contracts/InjectedRewardsPool.algo.ts:421","pc":[2309]},{"teal":2313,"source":"contracts/InjectedRewardsPool.algo.ts:421","pc":[2310,2311]},{"teal":2314,"source":"contracts/InjectedRewardsPool.algo.ts:421","pc":[2312,2313]},{"teal":2318,"source":"contracts/InjectedRewardsPool.algo.ts:422","pc":[2314,2315]},{"teal":2319,"source":"contracts/InjectedRewardsPool.algo.ts:422","pc":[2316]},{"teal":2320,"source":"contracts/InjectedRewardsPool.algo.ts:422","pc":[2317,2318]},{"teal":2324,"source":"contracts/InjectedRewardsPool.algo.ts:423","pc":[2319,2320]},{"teal":2325,"source":"contracts/InjectedRewardsPool.algo.ts:423","pc":[2321,2322]},{"teal":2329,"source":"contracts/InjectedRewardsPool.algo.ts:424","pc":[2323,2324]},{"teal":2330,"source":"contracts/InjectedRewardsPool.algo.ts:424","pc":[2325,2326]},{"teal":2334,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2327,2328]},{"teal":2335,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2329]},{"teal":2336,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2330]},{"teal":2337,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2331,2332,2333]},{"teal":2338,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2334,2335]},{"teal":2339,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2336,2337,2338]},{"teal":2340,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2339]},{"teal":2341,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2340,2341,2342]},{"teal":2344,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2343,2344]},{"teal":2347,"source":"contracts/InjectedRewardsPool.algo.ts:425","pc":[2345,2346]},{"teal":2351,"source":"contracts/InjectedRewardsPool.algo.ts:426","pc":[2347,2348]},{"teal":2352,"source":"contracts/InjectedRewardsPool.algo.ts:426","pc":[2349,2350]},{"teal":2355,"source":"contracts/InjectedRewardsPool.algo.ts:421","pc":[2351]},{"teal":2363,"source":"contracts/InjectedRewardsPool.algo.ts:432","pc":[2352,2353]},{"teal":2364,"source":"contracts/InjectedRewardsPool.algo.ts:432","pc":[2354,2355,2356]},{"teal":2365,"source":"contracts/InjectedRewardsPool.algo.ts:432","pc":[2357]},{"teal":2366,"source":"contracts/InjectedRewardsPool.algo.ts:432","pc":[2358]},{"teal":2367,"source":"contracts/InjectedRewardsPool.algo.ts:432","pc":[2359]},{"teal":2368,"source":"contracts/InjectedRewardsPool.algo.ts:432","pc":[2360,2361,2362]},{"teal":2378,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2363]},{"teal":2379,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2364]},{"teal":2380,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2365,2366]},{"teal":2384,"source":"contracts/InjectedRewardsPool.algo.ts:434","pc":[2367,2368]},{"teal":2385,"source":"contracts/InjectedRewardsPool.algo.ts:434","pc":[2369,2370,2371]},{"teal":2386,"source":"contracts/InjectedRewardsPool.algo.ts:434","pc":[2372]},{"teal":2387,"source":"contracts/InjectedRewardsPool.algo.ts:434","pc":[2373,2374]},{"teal":2391,"source":"contracts/InjectedRewardsPool.algo.ts:435","pc":[2375,2376]},{"teal":2392,"source":"contracts/InjectedRewardsPool.algo.ts:435","pc":[2377,2378]},{"teal":2396,"source":"contracts/InjectedRewardsPool.algo.ts:436","pc":[2379,2380]},{"teal":2397,"source":"contracts/InjectedRewardsPool.algo.ts:436","pc":[2381,2382]},{"teal":2401,"source":"contracts/InjectedRewardsPool.algo.ts:437","pc":[2383,2384]},{"teal":2402,"source":"contracts/InjectedRewardsPool.algo.ts:437","pc":[2385,2386]},{"teal":2405,"source":"contracts/InjectedRewardsPool.algo.ts:433","pc":[2387]},{"teal":2409,"source":"contracts/InjectedRewardsPool.algo.ts:439","pc":[2388,2389]},{"teal":2410,"source":"contracts/InjectedRewardsPool.algo.ts:439","pc":[2390]},{"teal":2411,"source":"contracts/InjectedRewardsPool.algo.ts:439","pc":[2391,2392]},{"teal":2412,"source":"contracts/InjectedRewardsPool.algo.ts:439","pc":[2393,2394]},{"teal":2418,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2395,2396]},{"teal":2419,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2397,2398,2399]},{"teal":2420,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2400]},{"teal":2421,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2401]},{"teal":2422,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2402]},{"teal":2423,"source":"contracts/InjectedRewardsPool.algo.ts:443","pc":[2403,2404,2405]},{"teal":2434,"source":"contracts/InjectedRewardsPool.algo.ts:444","pc":[2406]},{"teal":2435,"source":"contracts/InjectedRewardsPool.algo.ts:444","pc":[2407,2408]},{"teal":2436,"source":"contracts/InjectedRewardsPool.algo.ts:444","pc":[2409,2410]},{"teal":2440,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2411,2412]},{"teal":2441,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2413]},{"teal":2442,"source":"contracts/InjectedRewardsPool.algo.ts:445","pc":[2414,2415]},{"teal":2446,"source":"contracts/InjectedRewardsPool.algo.ts:446","pc":[2416,2417]},{"teal":2447,"source":"contracts/InjectedRewardsPool.algo.ts:446","pc":[2418,2419]},{"teal":2451,"source":"contracts/InjectedRewardsPool.algo.ts:447","pc":[2420,2421]},{"teal":2452,"source":"contracts/InjectedRewardsPool.algo.ts:447","pc":[2422,2423]},{"teal":2456,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2424,2425]},{"teal":2457,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2426,2427,2428]},{"teal":2458,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2429]},{"teal":2459,"source":"contracts/InjectedRewardsPool.algo.ts:448","pc":[2430,2431]},{"teal":2463,"source":"contracts/InjectedRewardsPool.algo.ts:449","pc":[2432,2433]},{"teal":2464,"source":"contracts/InjectedRewardsPool.algo.ts:449","pc":[2434,2435]},{"teal":2467,"source":"contracts/InjectedRewardsPool.algo.ts:444","pc":[2436]},{"teal":2471,"source":"contracts/InjectedRewardsPool.algo.ts:451","pc":[2437,2438]},{"teal":2472,"source":"contracts/InjectedRewardsPool.algo.ts:451","pc":[2439]},{"teal":2473,"source":"contracts/InjectedRewardsPool.algo.ts:451","pc":[2440,2441]},{"teal":2474,"source":"contracts/InjectedRewardsPool.algo.ts:451","pc":[2442,2443]},{"teal":2479,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2444,2445]},{"teal":2480,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2446]},{"teal":2481,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2447]},{"teal":2482,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2448,2449]},{"teal":2483,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2450]},{"teal":2484,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2451]},{"teal":2485,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2452,2453,2454]},{"teal":2486,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2455,2456]},{"teal":2487,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2457,2458,2459]},{"teal":2488,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2460]},{"teal":2489,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2461,2462,2463]},{"teal":2492,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2464,2465]},{"teal":2495,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2466]},{"teal":2496,"source":"contracts/InjectedRewardsPool.algo.ts:455","pc":[2467]},{"teal":2501,"source":"contracts/InjectedRewardsPool.algo.ts:457","pc":[2468,2469]},{"teal":2502,"source":"contracts/InjectedRewardsPool.algo.ts:457","pc":[2470,2471]},{"teal":2503,"source":"contracts/InjectedRewardsPool.algo.ts:457","pc":[2472]},{"teal":2504,"source":"contracts/InjectedRewardsPool.algo.ts:457","pc":[2473,2474,2475]},{"teal":2509,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2476]},{"teal":2510,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2477]},{"teal":2511,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2478,2479]},{"teal":2512,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2480]},{"teal":2513,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2481,2482]},{"teal":2514,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2483]},{"teal":2515,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2484]},{"teal":2516,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2485,2486]},{"teal":2517,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2487,2488]},{"teal":2518,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2489,2490]},{"teal":2519,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2491,2492]},{"teal":2520,"source":"contracts/InjectedRewardsPool.algo.ts:458","pc":[2493]},{"teal":2526,"source":"contracts/InjectedRewardsPool.algo.ts:461","pc":[2494,2495]},{"teal":2527,"source":"contracts/InjectedRewardsPool.algo.ts:461","pc":[2496]},{"teal":2528,"source":"contracts/InjectedRewardsPool.algo.ts:461","pc":[2497]},{"teal":2529,"source":"contracts/InjectedRewardsPool.algo.ts:461","pc":[2498,2499,2500]},{"teal":2543,"source":"contracts/InjectedRewardsPool.algo.ts:463","pc":[2501,2502]},{"teal":2544,"source":"contracts/InjectedRewardsPool.algo.ts:464","pc":[2503]},{"teal":2545,"source":"contracts/InjectedRewardsPool.algo.ts:464","pc":[2504]},{"teal":2546,"source":"contracts/InjectedRewardsPool.algo.ts:465","pc":[2505]},{"teal":2547,"source":"contracts/InjectedRewardsPool.algo.ts:465","pc":[2506]},{"teal":2548,"source":"contracts/InjectedRewardsPool.algo.ts:466","pc":[2507]},{"teal":2549,"source":"contracts/InjectedRewardsPool.algo.ts:466","pc":[2508]},{"teal":2550,"source":"contracts/InjectedRewardsPool.algo.ts:468","pc":[2509]},{"teal":2551,"source":"contracts/InjectedRewardsPool.algo.ts:468","pc":[2510]},{"teal":2552,"source":"contracts/InjectedRewardsPool.algo.ts:467","pc":[2511]},{"teal":2553,"source":"contracts/InjectedRewardsPool.algo.ts:467","pc":[2512]},{"teal":2554,"source":"contracts/InjectedRewardsPool.algo.ts:469","pc":[2513]},{"teal":2555,"source":"contracts/InjectedRewardsPool.algo.ts:469","pc":[2514]},{"teal":2556,"source":"contracts/InjectedRewardsPool.algo.ts:470","pc":[2515]},{"teal":2557,"source":"contracts/InjectedRewardsPool.algo.ts:470","pc":[2516]},{"teal":2558,"source":"contracts/InjectedRewardsPool.algo.ts:462","pc":[2517,2518]},{"teal":2562,"source":"contracts/InjectedRewardsPool.algo.ts:472","pc":[2519,2520]},{"teal":2563,"source":"contracts/InjectedRewardsPool.algo.ts:472","pc":[2521,2522]},{"teal":2564,"source":"contracts/InjectedRewardsPool.algo.ts:472","pc":[2523,2524,2525]},{"teal":2565,"source":"contracts/InjectedRewardsPool.algo.ts:472","pc":[2526,2527,2528]},{"teal":2569,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2529,2530]},{"teal":2570,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2531]},{"teal":2571,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2532]},{"teal":2572,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2533]},{"teal":2573,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2534]},{"teal":2574,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2535]},{"teal":2575,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2536]},{"teal":2576,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2537]},{"teal":2577,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2538,2539]},{"teal":2578,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2540]},{"teal":2579,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2541,2542]},{"teal":2580,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2543]},{"teal":2581,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2544,2545,2546]},{"teal":2582,"source":"contracts/InjectedRewardsPool.algo.ts:474","pc":[2547,2548]},{"teal":2586,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2549,2550]},{"teal":2587,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2551]},{"teal":2588,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2552]},{"teal":2589,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2553]},{"teal":2590,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2554]},{"teal":2591,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2555]},{"teal":2592,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2556]},{"teal":2593,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2557]},{"teal":2594,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2558,2559]},{"teal":2595,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2560]},{"teal":2596,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2561,2562]},{"teal":2597,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2563]},{"teal":2598,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2564,2565,2566]},{"teal":2599,"source":"contracts/InjectedRewardsPool.algo.ts:475","pc":[2567,2568]},{"teal":2604,"source":"contracts/InjectedRewardsPool.algo.ts:476","pc":[2569,2570]},{"teal":2605,"source":"contracts/InjectedRewardsPool.algo.ts:476","pc":[2571,2572]},{"teal":2606,"source":"contracts/InjectedRewardsPool.algo.ts:476","pc":[2573]},{"teal":2607,"source":"contracts/InjectedRewardsPool.algo.ts:476","pc":[2574,2575,2576]},{"teal":2612,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2577]},{"teal":2613,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2578]},{"teal":2614,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2579,2580]},{"teal":2615,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2581]},{"teal":2616,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2582,2583]},{"teal":2617,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2584]},{"teal":2618,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2585]},{"teal":2619,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2586,2587]},{"teal":2620,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2588,2589]},{"teal":2621,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2590,2591]},{"teal":2622,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2592,2593]},{"teal":2623,"source":"contracts/InjectedRewardsPool.algo.ts:477","pc":[2594]},{"teal":2628,"source":"contracts/InjectedRewardsPool.algo.ts:479","pc":[2595,2596]},{"teal":2629,"source":"contracts/InjectedRewardsPool.algo.ts:479","pc":[2597,2598]},{"teal":2630,"source":"contracts/InjectedRewardsPool.algo.ts:479","pc":[2599,2600,2601]},{"teal":2634,"source":"contracts/InjectedRewardsPool.algo.ts:481","pc":[2602,2603]},{"teal":2635,"source":"contracts/InjectedRewardsPool.algo.ts:481","pc":[2604,2605]},{"teal":2636,"source":"contracts/InjectedRewardsPool.algo.ts:481","pc":[2606,2607,2608]},{"teal":2640,"source":"contracts/InjectedRewardsPool.algo.ts:482","pc":[2609,2610]},{"teal":2641,"source":"contracts/InjectedRewardsPool.algo.ts:482","pc":[2611]},{"teal":2642,"source":"contracts/InjectedRewardsPool.algo.ts:482","pc":[2612]},{"teal":2643,"source":"contracts/InjectedRewardsPool.algo.ts:482","pc":[2613]},{"teal":2644,"source":"contracts/InjectedRewardsPool.algo.ts:482","pc":[2614]},{"teal":2645,"source":"contracts/InjectedRewardsPool.algo.ts:482","pc":[2615]},{"teal":2646,"source":"contracts/InjectedRewardsPool.algo.ts:461","pc":[2616,2617,2618]},{"teal":2651,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2619,2620]},{"teal":2652,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2621,2622]},{"teal":2653,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2623,2624]},{"teal":2654,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2625,2626,2627]},{"teal":2655,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2628]},{"teal":2656,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2629,2630]},{"teal":2657,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2631]},{"teal":2658,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2632]},{"teal":2659,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2633]},{"teal":2660,"source":"contracts/InjectedRewardsPool.algo.ts:485","pc":[2634,2635]},{"teal":2664,"source":"contracts/InjectedRewardsPool.algo.ts:486","pc":[2636,2637]},{"teal":2665,"source":"contracts/InjectedRewardsPool.algo.ts:486","pc":[2638]},{"teal":2666,"source":"contracts/InjectedRewardsPool.algo.ts:486","pc":[2639,2640]},{"teal":2667,"source":"contracts/InjectedRewardsPool.algo.ts:486","pc":[2641,2642]},{"teal":2672,"source":"contracts/InjectedRewardsPool.algo.ts:488","pc":[2643,2644]},{"teal":2673,"source":"contracts/InjectedRewardsPool.algo.ts:488","pc":[2645,2646]},{"teal":2674,"source":"contracts/InjectedRewardsPool.algo.ts:488","pc":[2647,2648]},{"teal":2675,"source":"contracts/InjectedRewardsPool.algo.ts:488","pc":[2649]},{"teal":2676,"source":"contracts/InjectedRewardsPool.algo.ts:488","pc":[2650]},{"teal":2677,"source":"contracts/InjectedRewardsPool.algo.ts:488","pc":[2651,2652]},{"teal":2681,"source":"contracts/InjectedRewardsPool.algo.ts:489","pc":[2653,2654]},{"teal":2682,"source":"contracts/InjectedRewardsPool.algo.ts:489","pc":[2655,2656]},{"teal":2683,"source":"contracts/InjectedRewardsPool.algo.ts:489","pc":[2657,2658,2659]},{"teal":2684,"source":"contracts/InjectedRewardsPool.algo.ts:489","pc":[2660,2661,2662]},{"teal":2691,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2663,2664]},{"teal":2692,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2665]},{"teal":2693,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2666]},{"teal":2694,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2667,2668]},{"teal":2695,"source":"contracts/InjectedRewardsPool.algo.ts:404","pc":[2669,2670,2671]},{"teal":2698,"source":"contracts/InjectedRewardsPool.algo.ts:403","pc":[2672]},{"teal":2702,"source":"contracts/InjectedRewardsPool.algo.ts:494","pc":[2673,2674,2675]},{"teal":2705,"source":"contracts/InjectedRewardsPool.algo.ts:494","pc":[2676]},{"teal":2709,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2677]},{"teal":2710,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2678,2679]},{"teal":2715,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2680,2681]},{"teal":2716,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2682,2683]},{"teal":2717,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2684]},{"teal":2718,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2685]},{"teal":2719,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2686,2687,2688]},{"teal":2724,"source":"contracts/InjectedRewardsPool.algo.ts:496","pc":[2689,2690]},{"teal":2725,"source":"contracts/InjectedRewardsPool.algo.ts:496","pc":[2691,2692]},{"teal":2726,"source":"contracts/InjectedRewardsPool.algo.ts:496","pc":[2693]},{"teal":2727,"source":"contracts/InjectedRewardsPool.algo.ts:496","pc":[2694,2695,2696]},{"teal":2732,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2697]},{"teal":2733,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2698]},{"teal":2734,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2699,2700]},{"teal":2735,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2701]},{"teal":2736,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2702,2703]},{"teal":2737,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2704]},{"teal":2738,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2705]},{"teal":2739,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2706,2707]},{"teal":2740,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2708,2709]},{"teal":2741,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2710,2711]},{"teal":2742,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2712,2713]},{"teal":2743,"source":"contracts/InjectedRewardsPool.algo.ts:497","pc":[2714]},{"teal":2749,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2715,2716]},{"teal":2750,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2717]},{"teal":2751,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2718]},{"teal":2752,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2719]},{"teal":2753,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2720]},{"teal":2754,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2721,2722]},{"teal":2755,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2723]},{"teal":2756,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2724,2725]},{"teal":2757,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2726]},{"teal":2758,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2727,2728]},{"teal":2759,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2729]},{"teal":2760,"source":"contracts/InjectedRewardsPool.algo.ts:499","pc":[2730,2731,2732]},{"teal":2765,"source":"contracts/InjectedRewardsPool.algo.ts:500","pc":[2733,2734]},{"teal":2766,"source":"contracts/InjectedRewardsPool.algo.ts:500","pc":[2735,2736,2737]},{"teal":2773,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2738,2739]},{"teal":2774,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2740]},{"teal":2775,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2741]},{"teal":2776,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2742,2743]},{"teal":2777,"source":"contracts/InjectedRewardsPool.algo.ts:495","pc":[2744,2745,2746]},{"teal":2782,"source":"contracts/InjectedRewardsPool.algo.ts:503","pc":[2747]},{"teal":2786,"source":"contracts/InjectedRewardsPool.algo.ts:494","pc":[2748,2749]},{"teal":2787,"source":"contracts/InjectedRewardsPool.algo.ts:494","pc":[2750]},{"teal":2791,"source":"contracts/InjectedRewardsPool.algo.ts:506","pc":[2751,2752,2753]},{"teal":2794,"source":"contracts/InjectedRewardsPool.algo.ts:506","pc":[2754]},{"teal":2798,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2755]},{"teal":2799,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2756,2757]},{"teal":2804,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2758,2759]},{"teal":2805,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2760,2761]},{"teal":2806,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2762]},{"teal":2807,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2763]},{"teal":2808,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2764,2765,2766]},{"teal":2813,"source":"contracts/InjectedRewardsPool.algo.ts:508","pc":[2767,2768]},{"teal":2814,"source":"contracts/InjectedRewardsPool.algo.ts:508","pc":[2769,2770]},{"teal":2815,"source":"contracts/InjectedRewardsPool.algo.ts:508","pc":[2771]},{"teal":2816,"source":"contracts/InjectedRewardsPool.algo.ts:508","pc":[2772,2773,2774]},{"teal":2821,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2775]},{"teal":2822,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2776]},{"teal":2823,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2777,2778]},{"teal":2824,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2779]},{"teal":2825,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2780,2781]},{"teal":2826,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2782]},{"teal":2827,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2783]},{"teal":2828,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2784,2785]},{"teal":2829,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2786,2787]},{"teal":2830,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2788,2789]},{"teal":2831,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2790,2791]},{"teal":2832,"source":"contracts/InjectedRewardsPool.algo.ts:509","pc":[2792]},{"teal":2838,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2793,2794]},{"teal":2839,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2795]},{"teal":2840,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2796]},{"teal":2841,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2797]},{"teal":2842,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2798]},{"teal":2843,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2799,2800]},{"teal":2844,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2801]},{"teal":2845,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2802,2803]},{"teal":2846,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2804]},{"teal":2847,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2805,2806]},{"teal":2848,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2807]},{"teal":2849,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2808,2809,2810]},{"teal":2854,"source":"contracts/InjectedRewardsPool.algo.ts:512","pc":[2811,2812]},{"teal":2855,"source":"contracts/InjectedRewardsPool.algo.ts:512","pc":[2813]},{"teal":2856,"source":"contracts/InjectedRewardsPool.algo.ts:512","pc":[2814]},{"teal":2857,"source":"contracts/InjectedRewardsPool.algo.ts:512","pc":[2815,2816]},{"teal":2858,"source":"contracts/InjectedRewardsPool.algo.ts:512","pc":[2817]},{"teal":2859,"source":"contracts/InjectedRewardsPool.algo.ts:512","pc":[2818,2819]},{"teal":2860,"source":"contracts/InjectedRewardsPool.algo.ts:512","pc":[2820]},{"teal":2864,"source":"contracts/InjectedRewardsPool.algo.ts:513","pc":[2821]},{"teal":2865,"source":"contracts/InjectedRewardsPool.algo.ts:511","pc":[2822,2823,2824]},{"teal":2870,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2825,2826]},{"teal":2871,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2827]},{"teal":2872,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2828]},{"teal":2873,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2829]},{"teal":2874,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2830]},{"teal":2875,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2831,2832]},{"teal":2876,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2833]},{"teal":2877,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2834,2835]},{"teal":2878,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2836]},{"teal":2879,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2837,2838]},{"teal":2880,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2839]},{"teal":2881,"source":"contracts/InjectedRewardsPool.algo.ts:514","pc":[2840,2841,2842]},{"teal":2886,"source":"contracts/InjectedRewardsPool.algo.ts:515","pc":[2843,2844]},{"teal":2887,"source":"contracts/InjectedRewardsPool.algo.ts:515","pc":[2845]},{"teal":2888,"source":"contracts/InjectedRewardsPool.algo.ts:515","pc":[2846]},{"teal":2889,"source":"contracts/InjectedRewardsPool.algo.ts:515","pc":[2847,2848]},{"teal":2890,"source":"contracts/InjectedRewardsPool.algo.ts:515","pc":[2849]},{"teal":2891,"source":"contracts/InjectedRewardsPool.algo.ts:515","pc":[2850,2851]},{"teal":2892,"source":"contracts/InjectedRewardsPool.algo.ts:515","pc":[2852]},{"teal":2896,"source":"contracts/InjectedRewardsPool.algo.ts:516","pc":[2853]},{"teal":2903,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2854,2855]},{"teal":2904,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2856]},{"teal":2905,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2857]},{"teal":2906,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2858,2859]},{"teal":2907,"source":"contracts/InjectedRewardsPool.algo.ts:507","pc":[2860,2861,2862]},{"teal":2910,"source":"contracts/InjectedRewardsPool.algo.ts:506","pc":[2863]},{"teal":2914,"source":"contracts/InjectedRewardsPool.algo.ts:520","pc":[2864,2865,2866]},{"teal":2918,"source":"contracts/InjectedRewardsPool.algo.ts:521","pc":[2867,2868]},{"teal":2919,"source":"contracts/InjectedRewardsPool.algo.ts:521","pc":[2869]},{"teal":2920,"source":"contracts/InjectedRewardsPool.algo.ts:521","pc":[2870]},{"teal":2921,"source":"contracts/InjectedRewardsPool.algo.ts:521","pc":[2871,2872]},{"teal":2922,"source":"contracts/InjectedRewardsPool.algo.ts:521","pc":[2873]},{"teal":2923,"source":"contracts/InjectedRewardsPool.algo.ts:521","pc":[2874,2875]},{"teal":2924,"source":"contracts/InjectedRewardsPool.algo.ts:521","pc":[2876]},{"teal":2925,"source":"contracts/InjectedRewardsPool.algo.ts:520","pc":[2877]},{"teal":2930,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2878,2879,2880]},{"teal":2931,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2881]},{"teal":2932,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2882]},{"teal":2933,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2883]},{"teal":2934,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2884]},{"teal":2937,"source":"contracts/InjectedRewardsPool.algo.ts:524","errorMessage":"argument 0 (enabled) for setFreeze must be a bool","pc":[2885]},{"teal":2938,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2886]},{"teal":2939,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2887]},{"teal":2942,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2888,2889,2890]},{"teal":2943,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2891]},{"teal":2944,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2892]},{"teal":2948,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2893,2894,2895]},{"teal":2952,"source":"contracts/InjectedRewardsPool.algo.ts:525","pc":[2896,2897]},{"teal":2953,"source":"contracts/InjectedRewardsPool.algo.ts:525","pc":[2898,2899]},{"teal":2954,"source":"contracts/InjectedRewardsPool.algo.ts:525","pc":[2900]},{"teal":2955,"source":"contracts/InjectedRewardsPool.algo.ts:525","pc":[2901]},{"teal":2958,"source":"contracts/InjectedRewardsPool.algo.ts:525","errorMessage":"Only admin can freeze payouts","pc":[2902]},{"teal":2962,"source":"contracts/InjectedRewardsPool.algo.ts:526","pc":[2903,2904]},{"teal":2963,"source":"contracts/InjectedRewardsPool.algo.ts:526","pc":[2905,2906]},{"teal":2964,"source":"contracts/InjectedRewardsPool.algo.ts:526","pc":[2907,2908]},{"teal":2965,"source":"contracts/InjectedRewardsPool.algo.ts:526","pc":[2909]},{"teal":2966,"source":"contracts/InjectedRewardsPool.algo.ts:526","pc":[2910,2911]},{"teal":2967,"source":"contracts/InjectedRewardsPool.algo.ts:526","pc":[2912]},{"teal":2968,"source":"contracts/InjectedRewardsPool.algo.ts:526","pc":[2913]},{"teal":2969,"source":"contracts/InjectedRewardsPool.algo.ts:524","pc":[2914]},{"teal":2974,"source":"contracts/InjectedRewardsPool.algo.ts:529","pc":[2915,2916,2917]},{"teal":2975,"source":"contracts/InjectedRewardsPool.algo.ts:529","pc":[2918]},{"teal":2976,"source":"contracts/InjectedRewardsPool.algo.ts:529","pc":[2919]},{"teal":2980,"source":"contracts/InjectedRewardsPool.algo.ts:529","pc":[2920,2921,2922]},{"teal":2981,"source":"contracts/InjectedRewardsPool.algo.ts:529","pc":[2923]},{"teal":2984,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2924,2925,2926,2927,2928,2929]},{"teal":2985,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2930,2931,2932]},{"teal":2986,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2933,2934,2935,2936]},{"teal":2989,"source":"contracts/InjectedRewardsPool.algo.ts:23","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[2937]},{"teal":2992,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2938,2939,2940,2941,2942,2943]},{"teal":2993,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2944,2945,2946,2947,2948,2949]},{"teal":2994,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2950,2951,2952,2953,2954,2955]},{"teal":2995,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2956,2957,2958,2959,2960,2961]},{"teal":2996,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2962,2963,2964,2965,2966,2967]},{"teal":2997,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2968,2969,2970,2971,2972,2973]},{"teal":2998,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2974,2975,2976,2977,2978,2979]},{"teal":2999,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2980,2981,2982,2983,2984,2985]},{"teal":3000,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2986,2987,2988,2989,2990,2991]},{"teal":3001,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2992,2993,2994,2995,2996,2997]},{"teal":3002,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[2998,2999,3000,3001,3002,3003]},{"teal":3003,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[3004,3005,3006,3007,3008,3009]},{"teal":3004,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[3010,3011,3012,3013,3014,3015]},{"teal":3005,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[3016,3017,3018]},{"teal":3006,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[3019,3020,3021,3022,3023,3024,3025,3026,3027,3028,3029,3030,3031,3032,3033,3034,3035,3036,3037,3038,3039,3040,3041,3042,3043,3044,3045,3046]},{"teal":3009,"source":"contracts/InjectedRewardsPool.algo.ts:23","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[3047]},{"teal":3012,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[3048,3049,3050,3051,3052,3053]},{"teal":3013,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[3054,3055,3056]},{"teal":3014,"source":"contracts/InjectedRewardsPool.algo.ts:23","pc":[3057,3058,3059,3060]},{"teal":3017,"source":"contracts/InjectedRewardsPool.algo.ts:23","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[3061]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDk="},"byteCode":{"approval":"CSARAAFYBqwCBSAE6AcIoI0GgICapuqv4wFA96sBKDB/Jg8DCoEBAAdzdGFrZXJzCAAAAAAAAAAACm51bVN0YWtlcnMMYWRtaW5BZGRyZXNzC3RvdGFsU3Rha2VkDXJld2FyZEFzc2V0SWQTYWxnb0luamVjdGVkUmV3YXJkcxJpbmplY3RlZEFTQVJld2FyZHMNc3Rha2VkQXNzZXRJZBhtaW5TdGFrZVBlcmlvZEZvclJld2FyZHMXbGFzdFJld2FyZEluamVjdGlvblRpbWUGZnJlZXplAQAxGBQlCzEZCI0MCn4AAAAAAAAAAArsCnAAAAAAAAAAAAAAADYaAUkVIQYSRIgAAiNDigEAJwWL/2eJNhoDFzYaAhc2GgEXiAACI0OKAwAxACcFZBJEJwqL/2cnB4v+ZycGImcnC4v9ZycMImcnDSInDiJPAlRnJwkiZycEImcnCCJnsSEHshCL/7IRMgqyFCKyEiKyAbOJNhoBF4gAAiNDigEAMQAnBWQSRCcLi/9niTYaAUkVIQYSRIgAAiNDigEAMQAnBWQSRCcFi/9niYoBAYHEE4v/gZADCwiJgAQVH3x1iAAEULAjQ4oAASlJIowAJwdkIhNBAAeLACEKCIwAIQqLAAghDYj/xAghEIj/vgiMAYsBFowARgGJMRYjCUk4ECMSRIgAAiNDigEAKUkqvUxIFEQxACcFZBJEIowAJwdkIhNBAAeLACEKCIwAIQqLAAghDYj/dgghEIj/cAiMAYv/OAcyChJEi/84CIsBEkQqgfCrAblIgA5taW5pbXVtQmFsYW5jZYsBZ4sAIg1BABWxIQeyECcHZLIRMgqyFCKyEiKyAbOJNhoCFzYaARcxFiMJSTgQIQcSRIgAAiNDigMAMQAnBWQSRIv/OAAnBWQSRIv/OBQyChJEi/84EYv9EkSL/zgSi/4SRCcJZIv+CCcJTGcnDDIHZ4k2GgEXMRYjCUk4ECMSRIgAAiNDigIAMQAnBWQSRIv/OAcyChJEi/84CIv+EkQnCGSL/ggnCExnJwwyB2eJiAACI0OKAAAxACcFZBJEiTYaARcxFiMJSTgQIQcSRIgAAiNDigIAKUcDMgeMAIv+Ig1EMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbOL/zgAMQASRIv/OBQyChJEi/84EScKZBJEi/84Eov+EkQijAEyDCEEDEEAErElshAisgEoSbIesh8hBbIZsyKMAosCgfoBDEEBnosBQQADQgGWiwIkCyIIIQYqTgK6MQASQQCzMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbOLAiQLJCpOArqMA4sDIQaLA1cgCBeL/zgSCBZdjAMyDCEEDEEAErElshAisgEoSbIesh8hBbIZs4sDK1wojAOLAyEPiwAWXYwDMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbOLAiQLiwMqTgK7MgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbMnBmSL/zgSCCcGTGcjjAFCAK6LAiQLIgghBipOAroyAxJBAJwyDCEEDEEAErElshAisgEoSbIesh8hBbIZsycGSWSL/zgSCGcyDCEEDEEAErElshAisgEoSbIesh8hBbIZs4sCJAsxAIv/OBIWUCtQiwAWUCtQiwAWUCtQK1AqTgK7MgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbMnBElkIwhnMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbMjjAEyDCEEDEEAErElshAisgEoSbIesh8hBbIZs4sCIwiMAkL+WYsBRImIAAIjQ4oAAClHCScIZIwAJwlkjAEyDCEEDEEAErElshAisgEoSbIesh8hBbIZsyKMAiKMA4sDJwRkDEEAe4sDJAshBgghCSpOAroXIg1BAF8yDCEEDEEAErElshAisgEoSbIesh8hBbIZs4sDJAshDggyB4sDJAshDwghCSpOAroXCRYqTgK7iwMkCyEOCCEJKk4CuhcnC2QPQQATiwKLAyQLIQYIIQkqTgK6FwiMAosDIwiMA0L/fCKMBIsEJwRkDEEBVTIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwQkCyEGCCEJKk4CuheMBYsFIg1BARuLBCQLJCpOArqMBosGVygIFycLZA1BAO+LBSELHSKLAh9ISEwURIwHiwaBUIsHFl2MBosAIg1BAFSLAIsHHSIhCx9ISEwURIwIiwgiEkEAAyOMCIsGgTiLBlc4CBeLCAgWXYwGJwhJZIsICWcnCmQiEkEAGYsGIQaLBlcgCBeLCAgWXYwGJwZJZIsICGcyDCEEDEEAErElshAisgEoSbIesh8hBbIZs4sBIg1BAFmLAYsHHSIhCx9ISEwURIwJiwkiEkEAAyOMCScJSWSLCQlnJwdkJwpkEkEAHIsGIQaLBlcgCBeLCQgWXYwGJwZJZIsJCGdCABGLBoFIiwZXSAgXiwkIFl2MBosGIQwyBxZdjAaLBCQLiwYqTgK7iwQjCIwEQv6iiYoBASkijACLACcEZAxBAEEyDCEEDEEAErElshAisgEoSbIesh8hBbIZs4sAJAsiCCEGKk4Cuov/EkEADIsAJAskKk4CukIAGYsAIwiMAEL/tjIDK1ArUCtQK1ArUCtQK1CMAImIAAIjQ4oAACkyDCEEDEEAErElshAisgEoSbIesh8hBbIZszEAiP90jACLAFc4CBciDUEAILEjshCLAFc4CBeyCDEAsgcyCrIAIQiyAbOLACtcOIwAiwBXSAgXIg1BACaxIQeyECcHZLIRMQCyFDIKsgCLAFdICBeyEiEIsgGziwArXEiMAIsAIQwyBxZdjACLAIsAVwAgiAJbMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbOJNhoBF4gAAiNDigEAKUcEIowAiwAnBGQMQQHWMgwhBAxBABKxJbIQIrIBKEmyHrIfIQWyGbOLACQLJCpOArqMAYsBVwAgMQASQQGdiwFXIAgXIg1BAFsnCmQiEkEAKLEjshCL/yISQQAJiwFXIAgXQgACi/+yCDEAsgcyCrIAIQiyAbNCACuxIQeyECcKZLIRMQCyFDIKsgCL/yISQQAJiwFXIAgXQgACi/+yEiEIsgGziwFXOAgXIg1BACCxI7IQiwFXOAgXsggxALIHMgqyACEIsgGziwErXDiMAYsBV0gIFyINQQAmsSEHshAnB2SyETEAshQyCrIAiwFXSAgXshIhCLIBs4sBK1xIjAEnBklki/8iEkEACYsBVyAIF0IAAov/CWcyDCEEDEEAErElshAisgEoSbIesh8hBbIZs4v/IhJBAHYyAytQK1ArUCtQK1ArUCtQjAKLAosBVwAgiADeJwRkIwkkCyIIIQYqTgK6iP1zjAMnBGQjCSQLIgghBipOArqIAGqMBDIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwCLA4gBBosEiwKIAP8nBElkIwlnQgAYiwEhBosBVyAIF4v/CRZdjAGLAStcSIwBiwEhDDIHFl2MAYsBiwFXACCIAFiLACMIjABC/iGJigEBKSKMAIsAJwRkDEEAOjIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwAkCyIIIQYqTgK6i/8SQQAFiwBCAAqLACMIjABC/70ijACJigIAKSKMAIsAJwRkDEEAYDIMIQQMQQASsSWyECKyAShJsh6yHyEFshmziwAkCyIIIQYqTgK6i/8SQQAOiwAkC4v+Kk4Cu4lCAB2LACQLIgghBipOAroyAxJBAAuLACQLi/4qTgK7iYsAIwiMAEL/l4mKAgCL/iQLi/8qTgK7iTYaAUkVIxJEIlOIAAIjQ4oBADEAJwVkEkQnDYv/Jw4iTwJUZ4mIAAIjQ4oAAImABNMkvqQ2GgCOAfWEAIAE0Uc7bYAEWwZvQYAEo/6kD4AETENnJoAER8/MBIAENHAH64AEH3+gJ4AE9OtKA4AE6kvKV4AEpa5r0YAEgTzomoAEu2vG44AEMXLKnTYaAI4N9S31ivWj9c/2Dvab9u73O/lk++P8mP9X/3wAgAQkh8MsNhoAjgH3HQA=","clear":"CQ=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":1,"patch":2,"commitHash":"088f89dd"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


// Type definitions for ARC-56 structs

export type MbrReturn = {
  mbrPayment: bigint
}


/**
 * Converts the ABI tuple representation of a mbrReturn to the struct representation
 */
export function MbrReturnFromTuple(abiTuple: [bigint]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.mbrReturn, APP_SPEC.structs) as MbrReturn
}

/**
 * The argument types for the InjectedRewardsPool contract
 */
export type InjectedRewardsPoolArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication(address)void': {
      adminAddress: string
    }
    'initApplication(uint64,uint64,uint64)void': {
      stakedAsset: bigint | number
      rewardAssetId: bigint | number
      minStakePeriodForRewards: bigint | number
    }
    'updateMinStakePeriod(uint64)void': {
      minStakePeriodForRewards: bigint | number
    }
    'updateAdminAddress(address)void': {
      adminAddress: string
    }
    'getMBRForPoolCreation()(uint64)': Record<string, never>
    'initStorage(pay)void': {
      mbrPayment: AppMethodCallTransactionArgument
    }
    'injectRewards(axfer,uint64,uint64)void': {
      rewardTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
      rewardAssetId: bigint | number
    }
    'injectAlgoRewards(pay,uint64)void': {
      payTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
    }
    'deleteApplication()void': Record<string, never>
    'stake(axfer,uint64)void': {
      stakeTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
    }
    'accrueRewards()void': Record<string, never>
    'claimRewards()void': Record<string, never>
    'unstake(uint64)void': {
      quantity: bigint | number
    }
    'setFreeze(bool)void': {
      enabled: boolean
    }
    'gas()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication(address)void': [adminAddress: string]
    'initApplication(uint64,uint64,uint64)void': [stakedAsset: bigint | number, rewardAssetId: bigint | number, minStakePeriodForRewards: bigint | number]
    'updateMinStakePeriod(uint64)void': [minStakePeriodForRewards: bigint | number]
    'updateAdminAddress(address)void': [adminAddress: string]
    'getMBRForPoolCreation()(uint64)': []
    'initStorage(pay)void': [mbrPayment: AppMethodCallTransactionArgument]
    'injectRewards(axfer,uint64,uint64)void': [rewardTxn: AppMethodCallTransactionArgument, quantity: bigint | number, rewardAssetId: bigint | number]
    'injectAlgoRewards(pay,uint64)void': [payTxn: AppMethodCallTransactionArgument, quantity: bigint | number]
    'deleteApplication()void': []
    'stake(axfer,uint64)void': [stakeTxn: AppMethodCallTransactionArgument, quantity: bigint | number]
    'accrueRewards()void': []
    'claimRewards()void': []
    'unstake(uint64)void': [quantity: bigint | number]
    'setFreeze(bool)void': [enabled: boolean]
    'gas()void': []
  }
}

/**
 * The return type for each method
 */
export type InjectedRewardsPoolReturns = {
  'createApplication(address)void': void
  'initApplication(uint64,uint64,uint64)void': void
  'updateMinStakePeriod(uint64)void': void
  'updateAdminAddress(address)void': void
  'getMBRForPoolCreation()(uint64)': MbrReturn
  'initStorage(pay)void': void
  'injectRewards(axfer,uint64,uint64)void': void
  'injectAlgoRewards(pay,uint64)void': void
  'deleteApplication()void': void
  'stake(axfer,uint64)void': void
  'accrueRewards()void': void
  'claimRewards()void': void
  'unstake(uint64)void': void
  'setFreeze(bool)void': void
  'gas()void': void
}

/**
 * Defines the types of available calls and state of the InjectedRewardsPool smart contract.
 */
export type InjectedRewardsPoolTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication(address)void' | 'createApplication', {
      argsObj: InjectedRewardsPoolArgs['obj']['createApplication(address)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['createApplication(address)void']
      returns: InjectedRewardsPoolReturns['createApplication(address)void']
    }>
    & Record<'initApplication(uint64,uint64,uint64)void' | 'initApplication', {
      argsObj: InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64)void']
      returns: InjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64)void']
    }>
    & Record<'updateMinStakePeriod(uint64)void' | 'updateMinStakePeriod', {
      argsObj: InjectedRewardsPoolArgs['obj']['updateMinStakePeriod(uint64)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['updateMinStakePeriod(uint64)void']
      returns: InjectedRewardsPoolReturns['updateMinStakePeriod(uint64)void']
    }>
    & Record<'updateAdminAddress(address)void' | 'updateAdminAddress', {
      argsObj: InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']
      returns: InjectedRewardsPoolReturns['updateAdminAddress(address)void']
    }>
    & Record<'getMBRForPoolCreation()(uint64)' | 'getMBRForPoolCreation', {
      argsObj: InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)']
      argsTuple: InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']
      returns: InjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)']
    }>
    & Record<'initStorage(pay)void' | 'initStorage', {
      argsObj: InjectedRewardsPoolArgs['obj']['initStorage(pay)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']
      returns: InjectedRewardsPoolReturns['initStorage(pay)void']
    }>
    & Record<'injectRewards(axfer,uint64,uint64)void' | 'injectRewards', {
      argsObj: InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']
      returns: InjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void']
    }>
    & Record<'injectAlgoRewards(pay,uint64)void' | 'injectAlgoRewards', {
      argsObj: InjectedRewardsPoolArgs['obj']['injectAlgoRewards(pay,uint64)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['injectAlgoRewards(pay,uint64)void']
      returns: InjectedRewardsPoolReturns['injectAlgoRewards(pay,uint64)void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: InjectedRewardsPoolArgs['obj']['deleteApplication()void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['deleteApplication()void']
      returns: InjectedRewardsPoolReturns['deleteApplication()void']
    }>
    & Record<'stake(axfer,uint64)void' | 'stake', {
      argsObj: InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']
      returns: InjectedRewardsPoolReturns['stake(axfer,uint64)void']
    }>
    & Record<'accrueRewards()void' | 'accrueRewards', {
      argsObj: InjectedRewardsPoolArgs['obj']['accrueRewards()void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['accrueRewards()void']
      returns: InjectedRewardsPoolReturns['accrueRewards()void']
    }>
    & Record<'claimRewards()void' | 'claimRewards', {
      argsObj: InjectedRewardsPoolArgs['obj']['claimRewards()void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['claimRewards()void']
      returns: InjectedRewardsPoolReturns['claimRewards()void']
    }>
    & Record<'unstake(uint64)void' | 'unstake', {
      argsObj: InjectedRewardsPoolArgs['obj']['unstake(uint64)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']
      returns: InjectedRewardsPoolReturns['unstake(uint64)void']
    }>
    & Record<'setFreeze(bool)void' | 'setFreeze', {
      argsObj: InjectedRewardsPoolArgs['obj']['setFreeze(bool)void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']
      returns: InjectedRewardsPoolReturns['setFreeze(bool)void']
    }>
    & Record<'gas()void' | 'gas', {
      argsObj: InjectedRewardsPoolArgs['obj']['gas()void']
      argsTuple: InjectedRewardsPoolArgs['tuple']['gas()void']
      returns: InjectedRewardsPoolReturns['gas()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        stakedAssetId: bigint
        rewardAssetId: bigint
        minStakePeriodForRewards: bigint
        totalStaked: bigint
        algoInjectedRewards: bigint
        injectedAsaRewards: bigint
        lastRewardInjectionTime: bigint
        adminAddress: string
        minimumBalance: bigint
        numStakers: bigint
        freeze: boolean
      }
      maps: {}
    }
    box: {
      keys: {
        stakers: [[string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint]]
      }
      maps: {}
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type InjectedRewardsPoolSignatures = keyof InjectedRewardsPoolTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type InjectedRewardsPoolNonVoidMethodSignatures = keyof InjectedRewardsPoolTypes['methods'] extends infer T ? T extends keyof InjectedRewardsPoolTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the InjectedRewardsPool smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends InjectedRewardsPoolSignatures> = InjectedRewardsPoolTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the InjectedRewardsPool smart contract to the method's return type
 */
export type MethodReturn<TSignature extends InjectedRewardsPoolSignatures> = InjectedRewardsPoolTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = InjectedRewardsPoolTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = InjectedRewardsPoolTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type InjectedRewardsPoolCreateCallParams =
  | Expand<CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & {method: 'createApplication(address)void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type InjectedRewardsPoolDeleteCallParams =
  | Expand<CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type InjectedRewardsPoolDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: InjectedRewardsPoolCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: InjectedRewardsPoolDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the InjectedRewardsPool smart contract
 */
export abstract class InjectedRewardsPoolParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends InjectedRewardsPoolCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication(address)void':
            return InjectedRewardsPoolParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the InjectedRewardsPool smart contract using the createApplication(address)void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication(address)void' as const,
          args: Array.isArray(params.args) ? params.args : [params.args.adminAddress],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends InjectedRewardsPoolDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return InjectedRewardsPoolParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the InjectedRewardsPool smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the initApplication(uint64,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initApplication(params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initApplication(uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakedAsset, params.args.rewardAssetId, params.args.minStakePeriodForRewards],
    }
  }
  /**
   * Constructs a no op call for the updateMinStakePeriod(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateMinStakePeriod(params: CallParams<InjectedRewardsPoolArgs['obj']['updateMinStakePeriod(uint64)void'] | InjectedRewardsPoolArgs['tuple']['updateMinStakePeriod(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateMinStakePeriod(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.minStakePeriodForRewards],
    }
  }
  /**
   * Constructs a no op call for the updateAdminAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateAdminAddress(params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateAdminAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.adminAddress],
    }
  }
  /**
   * Constructs a no op call for the getMBRForPoolCreation()(uint64) ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getMbrForPoolCreation(params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getMBRForPoolCreation()(uint64)' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the initStorage(pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initStorage(params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initStorage(pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.mbrPayment],
    }
  }
  /**
   * Constructs a no op call for the injectRewards(axfer,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static injectRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'injectRewards(axfer,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.rewardTxn, params.args.quantity, params.args.rewardAssetId],
    }
  }
  /**
   * Constructs a no op call for the injectAlgoRewards(pay,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static injectAlgoRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['injectAlgoRewards(pay,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectAlgoRewards(pay,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'injectAlgoRewards(pay,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.payTxn, params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the stake(axfer,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static stake(params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'stake(axfer,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakeTxn, params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the accrueRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static accrueRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'accrueRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the claimRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static claimRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'claimRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the unstake(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static unstake(params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'unstake(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the setFreeze(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setFreeze(params: CallParams<InjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | InjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setFreeze(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.enabled],
    }
  }
  /**
   * Constructs a no op call for the gas()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gas(params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gas()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the InjectedRewardsPool smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class InjectedRewardsPoolFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `InjectedRewardsPoolFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClient {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new InjectedRewardsPoolClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new InjectedRewardsPoolClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the InjectedRewardsPool smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: InjectedRewardsPoolDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? InjectedRewardsPoolParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (InjectedRewardsPoolCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? InjectedRewardsPoolParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (InjectedRewardsPoolDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new InjectedRewardsPoolClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the InjectedRewardsPool smart contract using the createApplication(address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.params.create(InjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the InjectedRewardsPool smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(InjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the InjectedRewardsPool smart contract using the createApplication(address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.createTransaction.create(InjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the InjectedRewardsPool smart contract using an ABI method call using the createApplication(address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<InjectedRewardsPoolArgs['obj']['createApplication(address)void'] | InjectedRewardsPoolArgs['tuple']['createApplication(address)void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        const result = await this.appFactory.send.create(InjectedRewardsPoolParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | InjectedRewardsPoolReturns['createApplication(address)void']) }, appClient: new InjectedRewardsPoolClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the InjectedRewardsPool smart contract
 */
export class InjectedRewardsPoolClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `InjectedRewardsPoolClient`
   *
   * @param appClient An `AppClient` instance which has been created with the InjectedRewardsPool app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `InjectedRewardsPoolClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends InjectedRewardsPoolNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `InjectedRewardsPoolClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<InjectedRewardsPoolClient> {
    return new InjectedRewardsPoolClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `InjectedRewardsPoolClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<InjectedRewardsPoolClient> {
    return new InjectedRewardsPoolClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClient {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the InjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(InjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the InjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `updateMinStakePeriod(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateMinStakePeriod: (params: CallParams<InjectedRewardsPoolArgs['obj']['updateMinStakePeriod(uint64)void'] | InjectedRewardsPoolArgs['tuple']['updateMinStakePeriod(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.updateMinStakePeriod(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateAdminAddress: (params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getMbrForPoolCreation: (params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initStorage: (params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    injectRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `injectAlgoRewards(pay,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    injectAlgoRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['injectAlgoRewards(pay,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectAlgoRewards(pay,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.injectAlgoRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    stake: (params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    accrueRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    claimRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    unstake: (params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setFreeze: (params: CallParams<InjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | InjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.setFreeze(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gas: (params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(InjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the InjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(InjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the InjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `updateMinStakePeriod(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateMinStakePeriod: (params: CallParams<InjectedRewardsPoolArgs['obj']['updateMinStakePeriod(uint64)void'] | InjectedRewardsPoolArgs['tuple']['updateMinStakePeriod(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.updateMinStakePeriod(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateAdminAddress: (params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getMbrForPoolCreation: (params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initStorage: (params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    injectRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `injectAlgoRewards(pay,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    injectAlgoRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['injectAlgoRewards(pay,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectAlgoRewards(pay,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.injectAlgoRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    stake: (params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    accrueRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    claimRewards: (params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    unstake: (params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setFreeze: (params: CallParams<InjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | InjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.setFreeze(params))
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gas: (params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(InjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the InjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(InjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the InjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initApplication: async (params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.initApplication(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `updateMinStakePeriod(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateMinStakePeriod: async (params: CallParams<InjectedRewardsPoolArgs['obj']['updateMinStakePeriod(uint64)void'] | InjectedRewardsPoolArgs['tuple']['updateMinStakePeriod(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.updateMinStakePeriod(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['updateMinStakePeriod(uint64)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateAdminAddress: async (params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.updateAdminAddress(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['updateAdminAddress(address)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getMbrForPoolCreation: async (params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initStorage: async (params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.initStorage(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['initStorage(pay)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    injectRewards: async (params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.injectRewards(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `injectAlgoRewards(pay,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    injectAlgoRewards: async (params: CallParams<InjectedRewardsPoolArgs['obj']['injectAlgoRewards(pay,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectAlgoRewards(pay,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.injectAlgoRewards(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['injectAlgoRewards(pay,uint64)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    stake: async (params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.stake(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['stake(axfer,uint64)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    accrueRewards: async (params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.accrueRewards(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['accrueRewards()void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    claimRewards: async (params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.claimRewards(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['claimRewards()void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    unstake: async (params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.unstake(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['unstake(uint64)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setFreeze: async (params: CallParams<InjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | InjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.setFreeze(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['setFreeze(bool)void'])}
    },

    /**
     * Makes a call to the InjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gas: async (params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(InjectedRewardsPoolParamsFactory.gas(params))
      return {...result, return: result.return as unknown as (undefined | InjectedRewardsPoolReturns['gas()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new InjectedRewardsPoolClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current InjectedRewardsPool app
   */
  state = {
    /**
     * Methods to access global state for the current InjectedRewardsPool app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          stakedAssetId: result.stakedAssetId,
          rewardAssetId: result.rewardAssetId,
          minStakePeriodForRewards: result.minStakePeriodForRewards,
          totalStaked: result.totalStaked,
          algoInjectedRewards: result.algoInjectedRewards,
          injectedAsaRewards: result.injectedASARewards,
          lastRewardInjectionTime: result.lastRewardInjectionTime,
          adminAddress: result.adminAddress,
          minimumBalance: result.minimumBalance,
          numStakers: result.numStakers,
          freeze: result.freeze,
        }
      },
      /**
       * Get the current value of the stakedAssetId key in global state
       */
      stakedAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("stakedAssetId")) as bigint | undefined },
      /**
       * Get the current value of the rewardAssetId key in global state
       */
      rewardAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("rewardAssetId")) as bigint | undefined },
      /**
       * Get the current value of the minStakePeriodForRewards key in global state
       */
      minStakePeriodForRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("minStakePeriodForRewards")) as bigint | undefined },
      /**
       * Get the current value of the totalStaked key in global state
       */
      totalStaked: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("totalStaked")) as bigint | undefined },
      /**
       * Get the current value of the algoInjectedRewards key in global state
       */
      algoInjectedRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("algoInjectedRewards")) as bigint | undefined },
      /**
       * Get the current value of the injectedASARewards key in global state
       */
      injectedAsaRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("injectedASARewards")) as bigint | undefined },
      /**
       * Get the current value of the lastRewardInjectionTime key in global state
       */
      lastRewardInjectionTime: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("lastRewardInjectionTime")) as bigint | undefined },
      /**
       * Get the current value of the adminAddress key in global state
       */
      adminAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("adminAddress")) as string | undefined },
      /**
       * Get the current value of the minimumBalance key in global state
       */
      minimumBalance: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("minimumBalance")) as bigint | undefined },
      /**
       * Get the current value of the numStakers key in global state
       */
      numStakers: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("numStakers")) as bigint | undefined },
      /**
       * Get the current value of the freeze key in global state
       */
      freeze: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("freeze")) as boolean | undefined },
    },
    /**
     * Methods to access box state for the current InjectedRewardsPool app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
          stakers: result.stakers,
        }
      },
      /**
       * Get the current value of the stakers key in box state
       */
      stakers: async (): Promise<[[string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint]] | undefined> => { return (await this.appClient.state.box.getValue("stakers")) as [[string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint], [string, bigint, bigint, bigint, bigint, bigint, bigint, bigint]] | undefined },
    },
  }

  public newGroup(): InjectedRewardsPoolComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a initApplication(uint64,uint64,uint64)void method call against the InjectedRewardsPool contract
       */
      initApplication(params: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initApplication(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateMinStakePeriod(uint64)void method call against the InjectedRewardsPool contract
       */
      updateMinStakePeriod(params: CallParams<InjectedRewardsPoolArgs['obj']['updateMinStakePeriod(uint64)void'] | InjectedRewardsPoolArgs['tuple']['updateMinStakePeriod(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateMinStakePeriod(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateAdminAddress(address)void method call against the InjectedRewardsPool contract
       */
      updateAdminAddress(params: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateAdminAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a getMBRForPoolCreation()(uint64) method call against the InjectedRewardsPool contract
       */
      getMbrForPoolCreation(params: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getMbrForPoolCreation(params)))
        resultMappers.push((v) => client.decodeReturnValue('getMBRForPoolCreation()(uint64)', v))
        return this
      },
      /**
       * Add a initStorage(pay)void method call against the InjectedRewardsPool contract
       */
      initStorage(params: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initStorage(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a injectRewards(axfer,uint64,uint64)void method call against the InjectedRewardsPool contract
       */
      injectRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.injectRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a injectAlgoRewards(pay,uint64)void method call against the InjectedRewardsPool contract
       */
      injectAlgoRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['injectAlgoRewards(pay,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectAlgoRewards(pay,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.injectAlgoRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a stake(axfer,uint64)void method call against the InjectedRewardsPool contract
       */
      stake(params: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.stake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a accrueRewards()void method call against the InjectedRewardsPool contract
       */
      accrueRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.accrueRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a claimRewards()void method call against the InjectedRewardsPool contract
       */
      claimRewards(params: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.claimRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a unstake(uint64)void method call against the InjectedRewardsPool contract
       */
      unstake(params: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.unstake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setFreeze(bool)void method call against the InjectedRewardsPool contract
       */
      setFreeze(params: CallParams<InjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | InjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setFreeze(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gas()void method call against the InjectedRewardsPool contract
       */
      gas(params: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gas(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the InjectedRewardsPool contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as InjectedRewardsPoolComposer
  }
}
export type InjectedRewardsPoolComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the initApplication(uint64,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initApplication(params?: CallParams<InjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64)void'] | undefined]>

  /**
   * Calls the updateMinStakePeriod(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateMinStakePeriod(params?: CallParams<InjectedRewardsPoolArgs['obj']['updateMinStakePeriod(uint64)void'] | InjectedRewardsPoolArgs['tuple']['updateMinStakePeriod(uint64)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['updateMinStakePeriod(uint64)void'] | undefined]>

  /**
   * Calls the updateAdminAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateAdminAddress(params?: CallParams<InjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | InjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['updateAdminAddress(address)void'] | undefined]>

  /**
   * Calls the getMBRForPoolCreation()(uint64) ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getMbrForPoolCreation(params?: CallParams<InjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | InjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'] | undefined]>

  /**
   * Calls the initStorage(pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initStorage(params?: CallParams<InjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | InjectedRewardsPoolArgs['tuple']['initStorage(pay)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['initStorage(pay)void'] | undefined]>

  /**
   * Calls the injectRewards(axfer,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  injectRewards(params?: CallParams<InjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'] | undefined]>

  /**
   * Calls the injectAlgoRewards(pay,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  injectAlgoRewards(params?: CallParams<InjectedRewardsPoolArgs['obj']['injectAlgoRewards(pay,uint64)void'] | InjectedRewardsPoolArgs['tuple']['injectAlgoRewards(pay,uint64)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['injectAlgoRewards(pay,uint64)void'] | undefined]>

  /**
   * Calls the stake(axfer,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  stake(params?: CallParams<InjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | InjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['stake(axfer,uint64)void'] | undefined]>

  /**
   * Calls the accrueRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  accrueRewards(params?: CallParams<InjectedRewardsPoolArgs['obj']['accrueRewards()void'] | InjectedRewardsPoolArgs['tuple']['accrueRewards()void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['accrueRewards()void'] | undefined]>

  /**
   * Calls the claimRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  claimRewards(params?: CallParams<InjectedRewardsPoolArgs['obj']['claimRewards()void'] | InjectedRewardsPoolArgs['tuple']['claimRewards()void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['claimRewards()void'] | undefined]>

  /**
   * Calls the unstake(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  unstake(params?: CallParams<InjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | InjectedRewardsPoolArgs['tuple']['unstake(uint64)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['unstake(uint64)void'] | undefined]>

  /**
   * Calls the setFreeze(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setFreeze(params?: CallParams<InjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | InjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['setFreeze(bool)void'] | undefined]>

  /**
   * Calls the gas()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gas(params?: CallParams<InjectedRewardsPoolArgs['obj']['gas()void'] | InjectedRewardsPoolArgs['tuple']['gas()void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['gas()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the InjectedRewardsPool smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<InjectedRewardsPoolArgs['obj']['deleteApplication()void'] | InjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): InjectedRewardsPoolComposer<[...TReturns, InjectedRewardsPoolReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the InjectedRewardsPool smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): InjectedRewardsPoolComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): InjectedRewardsPoolComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<InjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<InjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<InjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<InjectedRewardsPoolComposerResults<TReturns>>
}
export type InjectedRewardsPoolComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

