/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"PermissionlessInjectedRewardsPool","desc":"","methods":[{"name":"createApplication","args":[{"name":"adminAddress","type":"address"},{"name":"treasuryAddress","type":"address"},{"name":"injectorAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"initApplication","args":[{"name":"stakedAsset","type":"uint64"},{"name":"rewardAssetId","type":"uint64"},{"name":"xUSDAssetID","type":"uint64"},{"name":"platformFeeBps","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateAdminAddress","args":[{"name":"adminAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setPoolActive","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setPoolEnding","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateInjectedASARewards","args":[{"name":"injectedASARewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updatePaidASARewards","args":[{"name":"paidASARewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateInjectedxUSDRewards","args":[{"name":"injectedxUSDRewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateTreasuryAddress","args":[{"name":"treasuryAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateInjectorAddress","args":[{"name":"injectorAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateNumStakers","args":[{"name":"numStakers","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateFreeze","args":[{"name":"freeze","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updatePoolEnding","args":[{"name":"poolEnding","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getMBRForPoolCreation","args":[],"returns":{"type":"(uint64)","struct":"mbrReturn"},"actions":{"create":[],"call":["NoOp"]}},{"name":"initStorage","args":[{"name":"mbrPayment","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"injectRewards","args":[{"name":"rewardTxn","type":"axfer"},{"name":"quantity","type":"uint64"},{"name":"rewardAssetId","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"injectxUSD","args":[{"name":"xUSDTxn","type":"axfer"},{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}},{"name":"stake","args":[{"name":"stakeTxn","type":"axfer"},{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"accrueRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"claimRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"unstake","args":[{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setFreeze","args":[{"name":"enabled","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gas","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{"mbrReturn":[{"name":"mbrPayment","type":"uint64"}]},"state":{"schema":{"global":{"bytes":6,"ints":13},"local":{"bytes":0,"ints":0}},"keys":{"global":{"stakedAssetId":{"key":"c3Rha2VkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"rewardAssetId":{"key":"cmV3YXJkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"xUSDAssetId":{"key":"eFVTREFzc2V0SWQ=","keyType":"AVMBytes","valueType":"uint64"},"totalStaked":{"key":"dG90YWxTdGFrZWQ=","keyType":"AVMBytes","valueType":"uint64"},"injectedASARewards":{"key":"aW5qZWN0ZWRBU0FSZXdhcmRz","keyType":"AVMBytes","valueType":"uint64"},"paidASARewards":{"key":"cGFpZEFTQVJld2FyZHM=","keyType":"AVMBytes","valueType":"uint64"},"injectedxUSDRewards":{"key":"aW5qZWN0ZWR4VVNEUmV3YXJkcw==","keyType":"AVMBytes","valueType":"uint64"},"adminAddress":{"key":"YWRtaW5BZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"treasuryAddress":{"key":"dHJlYXN1cnlBZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"injectorAddress":{"key":"aW5qZWN0b3JBZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"minimumBalance":{"key":"bWluaW11bUJhbGFuY2U=","keyType":"AVMBytes","valueType":"uint64"},"numStakers":{"key":"bnVtU3Rha2Vycw==","keyType":"AVMBytes","valueType":"uint64"},"freeze":{"key":"ZnJlZXpl","keyType":"AVMBytes","valueType":"bool"},"poolActive":{"key":"cG9vbEFjdGl2ZQ==","keyType":"AVMBytes","valueType":"bool"},"poolEnding":{"key":"cG9vbEVuZGluZw==","keyType":"AVMBytes","valueType":"bool"},"lastInjectionTime":{"key":"bGFzdEluamVjdGlvblRpbWU=","keyType":"AVMBytes","valueType":"uint64"},"contractVersion":{"key":"Y29udHJhY3RWZXJzaW9u","keyType":"AVMBytes","valueType":"uint64"},"platformFeeBps":{"key":"cGxhdGZvcm1GZWVCcHM=","keyType":"AVMBytes","valueType":"uint64"},"paidPlatformFees":{"key":"cGFpZFBsYXRmb3JtRmVlcw==","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{"stakers":{"key":"c3Rha2Vycw==","keyType":"AVMBytes","valueType":"(address,uint64,uint64,uint64)[500]"}}},"maps":{"global":{},"local":{},"box":{}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[0]},{"teal":2,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]},{"teal":3,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297]},{"teal":15,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[298,299]},{"teal":16,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[300]},{"teal":17,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[301]},{"teal":18,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[302]},{"teal":19,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[303,304]},{"teal":20,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[305]},{"teal":21,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331]},{"teal":25,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[332]},{"teal":30,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[333,334,335]},{"teal":31,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[336]},{"teal":32,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[337]},{"teal":33,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[338,339]},{"teal":34,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[340]},{"teal":37,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","errorMessage":"argument 0 (injectorAddress) for createApplication must be a address","pc":[341]},{"teal":40,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[342,343,344]},{"teal":41,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[345]},{"teal":42,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[346]},{"teal":43,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[347,348]},{"teal":44,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[349]},{"teal":47,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","errorMessage":"argument 1 (treasuryAddress) for createApplication must be a address","pc":[350]},{"teal":50,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[351,352,353]},{"teal":51,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[354]},{"teal":52,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[355]},{"teal":53,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[356,357]},{"teal":54,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[358]},{"teal":57,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","errorMessage":"argument 2 (adminAddress) for createApplication must be a address","pc":[359]},{"teal":60,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[360,361,362]},{"teal":61,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[363]},{"teal":62,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[364]},{"teal":66,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[365,366,367]},{"teal":70,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:67","pc":[368,369]},{"teal":71,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:67","pc":[370,371]},{"teal":72,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:67","pc":[372]},{"teal":76,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:68","pc":[373,374]},{"teal":77,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:68","pc":[375,376]},{"teal":78,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:68","pc":[377]},{"teal":82,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:69","pc":[378,379]},{"teal":83,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:69","pc":[380,381]},{"teal":84,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:69","pc":[382]},{"teal":88,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:70","pc":[383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399]},{"teal":89,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:70","pc":[400,401]},{"teal":90,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:70","pc":[402]},{"teal":91,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[403]},{"teal":96,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[404,405,406]},{"teal":97,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[407]},{"teal":100,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[408,409,410]},{"teal":101,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[411]},{"teal":104,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[412,413,414]},{"teal":105,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[415]},{"teal":108,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[416,417,418]},{"teal":109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[419]},{"teal":112,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[420,421,422]},{"teal":113,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[423]},{"teal":114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[424]},{"teal":118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[425,426,427]},{"teal":122,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","pc":[428,429]},{"teal":123,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","pc":[430,431]},{"teal":124,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","pc":[432]},{"teal":125,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","pc":[433]},{"teal":128,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","errorMessage":"Only admin can init application","pc":[434]},{"teal":132,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:76","pc":[435,436]},{"teal":133,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:76","pc":[437,438]},{"teal":134,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:76","pc":[439]},{"teal":138,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[440,441]},{"teal":139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[442,443]},{"teal":140,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[444]},{"teal":144,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:78","pc":[445,446]},{"teal":145,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:78","pc":[447]},{"teal":146,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:78","pc":[448]},{"teal":150,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[449,450]},{"teal":151,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[451]},{"teal":152,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[452,453]},{"teal":153,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[454]},{"teal":154,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[455,456]},{"teal":155,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[457]},{"teal":156,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[458]},{"teal":160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:80","pc":[459,460]},{"teal":161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:80","pc":[461]},{"teal":162,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:80","pc":[462]},{"teal":166,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:81","pc":[463,464]},{"teal":167,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:81","pc":[465]},{"teal":168,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:81","pc":[466]},{"teal":172,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:82","pc":[467]},{"teal":173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:82","pc":[468]},{"teal":174,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:82","pc":[469]},{"teal":178,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[470,471]},{"teal":179,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[472]},{"teal":180,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[473,474]},{"teal":181,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[475]},{"teal":182,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[476,477]},{"teal":183,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[478]},{"teal":184,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[479]},{"teal":188,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[480,481]},{"teal":189,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[482]},{"teal":190,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[483,484]},{"teal":191,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[485]},{"teal":192,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[486,487]},{"teal":193,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[488]},{"teal":194,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[489]},{"teal":198,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[490,491]},{"teal":199,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[492,493]},{"teal":200,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[494]},{"teal":204,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:86","pc":[495,496]},{"teal":205,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:86","pc":[497,498]},{"teal":206,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:86","pc":[499]},{"teal":210,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:87","pc":[500,501]},{"teal":211,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:87","pc":[502]},{"teal":212,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:87","pc":[503]},{"teal":216,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:88","pc":[504,505]},{"teal":217,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:88","pc":[506,507]},{"teal":218,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:88","pc":[508]},{"teal":226,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[509]},{"teal":227,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[510,511]},{"teal":228,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[512,513]},{"teal":232,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:91","pc":[514,515]},{"teal":233,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:91","pc":[516,517]},{"teal":237,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:92","pc":[518,519]},{"teal":238,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:92","pc":[520,521]},{"teal":242,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:93","pc":[522]},{"teal":243,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:93","pc":[523,524]},{"teal":246,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[525]},{"teal":247,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[526,527]},{"teal":250,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[528]},{"teal":258,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[529]},{"teal":259,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[530,531]},{"teal":260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[532,533]},{"teal":264,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[534,535]},{"teal":265,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[536]},{"teal":266,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[537,538]},{"teal":270,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[539,540]},{"teal":271,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[541,542]},{"teal":275,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:98","pc":[543]},{"teal":276,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:98","pc":[544,545]},{"teal":279,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[546]},{"teal":280,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[547,548]},{"teal":283,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[549]},{"teal":291,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[550]},{"teal":292,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[551,552]},{"teal":293,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[553,554]},{"teal":297,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:101","pc":[555,556]},{"teal":298,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:101","pc":[557,558]},{"teal":302,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:102","pc":[559,560]},{"teal":303,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:102","pc":[561,562]},{"teal":307,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:103","pc":[563]},{"teal":308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:103","pc":[564,565]},{"teal":311,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[566]},{"teal":312,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[567,568]},{"teal":315,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[569]},{"teal":316,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[570]},{"teal":321,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[571,572,573]},{"teal":322,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[574]},{"teal":323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[575]},{"teal":324,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[576,577]},{"teal":325,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[578]},{"teal":328,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","errorMessage":"argument 0 (adminAddress) for updateAdminAddress must be a address","pc":[579]},{"teal":331,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[580,581,582]},{"teal":332,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[583]},{"teal":333,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[584]},{"teal":337,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[585,586,587]},{"teal":341,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[588,589]},{"teal":342,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[590,591]},{"teal":343,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[592]},{"teal":344,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[593]},{"teal":347,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","errorMessage":"Only admin can update admin address","pc":[594]},{"teal":351,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:110","pc":[595,596]},{"teal":352,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:110","pc":[597,598]},{"teal":353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:110","pc":[599]},{"teal":354,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[600]},{"teal":359,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[601,602,603]},{"teal":360,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[604]},{"teal":361,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[605]},{"teal":365,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[606,607,608]},{"teal":369,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[609,610]},{"teal":370,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[611,612]},{"teal":371,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[613]},{"teal":372,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[614]},{"teal":375,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","errorMessage":"Only admin can set pool active","pc":[615]},{"teal":379,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[616,617]},{"teal":380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[618]},{"teal":381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[619,620]},{"teal":382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[621]},{"teal":383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[622,623]},{"teal":384,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[624]},{"teal":385,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[625]},{"teal":386,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[626]},{"teal":391,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[627,628,629]},{"teal":392,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[630]},{"teal":393,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[631]},{"teal":397,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[632,633,634]},{"teal":401,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[635,636]},{"teal":402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[637,638]},{"teal":403,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[639]},{"teal":404,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[640]},{"teal":407,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","errorMessage":"Only admin can set pool ending","pc":[641]},{"teal":411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[642,643]},{"teal":412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[644]},{"teal":413,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[645,646]},{"teal":414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[647]},{"teal":415,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[648,649]},{"teal":416,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[650]},{"teal":417,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[651]},{"teal":421,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[652,653]},{"teal":422,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[654]},{"teal":423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[655,656]},{"teal":424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[657]},{"teal":425,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[658,659]},{"teal":426,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[660]},{"teal":427,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[661]},{"teal":428,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[662]},{"teal":433,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[663,664,665]},{"teal":434,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[666]},{"teal":437,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[667,668,669]},{"teal":438,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[670]},{"teal":439,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[671]},{"teal":443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[672,673,674]},{"teal":447,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","pc":[675,676]},{"teal":448,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","pc":[677,678]},{"teal":449,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","pc":[679]},{"teal":450,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","pc":[680]},{"teal":453,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","errorMessage":"Only injector can update injected rewards","pc":[681]},{"teal":457,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:129","pc":[682,683]},{"teal":458,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:129","pc":[684,685]},{"teal":459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:129","pc":[686]},{"teal":460,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[687]},{"teal":465,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[688,689,690]},{"teal":466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[691]},{"teal":469,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[692,693,694]},{"teal":470,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[695]},{"teal":471,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[696]},{"teal":475,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[697,698,699]},{"teal":479,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[700,701]},{"teal":480,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[702,703]},{"teal":481,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[704]},{"teal":482,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[705]},{"teal":485,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","errorMessage":"Only injector can update paid rewards","pc":[706]},{"teal":489,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:134","pc":[707,708]},{"teal":490,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:134","pc":[709,710]},{"teal":491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:134","pc":[711]},{"teal":492,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[712]},{"teal":497,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[713,714,715]},{"teal":498,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[716]},{"teal":501,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[717,718,719]},{"teal":502,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[720]},{"teal":503,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[721]},{"teal":507,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[722,723,724]},{"teal":511,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","pc":[725,726]},{"teal":512,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","pc":[727,728]},{"teal":513,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","pc":[729]},{"teal":514,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","pc":[730]},{"teal":517,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","errorMessage":"Only injector can update injected rewards","pc":[731]},{"teal":521,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:139","pc":[732,733]},{"teal":522,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:139","pc":[734,735]},{"teal":523,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:139","pc":[736]},{"teal":524,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[737]},{"teal":529,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[738,739,740]},{"teal":530,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[741]},{"teal":531,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[742]},{"teal":532,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[743,744]},{"teal":533,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[745]},{"teal":536,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","errorMessage":"argument 0 (treasuryAddress) for updateTreasuryAddress must be a address","pc":[746]},{"teal":539,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[747,748,749]},{"teal":540,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[750]},{"teal":541,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[751]},{"teal":545,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[752,753,754]},{"teal":549,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[755,756]},{"teal":550,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[757,758]},{"teal":551,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[759]},{"teal":552,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[760]},{"teal":555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","errorMessage":"Only injector can update treasury address","pc":[761]},{"teal":559,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:144","pc":[762,763]},{"teal":560,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:144","pc":[764,765]},{"teal":561,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:144","pc":[766]},{"teal":562,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[767]},{"teal":567,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[768,769,770]},{"teal":568,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[771]},{"teal":569,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[772]},{"teal":570,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[773,774]},{"teal":571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[775]},{"teal":574,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","errorMessage":"argument 0 (injectorAddress) for updateInjectorAddress must be a address","pc":[776]},{"teal":577,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[777,778,779]},{"teal":578,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[780]},{"teal":579,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[781]},{"teal":583,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[782,783,784]},{"teal":587,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","pc":[785,786]},{"teal":588,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","pc":[787,788]},{"teal":589,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","pc":[789]},{"teal":590,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","pc":[790]},{"teal":593,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","errorMessage":"Only injector can update injector address","pc":[791]},{"teal":597,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:149","pc":[792,793]},{"teal":598,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:149","pc":[794,795]},{"teal":599,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:149","pc":[796]},{"teal":600,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[797]},{"teal":605,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[798,799,800]},{"teal":606,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[801]},{"teal":609,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[802,803,804]},{"teal":610,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[805]},{"teal":611,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[806]},{"teal":615,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[807,808,809]},{"teal":619,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[810,811]},{"teal":620,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[812,813]},{"teal":621,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[814]},{"teal":622,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[815]},{"teal":625,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","errorMessage":"Only injector can update num stakers","pc":[816]},{"teal":629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:154","pc":[817]},{"teal":630,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:154","pc":[818,819]},{"teal":631,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:154","pc":[820]},{"teal":632,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[821]},{"teal":637,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[822,823,824]},{"teal":638,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[825]},{"teal":639,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[826]},{"teal":640,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[827]},{"teal":641,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[828]},{"teal":644,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","errorMessage":"argument 0 (freeze) for updateFreeze must be a bool","pc":[829]},{"teal":645,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[830]},{"teal":646,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[831]},{"teal":649,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[832,833,834]},{"teal":650,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[835]},{"teal":651,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[836]},{"teal":655,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[837,838,839]},{"teal":659,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[840,841]},{"teal":660,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[842,843]},{"teal":661,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[844]},{"teal":662,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[845]},{"teal":665,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","errorMessage":"Only injector can update freeze","pc":[846]},{"teal":669,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[847,848]},{"teal":670,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[849,850]},{"teal":671,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[851,852]},{"teal":672,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[853]},{"teal":673,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[854,855]},{"teal":674,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[856]},{"teal":675,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[857]},{"teal":676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[858]},{"teal":681,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[859,860,861]},{"teal":682,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[862]},{"teal":683,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[863]},{"teal":684,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[864]},{"teal":685,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[865]},{"teal":688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","errorMessage":"argument 0 (poolEnding) for updatePoolEnding must be a bool","pc":[866]},{"teal":689,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[867]},{"teal":690,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[868]},{"teal":693,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[869,870,871]},{"teal":694,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[872]},{"teal":695,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[873]},{"teal":699,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[874,875,876]},{"teal":703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","pc":[877,878]},{"teal":704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","pc":[879,880]},{"teal":705,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","pc":[881]},{"teal":706,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","pc":[882]},{"teal":709,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","errorMessage":"Only admins can update pool ending","pc":[883]},{"teal":713,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[884,885]},{"teal":714,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[886,887]},{"teal":715,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[888,889]},{"teal":716,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[890]},{"teal":717,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[891,892]},{"teal":718,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[893]},{"teal":719,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[894]},{"teal":720,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[895]},{"teal":724,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:167","pc":[896,897,898]},{"teal":728,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[899,900,901]},{"teal":729,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[902,903]},{"teal":730,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[904,905,906]},{"teal":731,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[907]},{"teal":732,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[908]},{"teal":733,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:167","pc":[909]},{"teal":738,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[910,911,912,913,914,915]},{"teal":741,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[916,917,918]},{"teal":742,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[919]},{"teal":743,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[920]},{"teal":744,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[921]},{"teal":745,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[922]},{"teal":749,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[923,924,925]},{"teal":752,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[926]},{"teal":753,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[927]},{"teal":757,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:175","pc":[928,929]},{"teal":758,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:175","pc":[930,931]},{"teal":763,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[932,933]},{"teal":764,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[934]},{"teal":765,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[935]},{"teal":766,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[936]},{"teal":767,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[937,938,939]},{"teal":772,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[940,941]},{"teal":773,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[942,943]},{"teal":774,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[944]},{"teal":775,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[945,946]},{"teal":784,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:180","pc":[947,948]},{"teal":785,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:181","pc":[949,950]},{"teal":786,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:180","pc":[951]},{"teal":787,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[952,953]},{"teal":788,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[954,955,956]},{"teal":789,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:181","pc":[957]},{"teal":790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:183","pc":[958,959]},{"teal":791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:183","pc":[960,961,962]},{"teal":792,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[963]},{"teal":793,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:179","pc":[964,965]},{"teal":799,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:186","pc":[966,967]},{"teal":800,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:186","pc":[968]},{"teal":803,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[969,970]},{"teal":806,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[971,972]},{"teal":807,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[973]},{"teal":812,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[974,975]},{"teal":813,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[976]},{"teal":814,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[977]},{"teal":815,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[978]},{"teal":816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[979,980]},{"teal":817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[981]},{"teal":818,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[982]},{"teal":821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","errorMessage":"argument 0 (mbrPayment) for initStorage must be a pay transaction","pc":[983]},{"teal":824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[984,985,986]},{"teal":825,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[987]},{"teal":826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[988]},{"teal":830,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[989,990,991]},{"teal":833,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[992]},{"teal":834,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[993]},{"teal":838,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[994]},{"teal":839,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[995]},{"teal":840,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[996]},{"teal":841,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[997]},{"teal":842,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[998]},{"teal":845,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","errorMessage":"staking pool already initialized","pc":[999]},{"teal":849,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[1000,1001]},{"teal":850,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[1002,1003]},{"teal":851,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[1004]},{"teal":852,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[1005]},{"teal":855,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","errorMessage":"Only admin can init storage","pc":[1006]},{"teal":859,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:194","pc":[1007,1008]},{"teal":860,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:194","pc":[1009,1010]},{"teal":865,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1011,1012]},{"teal":866,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1013]},{"teal":867,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1014]},{"teal":868,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1015]},{"teal":869,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1016,1017,1018]},{"teal":874,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:196","pc":[1019,1020]},{"teal":875,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:196","pc":[1021,1022]},{"teal":876,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:196","pc":[1023]},{"teal":877,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:196","pc":[1024,1025]},{"teal":886,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:199","pc":[1026,1027]},{"teal":887,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:200","pc":[1028,1029]},{"teal":888,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:199","pc":[1030]},{"teal":889,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:201","pc":[1031,1032]},{"teal":890,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:201","pc":[1033,1034,1035]},{"teal":891,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:200","pc":[1036]},{"teal":892,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[1037,1038]},{"teal":893,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[1039,1040,1041]},{"teal":894,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:201","pc":[1042]},{"teal":895,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:198","pc":[1043,1044]},{"teal":900,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1045,1046]},{"teal":901,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1047,1048]},{"teal":902,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1049,1050]},{"teal":903,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1051]},{"teal":906,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[1052]},{"teal":909,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1053,1054]},{"teal":910,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1055,1056]},{"teal":911,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1057,1058]},{"teal":912,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1059]},{"teal":915,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"amount\",\"expected\":\"poolMBR\"}","pc":[1060]},{"teal":919,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:206","pc":[1061]},{"teal":920,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:206","pc":[1062,1063,1064,1065]},{"teal":921,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:206","pc":[1066]},{"teal":922,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:206","pc":[1067]},{"teal":926,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083]},{"teal":927,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1084,1085]},{"teal":928,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1086]},{"teal":933,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1087,1088]},{"teal":934,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1089]},{"teal":935,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1090]},{"teal":936,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1091]},{"teal":937,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1092,1093,1094]},{"teal":946,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1095]},{"teal":947,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1096,1097]},{"teal":948,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1098,1099]},{"teal":952,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1100,1101]},{"teal":953,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1102]},{"teal":954,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1103,1104]},{"teal":958,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:213","pc":[1105,1106]},{"teal":959,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:213","pc":[1107,1108]},{"teal":963,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1109]},{"teal":964,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1110,1111]},{"teal":967,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1112]},{"teal":968,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1113,1114]},{"teal":971,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1115]},{"teal":974,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[1116]},{"teal":979,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1117,1118,1119]},{"teal":980,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1120]},{"teal":983,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1121,1122,1123]},{"teal":984,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1124]},{"teal":987,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1125,1126]},{"teal":988,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1127]},{"teal":989,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1128]},{"teal":990,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1129]},{"teal":991,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1130,1131]},{"teal":992,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1132,1133]},{"teal":993,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1134]},{"teal":996,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","errorMessage":"argument 2 (rewardTxn) for injectRewards must be a axfer transaction","pc":[1135]},{"teal":999,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1136,1137,1138]},{"teal":1000,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1139]},{"teal":1001,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1140]},{"teal":1005,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1141,1142,1143]},{"teal":1008,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1144]},{"teal":1017,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1145,1146]},{"teal":1018,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:225","pc":[1147,1148]},{"teal":1019,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:225","pc":[1149,1150]},{"teal":1020,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:225","pc":[1151]},{"teal":1023,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:225","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1152]},{"teal":1026,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1153,1154]},{"teal":1027,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:226","pc":[1155,1156]},{"teal":1028,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:226","pc":[1157,1158]},{"teal":1029,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:226","pc":[1159]},{"teal":1030,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:226","pc":[1160]},{"teal":1033,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:226","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.rewardAssetId.value)\"}","pc":[1161]},{"teal":1036,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1162,1163]},{"teal":1037,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1164,1165]},{"teal":1038,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1166,1167]},{"teal":1039,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1168]},{"teal":1042,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[1169]},{"teal":1046,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1170,1171]},{"teal":1047,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1172,1173]},{"teal":1048,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1174]},{"teal":1049,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1175]},{"teal":1050,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1176]},{"teal":1051,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1177,1178]},{"teal":1052,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1179]},{"teal":1053,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1180]},{"teal":1054,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1181]},{"teal":1055,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1182]},{"teal":1056,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1183]},{"teal":1059,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","errorMessage":"wideRatio failed","pc":[1184]},{"teal":1060,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1185,1186]},{"teal":1064,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1187,1188]},{"teal":1065,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1189]},{"teal":1066,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1190]},{"teal":1067,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1191,1192]},{"teal":1068,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1193]},{"teal":1069,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1194,1195]},{"teal":1070,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1196]},{"teal":1071,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1197]},{"teal":1075,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1198,1199]},{"teal":1076,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1200,1201]},{"teal":1077,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1202]},{"teal":1081,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:235","pc":[1203,1204]},{"teal":1082,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:235","pc":[1205,1206,1207]},{"teal":1086,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:236","pc":[1208,1209,1210]},{"teal":1087,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1211]},{"teal":1091,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:239","pc":[1212,1213,1214]},{"teal":1101,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:240","pc":[1215]},{"teal":1102,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:240","pc":[1216,1217]},{"teal":1103,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:240","pc":[1218,1219]},{"teal":1107,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:241","pc":[1220,1221]},{"teal":1108,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:241","pc":[1222,1223]},{"teal":1112,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:242","pc":[1224,1225]},{"teal":1113,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:242","pc":[1226]},{"teal":1114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:242","pc":[1227,1228]},{"teal":1118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:243","pc":[1229,1230]},{"teal":1119,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:243","pc":[1231]},{"teal":1120,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:243","pc":[1232,1233]},{"teal":1124,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:244","pc":[1234,1235]},{"teal":1125,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:244","pc":[1236,1237]},{"teal":1129,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:245","pc":[1238]},{"teal":1130,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:245","pc":[1239,1240]},{"teal":1133,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:240","pc":[1241]},{"teal":1137,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1242,1243]},{"teal":1138,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1244]},{"teal":1139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1245]},{"teal":1140,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1246,1247]},{"teal":1141,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1248]},{"teal":1142,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1249]},{"teal":1143,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:239","pc":[1250]},{"teal":1147,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:250","pc":[1251,1252,1253]},{"teal":1150,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:250","pc":[1254]},{"teal":1151,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:250","pc":[1255,1256]},{"teal":1155,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1257,1258]},{"teal":1156,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1259,1260]},{"teal":1157,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1261]},{"teal":1158,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1262,1263]},{"teal":1159,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1264]},{"teal":1160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1265,1266]},{"teal":1164,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1267]},{"teal":1165,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1268,1269]},{"teal":1170,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:253","pc":[1270,1271]},{"teal":1171,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:253","pc":[1272]},{"teal":1172,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:253","pc":[1273,1274]},{"teal":1173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:253","pc":[1275]},{"teal":1174,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:253","pc":[1276]},{"teal":1175,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:253","pc":[1277,1278,1279]},{"teal":1180,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1280,1281]},{"teal":1181,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1282]},{"teal":1182,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1283,1284]},{"teal":1188,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1285,1286]},{"teal":1189,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1287,1288]},{"teal":1190,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1289]},{"teal":1191,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1290,1291]},{"teal":1192,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1292]},{"teal":1193,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1293]},{"teal":1194,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1294,1295]},{"teal":1195,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1296]},{"teal":1196,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1297]},{"teal":1197,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1298,1299,1300]},{"teal":1202,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1301,1302]},{"teal":1203,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1303,1304]},{"teal":1204,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1305]},{"teal":1205,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1306]},{"teal":1206,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1307,1308]},{"teal":1207,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1309]},{"teal":1208,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1310,1311]},{"teal":1209,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1312]},{"teal":1210,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1313]},{"teal":1211,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1314,1315]},{"teal":1215,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1316,1317]},{"teal":1216,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1318,1319]},{"teal":1217,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1320]},{"teal":1218,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1321]},{"teal":1219,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1322]},{"teal":1220,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1323,1324]},{"teal":1221,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1325]},{"teal":1222,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1326]},{"teal":1223,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1327]},{"teal":1224,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1328]},{"teal":1225,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1329]},{"teal":1228,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","errorMessage":"wideRatio failed","pc":[1330]},{"teal":1229,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:260","pc":[1331,1332]},{"teal":1234,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:262","pc":[1333,1334]},{"teal":1235,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:262","pc":[1335]},{"teal":1236,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:262","pc":[1336]},{"teal":1237,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:262","pc":[1337]},{"teal":1238,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:262","pc":[1338,1339,1340]},{"teal":1243,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1341,1342]},{"teal":1244,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1343]},{"teal":1245,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1344]},{"teal":1246,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1345,1346]},{"teal":1247,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1347]},{"teal":1248,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1348,1349]},{"teal":1249,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1350]},{"teal":1250,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1351]},{"teal":1254,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1352,1353]},{"teal":1255,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1354,1355,1356]},{"teal":1260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:250","pc":[1357]},{"teal":1265,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1358,1359,1360]},{"teal":1266,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1361]},{"teal":1269,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1362,1363]},{"teal":1270,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1364]},{"teal":1271,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1365]},{"teal":1272,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1366]},{"teal":1273,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1367,1368]},{"teal":1274,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1369,1370]},{"teal":1275,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1371]},{"teal":1278,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","errorMessage":"argument 1 (xUSDTxn) for injectxUSD must be a axfer transaction","pc":[1372]},{"teal":1281,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1373,1374,1375]},{"teal":1282,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1376]},{"teal":1283,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1377]},{"teal":1287,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1378,1379,1380]},{"teal":1296,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1381,1382]},{"teal":1297,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:271","pc":[1383,1384]},{"teal":1298,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:271","pc":[1385,1386]},{"teal":1299,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:271","pc":[1387]},{"teal":1302,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:271","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1388]},{"teal":1305,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1389,1390]},{"teal":1306,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:272","pc":[1391,1392]},{"teal":1307,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:272","pc":[1393,1394]},{"teal":1308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:272","pc":[1395]},{"teal":1309,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:272","pc":[1396]},{"teal":1312,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:272","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.xUSDAssetId.value)\"}","pc":[1397]},{"teal":1315,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1398,1399]},{"teal":1316,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:273","pc":[1400,1401]},{"teal":1317,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:273","pc":[1402,1403]},{"teal":1318,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:273","pc":[1404]},{"teal":1321,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:273","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[1405]},{"teal":1325,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:275","pc":[1406,1407]},{"teal":1326,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:275","pc":[1408]},{"teal":1327,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:275","pc":[1409]},{"teal":1328,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:275","pc":[1410,1411]},{"teal":1329,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:275","pc":[1412]},{"teal":1330,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:275","pc":[1413]},{"teal":1334,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:276","pc":[1414,1415]},{"teal":1335,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:276","pc":[1416,1417]},{"teal":1336,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:276","pc":[1418]},{"teal":1341,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:277","pc":[1419,1420]},{"teal":1342,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:277","pc":[1421]},{"teal":1343,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:277","pc":[1422]},{"teal":1344,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:277","pc":[1423,1424,1425]},{"teal":1349,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1426]},{"teal":1350,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1427]},{"teal":1351,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1428,1429]},{"teal":1352,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1430]},{"teal":1353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1431,1432]},{"teal":1354,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1433]},{"teal":1355,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1434]},{"teal":1356,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1435,1436]},{"teal":1357,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1437,1438]},{"teal":1358,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1439,1440]},{"teal":1359,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1441,1442]},{"teal":1360,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1443]},{"teal":1365,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:280","pc":[1444,1445,1446]},{"teal":1370,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:281","pc":[1447,1448]},{"teal":1371,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:281","pc":[1449]},{"teal":1372,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:281","pc":[1450]},{"teal":1373,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:281","pc":[1451,1452,1453]},{"teal":1378,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1454]},{"teal":1379,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1455]},{"teal":1380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1456,1457]},{"teal":1381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1458]},{"teal":1382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1459,1460]},{"teal":1383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1461]},{"teal":1384,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1462]},{"teal":1385,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1463,1464]},{"teal":1386,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1465,1466]},{"teal":1387,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1467,1468]},{"teal":1388,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1469,1470]},{"teal":1389,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1471]},{"teal":1394,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:284","pc":[1472,1473,1474]},{"teal":1395,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1475]},{"teal":1400,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1476,1477,1478]},{"teal":1401,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1479]},{"teal":1402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1480]},{"teal":1406,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1481,1482,1483]},{"teal":1409,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1484]},{"teal":1410,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1485]},{"teal":1414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1486,1487]},{"teal":1415,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1488,1489]},{"teal":1416,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1490]},{"teal":1417,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1491]},{"teal":1420,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","errorMessage":"Only admin can delete application","pc":[1492]},{"teal":1424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","pc":[1493,1494]},{"teal":1425,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","pc":[1495]},{"teal":1426,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","pc":[1496]},{"teal":1427,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","pc":[1497]},{"teal":1430,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","errorMessage":"Staked assets still exist","pc":[1498]},{"teal":1434,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:291","pc":[1499]},{"teal":1435,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:291","pc":[1500]},{"teal":1439,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1501,1502]},{"teal":1440,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1503,1504]},{"teal":1441,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1505]},{"teal":1442,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1506,1507]},{"teal":1443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1508]},{"teal":1444,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1509,1510]},{"teal":1449,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1511,1512]},{"teal":1450,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1513]},{"teal":1451,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1514]},{"teal":1452,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1515,1516,1517]},{"teal":1462,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1518]},{"teal":1463,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1519,1520]},{"teal":1464,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1521,1522]},{"teal":1468,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:295","pc":[1523,1524]},{"teal":1469,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:295","pc":[1525]},{"teal":1470,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:295","pc":[1526,1527]},{"teal":1474,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1528,1529]},{"teal":1475,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1530]},{"teal":1476,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1531,1532]},{"teal":1480,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:297","pc":[1533,1534]},{"teal":1481,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:297","pc":[1535,1536]},{"teal":1485,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:298","pc":[1537,1538]},{"teal":1486,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:298","pc":[1539]},{"teal":1487,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:298","pc":[1540,1541]},{"teal":1490,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1542]},{"teal":1491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1543,1544]},{"teal":1494,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1545]},{"teal":1499,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1546,1547]},{"teal":1500,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1548,1549]},{"teal":1501,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1550]},{"teal":1502,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1551,1552]},{"teal":1503,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1553,1554]},{"teal":1504,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1555]},{"teal":1505,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1556]},{"teal":1506,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1557,1558]},{"teal":1507,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1559]},{"teal":1508,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:301","pc":[1560,1561]},{"teal":1517,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1562]},{"teal":1518,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1563]},{"teal":1519,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1564,1565]},{"teal":1523,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:304","pc":[1566,1567]},{"teal":1524,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:304","pc":[1568,1569]},{"teal":1528,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:305","pc":[1570,1571]},{"teal":1529,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:305","pc":[1572]},{"teal":1530,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:305","pc":[1573,1574]},{"teal":1534,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:306","pc":[1575,1576]},{"teal":1535,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:306","pc":[1577,1578]},{"teal":1539,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1579,1580,1581]},{"teal":1540,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1582,1583]},{"teal":1543,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1584]},{"teal":1544,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1585]},{"teal":1549,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1586,1587,1588]},{"teal":1550,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1589]},{"teal":1553,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1590,1591]},{"teal":1554,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1592]},{"teal":1555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1593]},{"teal":1556,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1594]},{"teal":1557,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1595,1596]},{"teal":1558,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1597,1598]},{"teal":1559,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1599]},{"teal":1562,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","errorMessage":"argument 1 (stakeTxn) for stake must be a axfer transaction","pc":[1600]},{"teal":1565,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1601,1602,1603]},{"teal":1566,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1604]},{"teal":1567,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1605]},{"teal":1571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1606,1607,1608]},{"teal":1574,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1609]},{"teal":1575,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1610,1611]},{"teal":1579,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:312","pc":[1612,1613]},{"teal":1580,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:312","pc":[1614]},{"teal":1581,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:312","pc":[1615]},{"teal":1584,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:312","errorMessage":"Invalid quantity","pc":[1616]},{"teal":1588,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1617,1618]},{"teal":1589,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1619]},{"teal":1590,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1620]},{"teal":1591,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1621]},{"teal":1594,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","errorMessage":"Pool not active","pc":[1622]},{"teal":1598,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","pc":[1623,1624]},{"teal":1599,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","pc":[1625]},{"teal":1600,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","pc":[1626]},{"teal":1601,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","pc":[1627]},{"teal":1602,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","pc":[1628]},{"teal":1605,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","errorMessage":"Pool ending","pc":[1629]},{"teal":1609,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:316","pc":[1630,1631,1632]},{"teal":1614,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:317","pc":[1633,1634]},{"teal":1615,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:317","pc":[1635]},{"teal":1616,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:317","pc":[1636]},{"teal":1617,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:317","pc":[1637,1638,1639]},{"teal":1622,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1640]},{"teal":1623,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1641]},{"teal":1624,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1642,1643]},{"teal":1625,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1644]},{"teal":1626,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1645,1646]},{"teal":1627,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1647]},{"teal":1628,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1648]},{"teal":1629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1649,1650]},{"teal":1630,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1651,1652]},{"teal":1631,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1653,1654]},{"teal":1632,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1655,1656]},{"teal":1633,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1657]},{"teal":1638,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1658,1659,1660]},{"teal":1643,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:322","pc":[1661,1662]},{"teal":1644,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:322","pc":[1663]},{"teal":1645,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:322","pc":[1664]},{"teal":1646,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:322","pc":[1665,1666,1667]},{"teal":1651,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1668]},{"teal":1652,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1669]},{"teal":1653,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1670,1671]},{"teal":1654,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1672]},{"teal":1655,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1673,1674]},{"teal":1656,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1675]},{"teal":1657,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1676]},{"teal":1658,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1677,1678]},{"teal":1659,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1679,1680]},{"teal":1660,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1681,1682]},{"teal":1661,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1683,1684]},{"teal":1662,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1685]},{"teal":1673,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1686,1687]},{"teal":1674,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:326","pc":[1688,1689]},{"teal":1675,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:326","pc":[1690,1691]},{"teal":1676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:326","pc":[1692]},{"teal":1679,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:326","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}","pc":[1693]},{"teal":1682,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1694,1695]},{"teal":1683,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1696,1697]},{"teal":1684,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1698,1699]},{"teal":1685,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1700]},{"teal":1688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1701]},{"teal":1691,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1702,1703]},{"teal":1692,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","pc":[1704,1705]},{"teal":1693,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","pc":[1706,1707]},{"teal":1694,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","pc":[1708]},{"teal":1695,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","pc":[1709]},{"teal":1698,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.stakedAssetId.value)\"}","pc":[1710]},{"teal":1701,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1711,1712]},{"teal":1702,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","pc":[1713,1714]},{"teal":1703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","pc":[1715,1716]},{"teal":1704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","pc":[1717]},{"teal":1707,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[1718]},{"teal":1711,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:331","pc":[1719]},{"teal":1712,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:331","pc":[1720,1721]},{"teal":1717,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1722,1723]},{"teal":1718,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1724]},{"teal":1719,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1725]},{"teal":1720,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1726,1727,1728]},{"teal":1725,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1729]},{"teal":1726,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1730]},{"teal":1727,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1731,1732]},{"teal":1728,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1733]},{"teal":1729,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1734,1735]},{"teal":1730,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1736]},{"teal":1731,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1737]},{"teal":1732,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1738,1739]},{"teal":1733,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1740,1741]},{"teal":1734,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1742,1743]},{"teal":1735,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1744,1745]},{"teal":1736,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1746]},{"teal":1741,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1747]},{"teal":1742,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1748,1749]},{"teal":1747,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1750,1751]},{"teal":1748,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1752,1753,1754]},{"teal":1749,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1755]},{"teal":1750,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1756,1757,1758]},{"teal":1755,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:336","pc":[1759,1760]},{"teal":1756,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:336","pc":[1761,1762,1763]},{"teal":1759,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:336","pc":[1764,1765,1766]},{"teal":1765,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1767,1768]},{"teal":1766,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1769,1770]},{"teal":1767,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1771]},{"teal":1768,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1772]},{"teal":1769,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1773]},{"teal":1770,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1774,1775]},{"teal":1771,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1776]},{"teal":1772,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1777,1778]},{"teal":1773,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1779]},{"teal":1774,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1780,1781]},{"teal":1775,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1782]},{"teal":1776,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1783,1784,1785]},{"teal":1782,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:341","pc":[1786,1787]},{"teal":1783,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:341","pc":[1788]},{"teal":1784,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:341","pc":[1789]},{"teal":1785,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:341","pc":[1790,1791,1792]},{"teal":1790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1793]},{"teal":1791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1794]},{"teal":1792,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1795,1796]},{"teal":1793,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1797]},{"teal":1794,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1798,1799]},{"teal":1795,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1800]},{"teal":1796,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1801]},{"teal":1797,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1802,1803]},{"teal":1798,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1804,1805]},{"teal":1799,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1806,1807]},{"teal":1800,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1808,1809]},{"teal":1801,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1810]},{"teal":1806,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1811,1812]},{"teal":1807,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1813,1814]},{"teal":1808,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1815]},{"teal":1809,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1816,1817]},{"teal":1810,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1818]},{"teal":1811,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1819,1820]},{"teal":1812,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1821]},{"teal":1813,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1822,1823]},{"teal":1817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1824,1825]},{"teal":1818,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1826,1827]},{"teal":1819,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1828,1829]},{"teal":1820,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1830,1831,1832]},{"teal":1821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1833]},{"teal":1822,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1834,1835]},{"teal":1823,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1836,1837]},{"teal":1824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1838]},{"teal":1825,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1839]},{"teal":1826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1840]},{"teal":1827,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:346","pc":[1841,1842]},{"teal":1832,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1843,1844]},{"teal":1833,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1845]},{"teal":1834,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1846]},{"teal":1835,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1847,1848,1849]},{"teal":1840,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1850]},{"teal":1841,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1851]},{"teal":1842,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1852,1853]},{"teal":1843,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1854]},{"teal":1844,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1855,1856]},{"teal":1845,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1857]},{"teal":1846,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1858]},{"teal":1847,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1859,1860]},{"teal":1848,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1861,1862]},{"teal":1849,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1863,1864]},{"teal":1850,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1865,1866]},{"teal":1851,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:349","pc":[1867]},{"teal":1857,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1868,1869]},{"teal":1858,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1870]},{"teal":1859,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1871]},{"teal":1860,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1872,1873,1874]},{"teal":1865,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1875]},{"teal":1866,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1876]},{"teal":1867,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1877,1878]},{"teal":1868,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1879]},{"teal":1869,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1880,1881]},{"teal":1870,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1882]},{"teal":1871,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1883]},{"teal":1872,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1884,1885]},{"teal":1873,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1886,1887]},{"teal":1874,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1888,1889]},{"teal":1875,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1890,1891]},{"teal":1876,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1892]},{"teal":1881,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1893,1894]},{"teal":1882,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1895,1896]},{"teal":1883,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1897]},{"teal":1884,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1898,1899]},{"teal":1885,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1900]},{"teal":1886,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1901,1902]},{"teal":1887,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1903]},{"teal":1892,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:355","pc":[1904,1905]},{"teal":1893,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:355","pc":[1906]},{"teal":1894,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:355","pc":[1907]},{"teal":1895,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:355","pc":[1908,1909,1910]},{"teal":1900,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1911]},{"teal":1901,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1912]},{"teal":1902,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1913,1914]},{"teal":1903,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1915]},{"teal":1904,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1916,1917]},{"teal":1905,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1918]},{"teal":1906,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1919]},{"teal":1907,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1920,1921]},{"teal":1908,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1922,1923]},{"teal":1909,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1924,1925]},{"teal":1910,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1926,1927]},{"teal":1911,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1928]},{"teal":1916,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1929,1930]},{"teal":1917,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1931]},{"teal":1918,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1932,1933]},{"teal":1919,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1934,1935]},{"teal":1920,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1936]},{"teal":1921,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1937,1938]},{"teal":1922,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1939]},{"teal":1923,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1940]},{"teal":1927,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:359","pc":[1941]},{"teal":1928,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:359","pc":[1942,1943]},{"teal":1929,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1944,1945,1946]},{"teal":1934,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1947,1948]},{"teal":1935,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1949,1950]},{"teal":1936,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1951]},{"teal":1937,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1952]},{"teal":1938,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1953]},{"teal":1939,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1954,1955]},{"teal":1940,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1956]},{"teal":1941,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1957,1958]},{"teal":1942,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1959]},{"teal":1943,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1960,1961]},{"teal":1944,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1962]},{"teal":1945,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1963,1964,1965]},{"teal":1951,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:361","pc":[1966,1967]},{"teal":1952,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:361","pc":[1968]},{"teal":1953,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:361","pc":[1969]},{"teal":1954,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:361","pc":[1970,1971,1972]},{"teal":1959,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1973]},{"teal":1960,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1974]},{"teal":1961,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1975,1976]},{"teal":1962,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1977]},{"teal":1963,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1978,1979]},{"teal":1964,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1980]},{"teal":1965,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1981]},{"teal":1966,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1982,1983]},{"teal":1967,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1984,1985]},{"teal":1968,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1986,1987]},{"teal":1969,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1988,1989]},{"teal":1970,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1990]},{"teal":1975,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1991,1992]},{"teal":1976,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1993]},{"teal":1977,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1994]},{"teal":1978,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1995,1996]},{"teal":1979,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1997,1998]},{"teal":1980,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1999]},{"teal":1981,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[2000]},{"teal":1986,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:365","pc":[2001,2002]},{"teal":1987,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:365","pc":[2003]},{"teal":1988,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:365","pc":[2004]},{"teal":1989,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:365","pc":[2005,2006,2007]},{"teal":1994,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2008]},{"teal":1995,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2009]},{"teal":1996,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2010,2011]},{"teal":1997,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2012]},{"teal":1998,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2013,2014]},{"teal":1999,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2015]},{"teal":2000,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2016]},{"teal":2001,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2017,2018]},{"teal":2002,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2019,2020]},{"teal":2003,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2021,2022]},{"teal":2004,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2023,2024]},{"teal":2005,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[2025]},{"teal":2015,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2026,2027]},{"teal":2016,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2028,2029]},{"teal":2017,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2030]},{"teal":2018,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:369","pc":[2031,2032]},{"teal":2019,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2033,2034]},{"teal":2020,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2035,2036]},{"teal":2021,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2037]},{"teal":2022,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2038]},{"teal":2023,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[2039,2040]},{"teal":2024,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[2041]},{"teal":2025,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:372","pc":[2042,2043]},{"teal":2026,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:372","pc":[2044]},{"teal":2027,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2045]},{"teal":2028,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2046,2047]},{"teal":2029,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2048]},{"teal":2034,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[2049,2050]},{"teal":2035,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[2051]},{"teal":2036,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[2052]},{"teal":2037,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[2053,2054,2055]},{"teal":2042,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2056]},{"teal":2043,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2057]},{"teal":2044,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2058,2059]},{"teal":2045,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2060]},{"teal":2046,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2061,2062]},{"teal":2047,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2063]},{"teal":2048,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2064]},{"teal":2049,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2065,2066]},{"teal":2050,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2067,2068]},{"teal":2051,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2069,2070]},{"teal":2052,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2071,2072]},{"teal":2053,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:375","pc":[2073]},{"teal":2058,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2074]},{"teal":2059,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2075]},{"teal":2060,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2076]},{"teal":2061,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2077]},{"teal":2062,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2078]},{"teal":2063,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2079]},{"teal":2068,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:378","pc":[2080,2081]},{"teal":2069,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:378","pc":[2082]},{"teal":2070,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:378","pc":[2083]},{"teal":2071,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:378","pc":[2084,2085,2086]},{"teal":2076,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2087]},{"teal":2077,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2088]},{"teal":2078,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2089,2090]},{"teal":2079,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2091]},{"teal":2080,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2092,2093]},{"teal":2081,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2094]},{"teal":2082,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2095]},{"teal":2083,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2096,2097]},{"teal":2084,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2098,2099]},{"teal":2085,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2100,2101]},{"teal":2086,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2102,2103]},{"teal":2087,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2104]},{"teal":2092,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2105]},{"teal":2093,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2106,2107]},{"teal":2099,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:384","pc":[2108,2109]},{"teal":2100,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:384","pc":[2110]},{"teal":2101,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:384","pc":[2111]},{"teal":2102,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:384","pc":[2112,2113,2114]},{"teal":2107,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2115]},{"teal":2108,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2116]},{"teal":2109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2117,2118]},{"teal":2110,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2119]},{"teal":2111,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2120,2121]},{"teal":2112,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2122]},{"teal":2113,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2123]},{"teal":2114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2124,2125]},{"teal":2115,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2126,2127]},{"teal":2116,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2128,2129]},{"teal":2117,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2130,2131]},{"teal":2118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2132]},{"teal":2125,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[2133,2134]},{"teal":2126,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[2135]},{"teal":2127,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[2136]},{"teal":2128,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[2137,2138]},{"teal":2129,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[2139,2140,2141]},{"teal":2132,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[2142]},{"teal":2137,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2143,2144,2145]},{"teal":2138,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2146]},{"teal":2139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2147]},{"teal":2143,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2148,2149,2150]},{"teal":2146,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2151]},{"teal":2147,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2152,2153]},{"teal":2152,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2154,2155]},{"teal":2153,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2156]},{"teal":2154,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2157]},{"teal":2155,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2158]},{"teal":2156,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2159]},{"teal":2157,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2160]},{"teal":2158,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2161,2162,2163]},{"teal":2159,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2164,2165]},{"teal":2160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2166]},{"teal":2161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2167]},{"teal":2162,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2168]},{"teal":2163,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2169]},{"teal":2164,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2170]},{"teal":2167,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2171]},{"teal":2168,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2172,2173,2174]},{"teal":2169,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2175,2176]},{"teal":2170,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2177]},{"teal":2171,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2178]},{"teal":2172,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2179]},{"teal":2173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2180]},{"teal":2176,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2181,2182,2183]},{"teal":2181,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2184,2185]},{"teal":2182,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2186]},{"teal":2183,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2187,2188]},{"teal":2187,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2189,2190]},{"teal":2188,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2191]},{"teal":2189,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2192,2193]},{"teal":2194,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2194,2195]},{"teal":2195,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2196]},{"teal":2196,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2197]},{"teal":2197,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2198,2199,2200]},{"teal":2202,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2201]},{"teal":2203,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2202]},{"teal":2204,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2203,2204]},{"teal":2205,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2205]},{"teal":2206,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2206,2207]},{"teal":2207,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2208]},{"teal":2208,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2209]},{"teal":2209,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2210,2211]},{"teal":2210,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2212,2213]},{"teal":2211,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2214,2215]},{"teal":2212,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2216,2217]},{"teal":2213,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2218]},{"teal":2218,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2219]},{"teal":2219,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2220,2221]},{"teal":2224,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2222,2223]},{"teal":2225,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2224]},{"teal":2226,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2225]},{"teal":2227,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2226]},{"teal":2228,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2227,2228,2229]},{"teal":2233,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2230,2231]},{"teal":2234,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2232]},{"teal":2235,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2233]},{"teal":2236,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2234,2235,2236]},{"teal":2241,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2237]},{"teal":2242,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2238]},{"teal":2243,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2239,2240]},{"teal":2244,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2241]},{"teal":2245,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2242,2243]},{"teal":2246,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2244]},{"teal":2247,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2245]},{"teal":2248,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2246,2247]},{"teal":2249,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2248,2249]},{"teal":2250,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2250,2251]},{"teal":2251,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2252,2253]},{"teal":2252,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2254]},{"teal":2257,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2255,2256]},{"teal":2258,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2257,2258]},{"teal":2259,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2259]},{"teal":2260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2260,2261]},{"teal":2261,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2262]},{"teal":2262,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2263,2264]},{"teal":2263,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2265]},{"teal":2264,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2266,2267]},{"teal":2265,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2268]},{"teal":2266,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2269]},{"teal":2267,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2270,2271]},{"teal":2272,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2272,2273]},{"teal":2273,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2274]},{"teal":2274,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2275]},{"teal":2275,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2276,2277,2278]},{"teal":2280,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2279,2280]},{"teal":2281,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2281,2282]},{"teal":2282,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2283]},{"teal":2283,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2284,2285]},{"teal":2284,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2286]},{"teal":2285,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2287,2288]},{"teal":2286,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2289]},{"teal":2287,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2290,2291]},{"teal":2291,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2292,2293]},{"teal":2292,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2294,2295]},{"teal":2293,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2296]},{"teal":2294,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2297]},{"teal":2295,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2298,2299]},{"teal":2296,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2300]},{"teal":2297,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2301]},{"teal":2298,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2302]},{"teal":2299,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2303]},{"teal":2300,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2304]},{"teal":2301,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2305]},{"teal":2304,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","errorMessage":"wideRatio failed","pc":[2306]},{"teal":2305,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2307,2308]},{"teal":2310,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2309,2310]},{"teal":2311,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2311]},{"teal":2312,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2312]},{"teal":2313,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2313,2314,2315]},{"teal":2318,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2316]},{"teal":2319,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2317]},{"teal":2320,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2318,2319]},{"teal":2321,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2320]},{"teal":2322,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2321,2322]},{"teal":2323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2323]},{"teal":2324,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2324]},{"teal":2325,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2325,2326]},{"teal":2326,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2327,2328]},{"teal":2327,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2329,2330]},{"teal":2328,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2331,2332]},{"teal":2329,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:411","pc":[2333]},{"teal":2335,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:414","pc":[2334,2335]},{"teal":2336,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:414","pc":[2336]},{"teal":2337,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:414","pc":[2337]},{"teal":2338,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:414","pc":[2338]},{"teal":2339,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:414","pc":[2339,2340,2341]},{"teal":2344,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2342,2343]},{"teal":2345,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2344,2345]},{"teal":2346,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2346]},{"teal":2347,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2347]},{"teal":2348,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2348,2349]},{"teal":2349,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2350]},{"teal":2350,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2351]},{"teal":2351,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2352]},{"teal":2352,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2353]},{"teal":2353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2354]},{"teal":2356,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","errorMessage":"wideRatio failed","pc":[2355]},{"teal":2357,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:415","pc":[2356,2357]},{"teal":2362,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2358,2359]},{"teal":2363,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2360]},{"teal":2364,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2361]},{"teal":2365,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2362,2363,2364]},{"teal":2370,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2365]},{"teal":2371,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2366,2367]},{"teal":2376,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:420","pc":[2368,2369]},{"teal":2377,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:420","pc":[2370]},{"teal":2378,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:420","pc":[2371]},{"teal":2379,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:420","pc":[2372,2373]},{"teal":2380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:420","pc":[2374]},{"teal":2381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:420","pc":[2375]},{"teal":2385,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2376,2377]},{"teal":2386,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2378]},{"teal":2387,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2379]},{"teal":2388,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2380,2381]},{"teal":2389,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2382]},{"teal":2390,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2383]},{"teal":2395,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2384,2385]},{"teal":2396,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2386]},{"teal":2397,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2387,2388]},{"teal":2398,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2389]},{"teal":2399,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2390]},{"teal":2400,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2391,2392,2393]},{"teal":2405,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2394,2395]},{"teal":2406,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2396,2397]},{"teal":2407,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2398,2399]},{"teal":2408,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2400,2401,2402]},{"teal":2409,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2403]},{"teal":2410,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2404,2405]},{"teal":2411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2406]},{"teal":2412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2407]},{"teal":2413,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2408]},{"teal":2414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2409,2410]},{"teal":2418,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2411,2412]},{"teal":2419,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2413]},{"teal":2420,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2414]},{"teal":2421,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2415,2416]},{"teal":2422,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2417]},{"teal":2423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2418]},{"teal":2424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2419,2420,2421]},{"teal":2429,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2422,2423]},{"teal":2430,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2424,2425]},{"teal":2431,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2426,2427]},{"teal":2432,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2428,2429,2430]},{"teal":2433,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2431]},{"teal":2434,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2432,2433]},{"teal":2435,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2434]},{"teal":2436,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2435]},{"teal":2437,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2436]},{"teal":2438,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2437,2438]},{"teal":2446,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:431","pc":[2439,2440]},{"teal":2447,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:431","pc":[2441]},{"teal":2448,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:431","pc":[2442]},{"teal":2449,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:431","pc":[2443,2444,2445]},{"teal":2454,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2446,2447]},{"teal":2455,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2448,2449]},{"teal":2456,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2450]},{"teal":2457,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2451]},{"teal":2458,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2452,2453]},{"teal":2459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2454]},{"teal":2460,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2455]},{"teal":2461,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2456]},{"teal":2462,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2457]},{"teal":2463,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2458]},{"teal":2466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","errorMessage":"wideRatio failed","pc":[2459]},{"teal":2467,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2460,2461]},{"teal":2472,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:433","pc":[2462,2463]},{"teal":2473,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:433","pc":[2464]},{"teal":2474,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:433","pc":[2465]},{"teal":2475,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:433","pc":[2466,2467,2468]},{"teal":2480,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2469]},{"teal":2481,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2470,2471]},{"teal":2486,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2472,2473]},{"teal":2487,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2474]},{"teal":2488,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2475]},{"teal":2489,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2476,2477]},{"teal":2490,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2478]},{"teal":2491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2479]},{"teal":2496,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:438","pc":[2480,2481]},{"teal":2497,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:438","pc":[2482]},{"teal":2498,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:438","pc":[2483,2484]},{"teal":2499,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:438","pc":[2485]},{"teal":2500,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:438","pc":[2486]},{"teal":2501,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:438","pc":[2487,2488,2489]},{"teal":2506,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2490,2491]},{"teal":2507,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2492,2493]},{"teal":2508,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2494,2495]},{"teal":2509,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2496,2497,2498]},{"teal":2510,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2499]},{"teal":2511,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2500,2501]},{"teal":2512,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2502]},{"teal":2513,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2503]},{"teal":2514,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2504]},{"teal":2515,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2505,2506]},{"teal":2519,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2507,2508]},{"teal":2520,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2509]},{"teal":2521,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2510]},{"teal":2522,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2511,2512]},{"teal":2523,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2513]},{"teal":2524,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2514]},{"teal":2525,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:438","pc":[2515,2516,2517]},{"teal":2530,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2518,2519]},{"teal":2531,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2520,2521]},{"teal":2532,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2522,2523]},{"teal":2533,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2524,2525,2526]},{"teal":2534,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2527]},{"teal":2535,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2528,2529]},{"teal":2536,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2530]},{"teal":2537,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2531]},{"teal":2538,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2532]},{"teal":2539,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2533,2534]},{"teal":2546,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2535,2536]},{"teal":2547,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2537,2538]},{"teal":2548,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2539]},{"teal":2549,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2540,2541]},{"teal":2550,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2542]},{"teal":2551,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2543,2544]},{"teal":2552,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2545]},{"teal":2559,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2546,2547]},{"teal":2560,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2548]},{"teal":2561,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2549]},{"teal":2562,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2550,2551]},{"teal":2563,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2552,2553,2554]},{"teal":2569,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:450","pc":[2555,2556]},{"teal":2570,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:450","pc":[2557]},{"teal":2571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:450","pc":[2558]},{"teal":2572,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:450","pc":[2559,2560,2561]},{"teal":2577,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2562]},{"teal":2578,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2563]},{"teal":2579,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2564,2565]},{"teal":2580,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2566]},{"teal":2581,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2567,2568]},{"teal":2582,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2569]},{"teal":2583,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2570]},{"teal":2584,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2571,2572]},{"teal":2585,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2573,2574]},{"teal":2586,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2575,2576]},{"teal":2587,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2577,2578]},{"teal":2588,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2579]},{"teal":2594,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2580,2581]},{"teal":2595,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2582]},{"teal":2596,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2583]},{"teal":2597,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2584]},{"teal":2598,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2585,2586,2587]},{"teal":2608,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2588]},{"teal":2609,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2589,2590]},{"teal":2610,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2591,2592]},{"teal":2614,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:465","pc":[2593,2594]},{"teal":2615,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:465","pc":[2595]},{"teal":2616,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:465","pc":[2596,2597]},{"teal":2620,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:466","pc":[2598,2599]},{"teal":2621,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:466","pc":[2600]},{"teal":2622,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:466","pc":[2601,2602]},{"teal":2626,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2603,2604]},{"teal":2627,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2605,2606]},{"teal":2631,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:468","pc":[2607,2608]},{"teal":2632,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:468","pc":[2609]},{"teal":2633,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:468","pc":[2610,2611]},{"teal":2636,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2612]},{"teal":2637,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2613,2614]},{"teal":2640,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2615]},{"teal":2645,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2616,2617]},{"teal":2646,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2618]},{"teal":2647,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2619]},{"teal":2650,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2620]},{"teal":2654,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:476","pc":[2621,2622,2623]},{"teal":2657,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:476","pc":[2624]},{"teal":2661,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2625]},{"teal":2662,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2626,2627]},{"teal":2667,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2628,2629]},{"teal":2668,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2630]},{"teal":2669,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2631]},{"teal":2670,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2632]},{"teal":2671,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2633,2634,2635]},{"teal":2676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:478","pc":[2636,2637]},{"teal":2677,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:478","pc":[2638]},{"teal":2678,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:478","pc":[2639]},{"teal":2679,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:478","pc":[2640,2641,2642]},{"teal":2684,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2643]},{"teal":2685,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2644]},{"teal":2686,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2645,2646]},{"teal":2687,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2647]},{"teal":2688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2648,2649]},{"teal":2689,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2650]},{"teal":2690,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2651]},{"teal":2691,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2652,2653]},{"teal":2692,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2654,2655]},{"teal":2693,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2656,2657]},{"teal":2694,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2658,2659]},{"teal":2695,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2660]},{"teal":2701,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2661,2662]},{"teal":2702,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2663,2664]},{"teal":2703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2665]},{"teal":2704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2666]},{"teal":2705,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2667]},{"teal":2706,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2668,2669]},{"teal":2707,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2670]},{"teal":2708,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2671,2672]},{"teal":2709,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2673]},{"teal":2710,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2674,2675]},{"teal":2711,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2676]},{"teal":2712,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2677,2678,2679]},{"teal":2717,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2680,2681]},{"teal":2718,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2682,2683]},{"teal":2719,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2684]},{"teal":2720,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2685,2686]},{"teal":2721,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2687]},{"teal":2722,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2688,2689]},{"teal":2723,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2690]},{"teal":2724,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2691,2692,2693]},{"teal":2731,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2694,2695]},{"teal":2732,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2696]},{"teal":2733,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2697]},{"teal":2734,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2698,2699]},{"teal":2735,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2700,2701,2702]},{"teal":2745,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:486","pc":[2703,2704]},{"teal":2746,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:487","pc":[2705,2706]},{"teal":2747,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:487","pc":[2707]},{"teal":2748,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:488","pc":[2708,2709]},{"teal":2749,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:488","pc":[2710]},{"teal":2750,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2711,2712]},{"teal":2751,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2713]},{"teal":2755,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:476","pc":[2714,2715]},{"teal":2756,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:476","pc":[2716]},{"teal":2761,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2717,2718,2719]},{"teal":2762,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2720]},{"teal":2763,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2721]},{"teal":2767,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2722,2723,2724]},{"teal":2770,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2725]},{"teal":2774,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:494","pc":[2726,2727,2728]},{"teal":2779,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:495","pc":[2729,2730]},{"teal":2780,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:495","pc":[2731]},{"teal":2781,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:495","pc":[2732]},{"teal":2782,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:495","pc":[2733,2734,2735]},{"teal":2787,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2736]},{"teal":2788,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2737]},{"teal":2789,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2738,2739]},{"teal":2790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2740]},{"teal":2791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2741,2742]},{"teal":2792,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2743]},{"teal":2793,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2744]},{"teal":2794,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2745,2746]},{"teal":2795,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2747,2748]},{"teal":2796,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2749,2750]},{"teal":2797,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2751,2752]},{"teal":2798,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:496","pc":[2753]},{"teal":2803,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:498","pc":[2754,2755,2756]},{"teal":2808,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:499","pc":[2757,2758]},{"teal":2809,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:499","pc":[2759]},{"teal":2810,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:499","pc":[2760]},{"teal":2811,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:499","pc":[2761,2762,2763]},{"teal":2816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2764]},{"teal":2817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2765]},{"teal":2818,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2766,2767]},{"teal":2819,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2768]},{"teal":2820,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2769,2770]},{"teal":2821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2771]},{"teal":2822,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2772]},{"teal":2823,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2773,2774]},{"teal":2824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2775,2776]},{"teal":2825,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2777,2778]},{"teal":2826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2779,2780]},{"teal":2827,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2781]},{"teal":2832,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2782,2783]},{"teal":2833,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2784,2785,2786]},{"teal":2834,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2787,2788]},{"teal":2839,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2789,2790]},{"teal":2840,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2791,2792,2793]},{"teal":2841,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2794]},{"teal":2842,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2795]},{"teal":2843,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2796]},{"teal":2844,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2797,2798,2799]},{"teal":2854,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2800]},{"teal":2855,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2801,2802]},{"teal":2856,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2803,2804]},{"teal":2860,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:506","pc":[2805,2806]},{"teal":2861,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:506","pc":[2807]},{"teal":2862,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:506","pc":[2808,2809]},{"teal":2866,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2810,2811]},{"teal":2867,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2812,2813]},{"teal":2871,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2814,2815]},{"teal":2872,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2816,2817]},{"teal":2876,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:509","pc":[2818,2819]},{"teal":2877,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:509","pc":[2820,2821,2822]},{"teal":2878,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:509","pc":[2823]},{"teal":2879,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:509","pc":[2824,2825]},{"teal":2882,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2826]},{"teal":2883,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2827,2828]},{"teal":2886,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2829]},{"teal":2890,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2830,2831]},{"teal":2891,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2832]},{"teal":2892,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2833]},{"teal":2893,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2834,2835]},{"teal":2894,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2836,2837,2838]},{"teal":2895,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2839]},{"teal":2896,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2840]},{"teal":2897,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2841]},{"teal":2901,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:512","pc":[2842,2843]},{"teal":2902,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:512","pc":[2844,2845]},{"teal":2903,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:512","pc":[2846,2847]},{"teal":2904,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:512","pc":[2848,2849]},{"teal":2910,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2850,2851]},{"teal":2911,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2852,2853,2854]},{"teal":2912,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2855]},{"teal":2913,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2856]},{"teal":2914,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2857]},{"teal":2915,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2858,2859,2860]},{"teal":2925,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:515","pc":[2861]},{"teal":2926,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:515","pc":[2862,2863]},{"teal":2927,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:515","pc":[2864,2865]},{"teal":2931,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:516","pc":[2866,2867]},{"teal":2932,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:516","pc":[2868]},{"teal":2933,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:516","pc":[2869,2870]},{"teal":2937,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:517","pc":[2871,2872]},{"teal":2938,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:517","pc":[2873,2874]},{"teal":2942,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:518","pc":[2875,2876]},{"teal":2943,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:518","pc":[2877,2878]},{"teal":2947,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2879,2880]},{"teal":2948,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2881,2882,2883]},{"teal":2949,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2884]},{"teal":2950,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2885,2886]},{"teal":2953,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:515","pc":[2887]},{"teal":2954,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:515","pc":[2888,2889]},{"teal":2957,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:515","pc":[2890]},{"teal":2961,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2891,2892]},{"teal":2962,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2893,2894]},{"teal":2963,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2895,2896]},{"teal":2964,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2897,2898]},{"teal":2969,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:524","pc":[2899,2900]},{"teal":2970,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:524","pc":[2901,2902]},{"teal":2971,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:524","pc":[2903,2904,2905]},{"teal":2972,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:524","pc":[2906,2907,2908]},{"teal":2977,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2909,2910]},{"teal":2978,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2911]},{"teal":2979,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2912]},{"teal":2980,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2913,2914,2915]},{"teal":2985,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2916]},{"teal":2986,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2917]},{"teal":2987,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2918,2919]},{"teal":2988,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2920]},{"teal":2989,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2921,2922]},{"teal":2990,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2923]},{"teal":2991,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2924]},{"teal":2992,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2925,2926]},{"teal":2993,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2927,2928]},{"teal":2994,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2929,2930]},{"teal":2995,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2931,2932]},{"teal":2996,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2933]},{"teal":2999,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2934]},{"teal":3004,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2935,2936,2937]},{"teal":3005,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2938]},{"teal":3008,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2939,2940,2941]},{"teal":3009,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2942]},{"teal":3010,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2943]},{"teal":3014,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2944,2945,2946]},{"teal":3017,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2947]},{"teal":3018,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2948,2949]},{"teal":3022,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[2950,2951,2952]},{"teal":3027,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2953,2954]},{"teal":3028,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2955]},{"teal":3029,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2956]},{"teal":3030,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2957,2958,2959]},{"teal":3035,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2960]},{"teal":3036,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2961]},{"teal":3037,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2962,2963]},{"teal":3038,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2964]},{"teal":3039,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2965,2966]},{"teal":3040,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2967]},{"teal":3041,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2968]},{"teal":3042,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2969,2970]},{"teal":3043,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2971,2972]},{"teal":3044,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2973,2974]},{"teal":3045,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2975,2976]},{"teal":3046,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2977]},{"teal":3051,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[2978,2979,2980]},{"teal":3055,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2981]},{"teal":3056,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2982,2983]},{"teal":3061,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2984,2985]},{"teal":3062,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2986]},{"teal":3063,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2987]},{"teal":3064,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2988]},{"teal":3065,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2989,2990,2991]},{"teal":3070,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[2992,2993]},{"teal":3071,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[2994]},{"teal":3072,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[2995]},{"teal":3073,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[2996,2997,2998]},{"teal":3078,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[2999]},{"teal":3079,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3000]},{"teal":3080,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3001,3002]},{"teal":3081,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3003]},{"teal":3082,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3004,3005]},{"teal":3083,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3006]},{"teal":3084,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3007]},{"teal":3085,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3008,3009]},{"teal":3086,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3010,3011]},{"teal":3087,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3012,3013]},{"teal":3088,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3014,3015]},{"teal":3089,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3016]},{"teal":3094,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3017,3018]},{"teal":3095,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3019,3020]},{"teal":3096,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3021]},{"teal":3097,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3022,3023]},{"teal":3098,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3024]},{"teal":3099,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3025,3026]},{"teal":3100,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3027]},{"teal":3101,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3028,3029]},{"teal":3106,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:541","pc":[3030,3031]},{"teal":3107,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:541","pc":[3032,3033,3034]},{"teal":3108,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:541","pc":[3035,3036]},{"teal":3109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:541","pc":[3037]},{"teal":3110,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:541","pc":[3038,3039,3040]},{"teal":3116,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[3041,3042]},{"teal":3117,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[3043,3044,3045]},{"teal":3118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[3046]},{"teal":3119,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[3047]},{"teal":3120,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[3048]},{"teal":3121,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[3049,3050,3051]},{"teal":3131,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3052]},{"teal":3132,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3053,3054]},{"teal":3133,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3055,3056]},{"teal":3137,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:544","pc":[3057,3058]},{"teal":3138,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:544","pc":[3059]},{"teal":3139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:544","pc":[3060,3061]},{"teal":3143,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:545","pc":[3062,3063]},{"teal":3144,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:545","pc":[3064,3065]},{"teal":3148,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:546","pc":[3066,3067]},{"teal":3149,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:546","pc":[3068,3069]},{"teal":3153,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3070,3071]},{"teal":3154,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3072]},{"teal":3155,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3073]},{"teal":3156,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3074,3075,3076]},{"teal":3157,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3077,3078]},{"teal":3158,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3079,3080,3081]},{"teal":3159,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3082]},{"teal":3160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3083,3084,3085]},{"teal":3163,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3086,3087]},{"teal":3166,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[3088,3089]},{"teal":3169,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3090]},{"teal":3170,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3091,3092]},{"teal":3173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3093]},{"teal":3179,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3094,3095]},{"teal":3180,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3096,3097,3098]},{"teal":3181,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3099]},{"teal":3182,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3100]},{"teal":3183,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3101]},{"teal":3184,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3102,3103,3104]},{"teal":3194,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3105]},{"teal":3195,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3106,3107]},{"teal":3196,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3108,3109]},{"teal":3200,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3110,3111]},{"teal":3201,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3112]},{"teal":3202,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3113,3114]},{"teal":3206,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:555","pc":[3115,3116]},{"teal":3207,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:555","pc":[3117,3118]},{"teal":3211,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3119,3120]},{"teal":3212,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3121,3122]},{"teal":3216,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3123,3124]},{"teal":3217,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3125,3126,3127]},{"teal":3218,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3128]},{"teal":3219,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3129,3130]},{"teal":3222,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3131]},{"teal":3223,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3132,3133]},{"teal":3226,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3134]},{"teal":3230,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3135,3136]},{"teal":3231,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3137,3138]},{"teal":3232,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3139,3140]},{"teal":3233,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3141,3142]},{"teal":3239,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3143,3144]},{"teal":3240,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3145,3146,3147]},{"teal":3241,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3148]},{"teal":3242,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3149]},{"teal":3243,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3150]},{"teal":3244,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3151,3152,3153]},{"teal":3254,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:564","pc":[3154]},{"teal":3255,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:564","pc":[3155,3156]},{"teal":3256,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:564","pc":[3157,3158]},{"teal":3260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:565","pc":[3159,3160]},{"teal":3261,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:565","pc":[3161]},{"teal":3262,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:565","pc":[3162,3163]},{"teal":3266,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:566","pc":[3164,3165]},{"teal":3267,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:566","pc":[3166,3167]},{"teal":3271,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:567","pc":[3168,3169]},{"teal":3272,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:567","pc":[3170,3171]},{"teal":3276,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3172,3173]},{"teal":3277,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3174,3175,3176]},{"teal":3278,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3177]},{"teal":3279,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3178,3179]},{"teal":3282,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:564","pc":[3180]},{"teal":3283,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:564","pc":[3181,3182]},{"teal":3286,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:564","pc":[3183]},{"teal":3290,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:570","pc":[3184,3185]},{"teal":3291,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:570","pc":[3186,3187]},{"teal":3292,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:570","pc":[3188,3189]},{"teal":3293,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:570","pc":[3190,3191]},{"teal":3298,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3192,3193]},{"teal":3299,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3194]},{"teal":3300,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3195]},{"teal":3301,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3196,3197]},{"teal":3302,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3198]},{"teal":3303,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3199]},{"teal":3304,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3200,3201,3202]},{"teal":3305,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3203,3204]},{"teal":3306,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3205,3206,3207]},{"teal":3307,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3208]},{"teal":3308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3209,3210,3211]},{"teal":3311,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3212,3213]},{"teal":3314,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3214]},{"teal":3315,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:574","pc":[3215]},{"teal":3320,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3216,3217]},{"teal":3321,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3218]},{"teal":3322,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3219]},{"teal":3323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3220,3221,3222]},{"teal":3328,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3223]},{"teal":3329,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3224]},{"teal":3330,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3225,3226]},{"teal":3331,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3227]},{"teal":3332,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3228,3229]},{"teal":3333,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3230]},{"teal":3334,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3231]},{"teal":3335,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3232,3233]},{"teal":3336,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3234,3235]},{"teal":3337,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3236,3237]},{"teal":3338,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3238,3239]},{"teal":3339,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:577","pc":[3240]},{"teal":3345,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3241,3242]},{"teal":3346,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3243]},{"teal":3347,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3244]},{"teal":3348,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3245,3246,3247]},{"teal":3358,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:582","pc":[3248,3249]},{"teal":3359,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:583","pc":[3250,3251]},{"teal":3360,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:583","pc":[3252]},{"teal":3361,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:585","pc":[3253,3254]},{"teal":3362,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:585","pc":[3255]},{"teal":3363,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:584","pc":[3256,3257]},{"teal":3364,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:584","pc":[3258]},{"teal":3365,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:581","pc":[3259,3260]},{"teal":3369,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:587","pc":[3261,3262]},{"teal":3370,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:587","pc":[3263,3264]},{"teal":3371,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:587","pc":[3265,3266,3267]},{"teal":3372,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:587","pc":[3268,3269,3270]},{"teal":3376,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3271]},{"teal":3377,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3272]},{"teal":3378,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3273]},{"teal":3379,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3274]},{"teal":3380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3275,3276]},{"teal":3381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3277]},{"teal":3382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3278]},{"teal":3383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3279]},{"teal":3384,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3280,3281]},{"teal":3385,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3282]},{"teal":3386,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3283,3284]},{"teal":3387,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3285]},{"teal":3388,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3286,3287,3288]},{"teal":3389,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3289,3290]},{"teal":3393,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3291]},{"teal":3394,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3292]},{"teal":3395,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3293]},{"teal":3396,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3294]},{"teal":3397,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3295,3296]},{"teal":3398,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3297]},{"teal":3399,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3298]},{"teal":3400,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3299]},{"teal":3401,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3300,3301]},{"teal":3402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3302]},{"teal":3403,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3303,3304]},{"teal":3404,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3305]},{"teal":3405,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3306,3307,3308]},{"teal":3406,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3309,3310]},{"teal":3411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3311,3312]},{"teal":3412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3313]},{"teal":3413,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3314]},{"teal":3414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3315,3316,3317]},{"teal":3419,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3318]},{"teal":3420,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3319]},{"teal":3421,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3320,3321]},{"teal":3422,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3322]},{"teal":3423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3323,3324]},{"teal":3424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3325]},{"teal":3425,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3326]},{"teal":3426,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3327,3328]},{"teal":3427,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3329,3330]},{"teal":3428,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3331,3332]},{"teal":3429,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3333,3334]},{"teal":3430,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:594","pc":[3335]},{"teal":3435,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:596","pc":[3336,3337]},{"teal":3436,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:596","pc":[3338,3339]},{"teal":3437,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:596","pc":[3340,3341,3342]},{"teal":3441,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3343,3344]},{"teal":3442,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3345,3346]},{"teal":3443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3347,3348,3349]},{"teal":3447,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:600","pc":[3350]},{"teal":3448,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:600","pc":[3351]},{"teal":3449,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:600","pc":[3352]},{"teal":3450,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:600","pc":[3353]},{"teal":3451,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:600","pc":[3354]},{"teal":3452,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:600","pc":[3355]},{"teal":3453,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3356,3357,3358]},{"teal":3458,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3359,3360]},{"teal":3459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3361,3362]},{"teal":3460,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3363,3364]},{"teal":3461,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3365,3366,3367]},{"teal":3462,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3368]},{"teal":3463,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3369,3370]},{"teal":3464,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3371]},{"teal":3465,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3372]},{"teal":3466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3373]},{"teal":3467,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3374,3375]},{"teal":3471,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:603","pc":[3376,3377]},{"teal":3472,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:603","pc":[3378,3379]},{"teal":3473,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:603","pc":[3380,3381]},{"teal":3474,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:603","pc":[3382,3383]},{"teal":3479,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:605","pc":[3384,3385]},{"teal":3480,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:605","pc":[3386,3387]},{"teal":3481,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:605","pc":[3388,3389,3390]},{"teal":3482,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:605","pc":[3391,3392,3393]},{"teal":3489,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3394,3395]},{"teal":3490,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3396]},{"teal":3491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3397]},{"teal":3492,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3398,3399]},{"teal":3493,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3400,3401,3402]},{"teal":3496,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[3403]},{"teal":3500,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3404,3405,3406]},{"teal":3503,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3407]},{"teal":3507,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3408]},{"teal":3508,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3409,3410]},{"teal":3513,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3411,3412]},{"teal":3514,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3413]},{"teal":3515,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3414]},{"teal":3516,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3415]},{"teal":3517,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3416,3417,3418]},{"teal":3522,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3419,3420]},{"teal":3523,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3421]},{"teal":3524,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3422]},{"teal":3525,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3423,3424,3425]},{"teal":3530,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3426]},{"teal":3531,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3427]},{"teal":3532,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3428,3429]},{"teal":3533,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3430]},{"teal":3534,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3431,3432]},{"teal":3535,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3433]},{"teal":3536,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3434]},{"teal":3537,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3435,3436]},{"teal":3538,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3437,3438]},{"teal":3539,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3439,3440]},{"teal":3540,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3441,3442]},{"teal":3541,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:613","pc":[3443]},{"teal":3547,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3444,3445]},{"teal":3548,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3446,3447]},{"teal":3549,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3448]},{"teal":3550,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3449]},{"teal":3551,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3450]},{"teal":3552,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3451,3452]},{"teal":3553,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3453]},{"teal":3554,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3454,3455]},{"teal":3555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3456]},{"teal":3556,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3457,3458]},{"teal":3557,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3459]},{"teal":3558,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3460,3461,3462]},{"teal":3563,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:616","pc":[3463,3464]},{"teal":3564,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:616","pc":[3465,3466,3467]},{"teal":3571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3468,3469]},{"teal":3572,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3470]},{"teal":3573,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3471]},{"teal":3574,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3472,3473]},{"teal":3575,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3474,3475,3476]},{"teal":3580,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:619","pc":[3477]},{"teal":3584,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3478,3479]},{"teal":3585,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3480]},{"teal":3589,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3481,3482,3483]},{"teal":3592,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3484]},{"teal":3596,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3485]},{"teal":3597,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3486,3487]},{"teal":3602,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3488,3489]},{"teal":3603,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3490]},{"teal":3604,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3491]},{"teal":3605,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3492]},{"teal":3606,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3493,3494,3495]},{"teal":3611,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3496,3497]},{"teal":3612,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3498]},{"teal":3613,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3499]},{"teal":3614,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3500,3501,3502]},{"teal":3619,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3503]},{"teal":3620,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3504]},{"teal":3621,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3505,3506]},{"teal":3622,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3507]},{"teal":3623,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3508,3509]},{"teal":3624,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3510]},{"teal":3625,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3511]},{"teal":3626,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3512,3513]},{"teal":3627,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3514,3515]},{"teal":3628,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3516,3517]},{"teal":3629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3518,3519]},{"teal":3630,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:625","pc":[3520]},{"teal":3636,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3521,3522]},{"teal":3637,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3523,3524]},{"teal":3638,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3525]},{"teal":3639,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3526]},{"teal":3640,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3527]},{"teal":3641,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3528,3529]},{"teal":3642,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3530]},{"teal":3643,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3531,3532]},{"teal":3644,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3533]},{"teal":3645,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3534,3535]},{"teal":3646,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3536]},{"teal":3647,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3537,3538,3539]},{"teal":3652,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3540,3541]},{"teal":3653,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3542,3543]},{"teal":3654,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3544]},{"teal":3655,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3545,3546]},{"teal":3656,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3547]},{"teal":3657,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3548,3549]},{"teal":3658,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3550]},{"teal":3662,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3551]},{"teal":3663,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3552,3553,3554]},{"teal":3668,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3555,3556]},{"teal":3669,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3557,3558]},{"teal":3670,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3559]},{"teal":3671,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3560]},{"teal":3672,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3561]},{"teal":3673,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3562,3563]},{"teal":3674,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3564]},{"teal":3675,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3565,3566]},{"teal":3676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3567]},{"teal":3677,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3568,3569]},{"teal":3678,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3570]},{"teal":3679,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3571,3572,3573]},{"teal":3684,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3574,3575]},{"teal":3685,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3576,3577]},{"teal":3686,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3578]},{"teal":3687,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3579,3580]},{"teal":3688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3581]},{"teal":3689,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3582,3583]},{"teal":3690,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3584]},{"teal":3694,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:633","pc":[3585]},{"teal":3701,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3586,3587]},{"teal":3702,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3588]},{"teal":3703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3589]},{"teal":3704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3590,3591]},{"teal":3705,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3592,3593,3594]},{"teal":3708,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3595]},{"teal":3712,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3596,3597,3598]},{"teal":3716,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3599,3600]},{"teal":3717,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3601,3602]},{"teal":3718,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3603]},{"teal":3719,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3604,3605]},{"teal":3720,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3606]},{"teal":3721,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3607,3608]},{"teal":3722,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3609]},{"teal":3723,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3610]},{"teal":3728,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3611,3612,3613]},{"teal":3729,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3614]},{"teal":3730,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3615]},{"teal":3731,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3616]},{"teal":3732,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3617]},{"teal":3735,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","errorMessage":"argument 0 (enabled) for setFreeze must be a bool","pc":[3618]},{"teal":3736,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3619]},{"teal":3737,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3620]},{"teal":3740,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3621,3622,3623]},{"teal":3741,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3624]},{"teal":3742,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3625]},{"teal":3746,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3626,3627,3628]},{"teal":3750,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3629,3630]},{"teal":3751,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3631,3632]},{"teal":3752,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3633]},{"teal":3753,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3634]},{"teal":3756,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","errorMessage":"Only injector can freeze payouts","pc":[3635]},{"teal":3760,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3636,3637]},{"teal":3761,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3638,3639]},{"teal":3762,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3640,3641]},{"teal":3763,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3642]},{"teal":3764,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3643,3644]},{"teal":3765,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3645]},{"teal":3766,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3646]},{"teal":3767,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3647]},{"teal":3772,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3648,3649,3650]},{"teal":3773,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3651]},{"teal":3774,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3652]},{"teal":3778,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3653,3654,3655]},{"teal":3779,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3656]},{"teal":3782,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3657,3658,3659,3660,3661,3662]},{"teal":3783,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3663,3664,3665]},{"teal":3784,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3666,3667,3668,3669]},{"teal":3787,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[3670]},{"teal":3790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3671,3672,3673,3674,3675,3676]},{"teal":3791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3677,3678,3679,3680,3681,3682]},{"teal":3792,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3683,3684,3685,3686,3687,3688]},{"teal":3793,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3689,3690,3691,3692,3693,3694]},{"teal":3794,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3695,3696,3697,3698,3699,3700]},{"teal":3795,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3701,3702,3703,3704,3705,3706]},{"teal":3796,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3707,3708,3709,3710,3711,3712]},{"teal":3797,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3713,3714,3715,3716,3717,3718]},{"teal":3798,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3719,3720,3721,3722,3723,3724]},{"teal":3799,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3725,3726,3727,3728,3729,3730]},{"teal":3800,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3731,3732,3733,3734,3735,3736]},{"teal":3801,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3737,3738,3739,3740,3741,3742]},{"teal":3802,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3743,3744,3745,3746,3747,3748]},{"teal":3803,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3749,3750,3751,3752,3753,3754]},{"teal":3804,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3755,3756,3757,3758,3759,3760]},{"teal":3805,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3761,3762,3763,3764,3765,3766]},{"teal":3806,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3767,3768,3769,3770,3771,3772]},{"teal":3807,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3773,3774,3775,3776,3777,3778]},{"teal":3808,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3779,3780,3781,3782,3783,3784]},{"teal":3809,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3785,3786,3787,3788,3789,3790]},{"teal":3810,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3791,3792,3793,3794,3795,3796]},{"teal":3811,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3797,3798,3799,3800,3801,3802]},{"teal":3812,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3803,3804,3805]},{"teal":3813,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3806,3807,3808,3809,3810,3811,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,3845,3846,3847,3848,3849,3850,3851]},{"teal":3816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[3852]},{"teal":3819,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3853,3854,3855,3856,3857,3858]},{"teal":3820,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3859,3860,3861]},{"teal":3821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3862,3863,3864,3865]},{"teal":3824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[3866]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"I3ByYWdtYSB2ZXJzaW9uIDExCmludGNibG9jayAwIDEgNiAzMDAgNSA1NiAzMiA0IDEwMDAwMCAxMDAwMDAwMDAwMDAwMDAwIDIwMDAgMTAwMDAgMjgwMDcgMTI3CmJ5dGVjYmxvY2sgMHgwYTgxMDEgMHggMHg3Mzc0NjE2YjY1NzI3MyAweDZlNzU2ZDUzNzQ2MTZiNjU3MjczIDB4NzI2NTc3NjE3MjY0NDE3MzczNjU3NDQ5NjQgMHg3NDZmNzQ2MTZjNTM3NDYxNmI2NTY0IDB4MDAwMDAwMDAwMDAwMDAwMCAweDYxNjQ2ZDY5NmU0MTY0NjQ3MjY1NzM3MyAweDY5NmU2YTY1NjM3NDY1NjQ0MTUzNDE1MjY1Nzc2MTcyNjQ3MyAweDY5NmU2YTY1NjM3NDZmNzI0MTY0NjQ3MjY1NzM3MyAweDY5NmU2YTY1NjM3NDY1NjQ3ODU1NTM0NDUyNjU3NzYxNzI2NDczIDB4MDAgMHg3MDYxNjk2NDQxNTM0MTUyNjU3NzYxNzI2NDczIDB4Nzg1NTUzNDQ0MTczNzM2NTc0NDk2NCAweDczNzQ2MTZiNjU2NDQxNzM3MzY1NzQ0OTY0IDB4NzA2ZjZmNmM0MTYzNzQ2OTc2NjUgMHg3MDZmNmY2YzQ1NmU2NDY5NmU2NyAweDY2NzI2NTY1N2E2NSAweDZjNjE3Mzc0NDk2ZTZhNjU2Mzc0Njk2ZjZlNTQ2OTZkNjUgMHg3NDcyNjU2MTczNzU3Mjc5NDE2NDY0NzI2NTczNzMgMHg3MDZjNjE3NDY2NmY3MjZkNDY2NTY1NDI3MDczIDB4NzA2MTY5NjQ1MDZjNjE3NDY2NmY3MjZkNDY2NTY1NzMKCi8vIFRoaXMgVEVBTCB3YXMgZ2VuZXJhdGVkIGJ5IFRFQUxTY3JpcHQgdjAuMTA3LjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludGMgMiAvLyA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKmNhbGxfRGVsZXRlQXBwbGljYXRpb24gKmNyZWF0ZV9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRAoKKk5PVF9JTVBMRU1FTlRFRDoKCS8vIFRoZSByZXF1ZXN0ZWQgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGlzIGNvbnRyYWN0LiBBcmUgeW91IHVzaW5nIHRoZSBjb3JyZWN0IE9uQ29tcGxldGU/IERpZCB5b3Ugc2V0IHlvdXIgYXBwIElEPwoJZXJyCgovLyBjcmVhdGVBcHBsaWNhdGlvbihhZGRyZXNzLGFkZHJlc3MsYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb246CgkvLyBpbmplY3RvckFkZHJlc3M6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDMKCWR1cAoJbGVuCglpbnRjIDYgLy8gMzIKCT09CgoJLy8gYXJndW1lbnQgMCAoaW5qZWN0b3JBZGRyZXNzKSBmb3IgY3JlYXRlQXBwbGljYXRpb24gbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIHRyZWFzdXJ5QWRkcmVzczogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJZHVwCglsZW4KCWludGMgNiAvLyAzMgoJPT0KCgkvLyBhcmd1bWVudCAxICh0cmVhc3VyeUFkZHJlc3MpIGZvciBjcmVhdGVBcHBsaWNhdGlvbiBtdXN0IGJlIGEgYWRkcmVzcwoJYXNzZXJ0CgoJLy8gYWRtaW5BZGRyZXNzOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50YyA2IC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDIgKGFkbWluQWRkcmVzcykgZm9yIGNyZWF0ZUFwcGxpY2F0aW9uIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIGNyZWF0ZUFwcGxpY2F0aW9uKGFkZHJlc3MsYWRkcmVzcyxhZGRyZXNzKXZvaWQKCWNhbGxzdWIgY3JlYXRlQXBwbGljYXRpb24KCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKGFkbWluQWRkcmVzczogQWRkcmVzcywgdHJlYXN1cnlBZGRyZXNzOiBBZGRyZXNzLCBpbmplY3RvckFkZHJlc3M6IEFkZHJlc3MpOiB2b2lkCmNyZWF0ZUFwcGxpY2F0aW9uOgoJcHJvdG8gMyAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjY3CgkvLyB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZSA9IGFkbWluQWRkcmVzcwoJYnl0ZWMgNyAvLyAgImFkbWluQWRkcmVzcyIKCWZyYW1lX2RpZyAtMSAvLyBhZG1pbkFkZHJlc3M6IEFkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjY4CgkvLyB0aGlzLnRyZWFzdXJ5QWRkcmVzcy52YWx1ZSA9IHRyZWFzdXJ5QWRkcmVzcwoJYnl0ZWMgMTkgLy8gICJ0cmVhc3VyeUFkZHJlc3MiCglmcmFtZV9kaWcgLTIgLy8gdHJlYXN1cnlBZGRyZXNzOiBBZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2OQoJLy8gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUgPSBpbmplY3RvckFkZHJlc3MKCWJ5dGVjIDkgLy8gICJpbmplY3RvckFkZHJlc3MiCglmcmFtZV9kaWcgLTMgLy8gaW5qZWN0b3JBZGRyZXNzOiBBZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo3MAoJLy8gdGhpcy5jb250cmFjdFZlcnNpb24udmFsdWUgPSBWRVJTSU9OCglwdXNoYnl0ZXMgMHg2MzZmNmU3NDcyNjE2Mzc0NTY2NTcyNzM2OTZmNmUgLy8gImNvbnRyYWN0VmVyc2lvbiIKCWludGMgMTAgLy8gMjAwMAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gaW5pdEFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQsdWludDY0LHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfaW5pdEFwcGxpY2F0aW9uOgoJLy8gcGxhdGZvcm1GZWVCcHM6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgNAoJYnRvaQoKCS8vIHhVU0RBc3NldElEOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDMKCWJ0b2kKCgkvLyByZXdhcmRBc3NldElkOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDIKCWJ0b2kKCgkvLyBzdGFrZWRBc3NldDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBpbml0QXBwbGljYXRpb24odWludDY0LHVpbnQ2NCx1aW50NjQsdWludDY0KXZvaWQKCWNhbGxzdWIgaW5pdEFwcGxpY2F0aW9uCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBpbml0QXBwbGljYXRpb24oc3Rha2VkQXNzZXQ6IHVpbnQ2NCwgcmV3YXJkQXNzZXRJZDogdWludDY0LCB4VVNEQXNzZXRJRDogdWludDY0LCBwbGF0Zm9ybUZlZUJwczogdWludDY0KTogdm9pZAppbml0QXBwbGljYXRpb246Cglwcm90byA0IDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NzQKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuYWRtaW5BZGRyZXNzLnZhbHVlLCAnT25seSBhZG1pbiBjYW4gaW5pdCBhcHBsaWNhdGlvbicpCgl0eG4gU2VuZGVyCglieXRlYyA3IC8vICAiYWRtaW5BZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBhZG1pbiBjYW4gaW5pdCBhcHBsaWNhdGlvbgoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjc2CgkvLyB0aGlzLnN0YWtlZEFzc2V0SWQudmFsdWUgPSBzdGFrZWRBc3NldAoJYnl0ZWMgMTQgLy8gICJzdGFrZWRBc3NldElkIgoJZnJhbWVfZGlnIC0xIC8vIHN0YWtlZEFzc2V0OiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjc3CgkvLyB0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUgPSByZXdhcmRBc3NldElkCglieXRlYyA0IC8vICAicmV3YXJkQXNzZXRJZCIKCWZyYW1lX2RpZyAtMiAvLyByZXdhcmRBc3NldElkOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjc4CgkvLyB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlID0gMAoJYnl0ZWMgNSAvLyAgInRvdGFsU3Rha2VkIgoJaW50YyAwIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjc5CgkvLyB0aGlzLmZyZWV6ZS52YWx1ZSA9IGZhbHNlCglieXRlYyAxNyAvLyAgImZyZWV6ZSIKCWludGMgMCAvLyAwCglieXRlYyAxMSAvLyAweDAwCglpbnRjIDAgLy8gMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjgwCgkvLyB0aGlzLmluamVjdGVkQVNBUmV3YXJkcy52YWx1ZSA9IDAKCWJ5dGVjIDggLy8gICJpbmplY3RlZEFTQVJld2FyZHMiCglpbnRjIDAgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6ODEKCS8vIHRoaXMuaW5qZWN0ZWR4VVNEUmV3YXJkcy52YWx1ZSA9IDAKCWJ5dGVjIDEwIC8vICAiaW5qZWN0ZWR4VVNEUmV3YXJkcyIKCWludGMgMCAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo4MgoJLy8gdGhpcy5udW1TdGFrZXJzLnZhbHVlID0gMAoJYnl0ZWMgMyAvLyAgIm51bVN0YWtlcnMiCglpbnRjIDAgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6ODMKCS8vIHRoaXMucG9vbEFjdGl2ZS52YWx1ZSA9IGZhbHNlCglieXRlYyAxNSAvLyAgInBvb2xBY3RpdmUiCglpbnRjIDAgLy8gMAoJYnl0ZWMgMTEgLy8gMHgwMAoJaW50YyAwIC8vIDAKCXVuY292ZXIgMgoJc2V0Yml0CglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo4NAoJLy8gdGhpcy5wb29sRW5kaW5nLnZhbHVlID0gZmFsc2UKCWJ5dGVjIDE2IC8vICAicG9vbEVuZGluZyIKCWludGMgMCAvLyAwCglieXRlYyAxMSAvLyAweDAwCglpbnRjIDAgLy8gMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjg1CgkvLyB0aGlzLnhVU0RBc3NldElkLnZhbHVlID0geFVTREFzc2V0SUQKCWJ5dGVjIDEzIC8vICAieFVTREFzc2V0SWQiCglmcmFtZV9kaWcgLTMgLy8geFVTREFzc2V0SUQ6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6ODYKCS8vIHRoaXMubGFzdEluamVjdGlvblRpbWUudmFsdWUgPSBnbG9iYWxzLmxhdGVzdFRpbWVzdGFtcAoJYnl0ZWMgMTggLy8gICJsYXN0SW5qZWN0aW9uVGltZSIKCWdsb2JhbCBMYXRlc3RUaW1lc3RhbXAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjg3CgkvLyB0aGlzLnBhaWRBU0FSZXdhcmRzLnZhbHVlID0gMAoJYnl0ZWMgMTIgLy8gICJwYWlkQVNBUmV3YXJkcyIKCWludGMgMCAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo4OAoJLy8gdGhpcy5wbGF0Zm9ybUZlZUJwcy52YWx1ZSA9IHBsYXRmb3JtRmVlQnBzCglieXRlYyAyMCAvLyAgInBsYXRmb3JtRmVlQnBzIgoJZnJhbWVfZGlnIC00IC8vIHBsYXRmb3JtRmVlQnBzOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjkwCgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NChzdGFrZWRBc3NldCksCgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgYXNzZXRBbW91bnQ6IDAsCgkvLyAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgNyAvLyAgYXhmZXIKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6OTEKCS8vIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHN0YWtlZEFzc2V0KQoJZnJhbWVfZGlnIC0xIC8vIHN0YWtlZEFzc2V0OiB1aW50NjQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjkyCgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjkzCgkvLyBhc3NldEFtb3VudDogMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjk1CgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnhVU0RBc3NldElkLnZhbHVlKSwKCS8vICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICBhc3NldEFtb3VudDogMCwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50YyA3IC8vICBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo5NgoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDEzIC8vICAieFVTREFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6OTcKCS8vIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6OTgKCS8vIGFzc2V0QW1vdW50OiAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBBc3NldEFtb3VudAoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTAwCgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NChyZXdhcmRBc3NldElkKSwKCS8vICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICBhc3NldEFtb3VudDogMCwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50YyA3IC8vICBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMDEKCS8vIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHJld2FyZEFzc2V0SWQpCglmcmFtZV9kaWcgLTIgLy8gcmV3YXJkQXNzZXRJZDogdWludDY0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMDIKCS8vIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTAzCgkvLyBhc3NldEFtb3VudDogMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CglyZXRzdWIKCi8vIHVwZGF0ZUFkbWluQWRkcmVzcyhhZGRyZXNzKXZvaWQKKmFiaV9yb3V0ZV91cGRhdGVBZG1pbkFkZHJlc3M6CgkvLyBhZG1pbkFkZHJlc3M6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnRjIDYgLy8gMzIKCT09CgoJLy8gYXJndW1lbnQgMCAoYWRtaW5BZGRyZXNzKSBmb3IgdXBkYXRlQWRtaW5BZGRyZXNzIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHVwZGF0ZUFkbWluQWRkcmVzcyhhZGRyZXNzKXZvaWQKCWNhbGxzdWIgdXBkYXRlQWRtaW5BZGRyZXNzCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyB1cGRhdGVBZG1pbkFkZHJlc3MoYWRtaW5BZGRyZXNzOiBBZGRyZXNzKTogdm9pZAp1cGRhdGVBZG1pbkFkZHJlc3M6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTA5CgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09PSB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZSwgJ09ubHkgYWRtaW4gY2FuIHVwZGF0ZSBhZG1pbiBhZGRyZXNzJykKCXR4biBTZW5kZXIKCWJ5dGVjIDcgLy8gICJhZG1pbkFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGFkbWluIGNhbiB1cGRhdGUgYWRtaW4gYWRkcmVzcwoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjExMAoJLy8gdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUgPSBhZG1pbkFkZHJlc3MKCWJ5dGVjIDcgLy8gICJhZG1pbkFkZHJlc3MiCglmcmFtZV9kaWcgLTEgLy8gYWRtaW5BZGRyZXNzOiBBZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBzZXRQb29sQWN0aXZlKCl2b2lkCiphYmlfcm91dGVfc2V0UG9vbEFjdGl2ZToKCS8vIGV4ZWN1dGUgc2V0UG9vbEFjdGl2ZSgpdm9pZAoJY2FsbHN1YiBzZXRQb29sQWN0aXZlCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBzZXRQb29sQWN0aXZlKCk6IHZvaWQKc2V0UG9vbEFjdGl2ZToKCXByb3RvIDAgMAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMTQKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuYWRtaW5BZGRyZXNzLnZhbHVlLCAnT25seSBhZG1pbiBjYW4gc2V0IHBvb2wgYWN0aXZlJykKCXR4biBTZW5kZXIKCWJ5dGVjIDcgLy8gICJhZG1pbkFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGFkbWluIGNhbiBzZXQgcG9vbCBhY3RpdmUKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMTYKCS8vIHRoaXMucG9vbEFjdGl2ZS52YWx1ZSA9IHRydWUKCWJ5dGVjIDE1IC8vICAicG9vbEFjdGl2ZSIKCWludGMgMSAvLyAxCglieXRlYyAxMSAvLyAweDAwCglpbnRjIDAgLy8gMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIHNldFBvb2xFbmRpbmcoKXZvaWQKKmFiaV9yb3V0ZV9zZXRQb29sRW5kaW5nOgoJLy8gZXhlY3V0ZSBzZXRQb29sRW5kaW5nKCl2b2lkCgljYWxsc3ViIHNldFBvb2xFbmRpbmcKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHNldFBvb2xFbmRpbmcoKTogdm9pZApzZXRQb29sRW5kaW5nOgoJcHJvdG8gMCAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEyMAoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUsICdPbmx5IGFkbWluIGNhbiBzZXQgcG9vbCBlbmRpbmcnKQoJdHhuIFNlbmRlcgoJYnl0ZWMgNyAvLyAgImFkbWluQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIE9ubHkgYWRtaW4gY2FuIHNldCBwb29sIGVuZGluZwoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEyMQoJLy8gdGhpcy5wb29sRW5kaW5nLnZhbHVlID0gdHJ1ZQoJYnl0ZWMgMTYgLy8gICJwb29sRW5kaW5nIgoJaW50YyAxIC8vIDEKCWJ5dGVjIDExIC8vIDB4MDAKCWludGMgMCAvLyAwCgl1bmNvdmVyIDIKCXNldGJpdAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTIyCgkvLyB0aGlzLnBvb2xBY3RpdmUudmFsdWUgPSBmYWxzZQoJYnl0ZWMgMTUgLy8gICJwb29sQWN0aXZlIgoJaW50YyAwIC8vIDAKCWJ5dGVjIDExIC8vIDB4MDAKCWludGMgMCAvLyAwCgl1bmNvdmVyIDIKCXNldGJpdAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gdXBkYXRlSW5qZWN0ZWRBU0FSZXdhcmRzKHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfdXBkYXRlSW5qZWN0ZWRBU0FSZXdhcmRzOgoJLy8gaW5qZWN0ZWRBU0FSZXdhcmRzOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIHVwZGF0ZUluamVjdGVkQVNBUmV3YXJkcyh1aW50NjQpdm9pZAoJY2FsbHN1YiB1cGRhdGVJbmplY3RlZEFTQVJld2FyZHMKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHVwZGF0ZUluamVjdGVkQVNBUmV3YXJkcyhpbmplY3RlZEFTQVJld2FyZHM6IHVpbnQ2NCk6IHZvaWQKdXBkYXRlSW5qZWN0ZWRBU0FSZXdhcmRzOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEyOAoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsICdPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgaW5qZWN0ZWQgcmV3YXJkcycpCgl0eG4gU2VuZGVyCglieXRlYyA5IC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBpbmplY3RvciBjYW4gdXBkYXRlIGluamVjdGVkIHJld2FyZHMKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMjkKCS8vIHRoaXMuaW5qZWN0ZWRBU0FSZXdhcmRzLnZhbHVlID0gaW5qZWN0ZWRBU0FSZXdhcmRzCglieXRlYyA4IC8vICAiaW5qZWN0ZWRBU0FSZXdhcmRzIgoJZnJhbWVfZGlnIC0xIC8vIGluamVjdGVkQVNBUmV3YXJkczogdWludDY0CglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyB1cGRhdGVQYWlkQVNBUmV3YXJkcyh1aW50NjQpdm9pZAoqYWJpX3JvdXRlX3VwZGF0ZVBhaWRBU0FSZXdhcmRzOgoJLy8gcGFpZEFTQVJld2FyZHM6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgdXBkYXRlUGFpZEFTQVJld2FyZHModWludDY0KXZvaWQKCWNhbGxzdWIgdXBkYXRlUGFpZEFTQVJld2FyZHMKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHVwZGF0ZVBhaWRBU0FSZXdhcmRzKHBhaWRBU0FSZXdhcmRzOiB1aW50NjQpOiB2b2lkCnVwZGF0ZVBhaWRBU0FSZXdhcmRzOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEzMwoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsICdPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgcGFpZCByZXdhcmRzJykKCXR4biBTZW5kZXIKCWJ5dGVjIDkgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgcGFpZCByZXdhcmRzCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTM0CgkvLyB0aGlzLnBhaWRBU0FSZXdhcmRzLnZhbHVlID0gcGFpZEFTQVJld2FyZHMKCWJ5dGVjIDEyIC8vICAicGFpZEFTQVJld2FyZHMiCglmcmFtZV9kaWcgLTEgLy8gcGFpZEFTQVJld2FyZHM6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gdXBkYXRlSW5qZWN0ZWR4VVNEUmV3YXJkcyh1aW50NjQpdm9pZAoqYWJpX3JvdXRlX3VwZGF0ZUluamVjdGVkeFVTRFJld2FyZHM6CgkvLyBpbmplY3RlZHhVU0RSZXdhcmRzOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIHVwZGF0ZUluamVjdGVkeFVTRFJld2FyZHModWludDY0KXZvaWQKCWNhbGxzdWIgdXBkYXRlSW5qZWN0ZWR4VVNEUmV3YXJkcwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gdXBkYXRlSW5qZWN0ZWR4VVNEUmV3YXJkcyhpbmplY3RlZHhVU0RSZXdhcmRzOiB1aW50NjQpOiB2b2lkCnVwZGF0ZUluamVjdGVkeFVTRFJld2FyZHM6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTM4CgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09PSB0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZSwgJ09ubHkgaW5qZWN0b3IgY2FuIHVwZGF0ZSBpbmplY3RlZCByZXdhcmRzJykKCXR4biBTZW5kZXIKCWJ5dGVjIDkgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgaW5qZWN0ZWQgcmV3YXJkcwoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEzOQoJLy8gdGhpcy5pbmplY3RlZHhVU0RSZXdhcmRzLnZhbHVlID0gaW5qZWN0ZWR4VVNEUmV3YXJkcwoJYnl0ZWMgMTAgLy8gICJpbmplY3RlZHhVU0RSZXdhcmRzIgoJZnJhbWVfZGlnIC0xIC8vIGluamVjdGVkeFVTRFJld2FyZHM6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gdXBkYXRlVHJlYXN1cnlBZGRyZXNzKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX3VwZGF0ZVRyZWFzdXJ5QWRkcmVzczoKCS8vIHRyZWFzdXJ5QWRkcmVzczogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludGMgNiAvLyAzMgoJPT0KCgkvLyBhcmd1bWVudCAwICh0cmVhc3VyeUFkZHJlc3MpIGZvciB1cGRhdGVUcmVhc3VyeUFkZHJlc3MgbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIGV4ZWN1dGUgdXBkYXRlVHJlYXN1cnlBZGRyZXNzKGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiB1cGRhdGVUcmVhc3VyeUFkZHJlc3MKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHVwZGF0ZVRyZWFzdXJ5QWRkcmVzcyh0cmVhc3VyeUFkZHJlc3M6IEFkZHJlc3MpOiB2b2lkCnVwZGF0ZVRyZWFzdXJ5QWRkcmVzczoKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNDMKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlLCAnT25seSBpbmplY3RvciBjYW4gdXBkYXRlIHRyZWFzdXJ5IGFkZHJlc3MnKQoJdHhuIFNlbmRlcgoJYnl0ZWMgOSAvLyAgImluamVjdG9yQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIE9ubHkgaW5qZWN0b3IgY2FuIHVwZGF0ZSB0cmVhc3VyeSBhZGRyZXNzCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTQ0CgkvLyB0aGlzLnRyZWFzdXJ5QWRkcmVzcy52YWx1ZSA9IHRyZWFzdXJ5QWRkcmVzcwoJYnl0ZWMgMTkgLy8gICJ0cmVhc3VyeUFkZHJlc3MiCglmcmFtZV9kaWcgLTEgLy8gdHJlYXN1cnlBZGRyZXNzOiBBZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyB1cGRhdGVJbmplY3RvckFkZHJlc3MoYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfdXBkYXRlSW5qZWN0b3JBZGRyZXNzOgoJLy8gaW5qZWN0b3JBZGRyZXNzOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50YyA2IC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGluamVjdG9yQWRkcmVzcykgZm9yIHVwZGF0ZUluamVjdG9yQWRkcmVzcyBtdXN0IGJlIGEgYWRkcmVzcwoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSB1cGRhdGVJbmplY3RvckFkZHJlc3MoYWRkcmVzcyl2b2lkCgljYWxsc3ViIHVwZGF0ZUluamVjdG9yQWRkcmVzcwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gdXBkYXRlSW5qZWN0b3JBZGRyZXNzKGluamVjdG9yQWRkcmVzczogQWRkcmVzcyk6IHZvaWQKdXBkYXRlSW5qZWN0b3JBZGRyZXNzOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE0OAoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsICdPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgaW5qZWN0b3IgYWRkcmVzcycpCgl0eG4gU2VuZGVyCglieXRlYyA5IC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBpbmplY3RvciBjYW4gdXBkYXRlIGluamVjdG9yIGFkZHJlc3MKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNDkKCS8vIHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlID0gaW5qZWN0b3JBZGRyZXNzCglieXRlYyA5IC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJZnJhbWVfZGlnIC0xIC8vIGluamVjdG9yQWRkcmVzczogQWRkcmVzcwoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gdXBkYXRlTnVtU3Rha2Vycyh1aW50NjQpdm9pZAoqYWJpX3JvdXRlX3VwZGF0ZU51bVN0YWtlcnM6CgkvLyBudW1TdGFrZXJzOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIHVwZGF0ZU51bVN0YWtlcnModWludDY0KXZvaWQKCWNhbGxzdWIgdXBkYXRlTnVtU3Rha2VycwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gdXBkYXRlTnVtU3Rha2VycyhudW1TdGFrZXJzOiB1aW50NjQpOiB2b2lkCnVwZGF0ZU51bVN0YWtlcnM6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTUzCgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09PSB0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZSwgJ09ubHkgaW5qZWN0b3IgY2FuIHVwZGF0ZSBudW0gc3Rha2VycycpCgl0eG4gU2VuZGVyCglieXRlYyA5IC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBpbmplY3RvciBjYW4gdXBkYXRlIG51bSBzdGFrZXJzCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTU0CgkvLyB0aGlzLm51bVN0YWtlcnMudmFsdWUgPSBudW1TdGFrZXJzCglieXRlYyAzIC8vICAibnVtU3Rha2VycyIKCWZyYW1lX2RpZyAtMSAvLyBudW1TdGFrZXJzOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIHVwZGF0ZUZyZWV6ZShib29sKXZvaWQKKmFiaV9yb3V0ZV91cGRhdGVGcmVlemU6CgkvLyBmcmVlemU6IGJvb2wKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnRjIDEgLy8gMQoJPT0KCgkvLyBhcmd1bWVudCAwIChmcmVlemUpIGZvciB1cGRhdGVGcmVlemUgbXVzdCBiZSBhIGJvb2wKCWFzc2VydAoJaW50YyAwIC8vIDAKCWdldGJpdAoKCS8vIGV4ZWN1dGUgdXBkYXRlRnJlZXplKGJvb2wpdm9pZAoJY2FsbHN1YiB1cGRhdGVGcmVlemUKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHVwZGF0ZUZyZWV6ZShmcmVlemU6IGJvb2xlYW4pOiB2b2lkCnVwZGF0ZUZyZWV6ZToKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNTgKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlLCAnT25seSBpbmplY3RvciBjYW4gdXBkYXRlIGZyZWV6ZScpCgl0eG4gU2VuZGVyCglieXRlYyA5IC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBpbmplY3RvciBjYW4gdXBkYXRlIGZyZWV6ZQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE1OQoJLy8gdGhpcy5mcmVlemUudmFsdWUgPSBmcmVlemUKCWJ5dGVjIDE3IC8vICAiZnJlZXplIgoJZnJhbWVfZGlnIC0xIC8vIGZyZWV6ZTogYm9vbGVhbgoJYnl0ZWMgMTEgLy8gMHgwMAoJaW50YyAwIC8vIDAKCXVuY292ZXIgMgoJc2V0Yml0CglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyB1cGRhdGVQb29sRW5kaW5nKGJvb2wpdm9pZAoqYWJpX3JvdXRlX3VwZGF0ZVBvb2xFbmRpbmc6CgkvLyBwb29sRW5kaW5nOiBib29sCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50YyAxIC8vIDEKCT09CgoJLy8gYXJndW1lbnQgMCAocG9vbEVuZGluZykgZm9yIHVwZGF0ZVBvb2xFbmRpbmcgbXVzdCBiZSBhIGJvb2wKCWFzc2VydAoJaW50YyAwIC8vIDAKCWdldGJpdAoKCS8vIGV4ZWN1dGUgdXBkYXRlUG9vbEVuZGluZyhib29sKXZvaWQKCWNhbGxzdWIgdXBkYXRlUG9vbEVuZGluZwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gdXBkYXRlUG9vbEVuZGluZyhwb29sRW5kaW5nOiBib29sZWFuKTogdm9pZAp1cGRhdGVQb29sRW5kaW5nOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE2MwoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUsICdPbmx5IGFkbWlucyBjYW4gdXBkYXRlIHBvb2wgZW5kaW5nJykKCXR4biBTZW5kZXIKCWJ5dGVjIDcgLy8gICJhZG1pbkFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGFkbWlucyBjYW4gdXBkYXRlIHBvb2wgZW5kaW5nCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTY0CgkvLyB0aGlzLnBvb2xFbmRpbmcudmFsdWUgPSBwb29sRW5kaW5nCglieXRlYyAxNiAvLyAgInBvb2xFbmRpbmciCglmcmFtZV9kaWcgLTEgLy8gcG9vbEVuZGluZzogYm9vbGVhbgoJYnl0ZWMgMTEgLy8gMHgwMAoJaW50YyAwIC8vIDAKCXVuY292ZXIgMgoJc2V0Yml0CglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBjb3N0Rm9yQm94U3RvcmFnZSh0b3RhbE51bUJ5dGVzOiB1aW50NjQpOiB1aW50NjQKY29zdEZvckJveFN0b3JhZ2U6Cglwcm90byAxIDEKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTcxCgkvLyByZXR1cm4gU0NCT1hfUEVSQk9YICsgdG90YWxOdW1CeXRlcyAqIFNDQk9YX1BFUkJZVEU7CglwdXNoaW50IDI1MDAKCWZyYW1lX2RpZyAtMSAvLyB0b3RhbE51bUJ5dGVzOiB1aW50NjQKCXB1c2hpbnQgNDAwCgkqCgkrCglyZXRzdWIKCi8vIGdldE1CUkZvclBvb2xDcmVhdGlvbigpKHVpbnQ2NCkKKmFiaV9yb3V0ZV9nZXRNQlJGb3JQb29sQ3JlYXRpb246CgkvLyBUaGUgQUJJIHJldHVybiBwcmVmaXgKCXB1c2hieXRlcyAweDE1MWY3Yzc1CgoJLy8gZXhlY3V0ZSBnZXRNQlJGb3JQb29sQ3JlYXRpb24oKSh1aW50NjQpCgljYWxsc3ViIGdldE1CUkZvclBvb2xDcmVhdGlvbgoJY29uY2F0Cglsb2cKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIGdldE1CUkZvclBvb2xDcmVhdGlvbigpOiBtYnJSZXR1cm4KZ2V0TUJSRm9yUG9vbENyZWF0aW9uOgoJcHJvdG8gMCAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDEgLy8gMHgKCWR1cAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNzUKCS8vIG5vbkFsZ29SZXdhcmRNQlIgPSBBU1NFVF9IT0xESU5HX0ZFRQoJaW50YyA4IC8vIDEwMDAwMAoJZnJhbWVfYnVyeSAwIC8vIG5vbkFsZ29SZXdhcmRNQlI6IHVpbnQ2NAoKCS8vICppZjBfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTc2CgkvLyB0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUgIT09IDAKCWJ5dGVjIDQgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAwCgkhPQoJYnogKmlmMF9lbmQKCgkvLyAqaWYwX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNzcKCS8vIG5vbkFsZ29SZXdhcmRNQlIgKz0gQVNTRVRfSE9MRElOR19GRUUKCWZyYW1lX2RpZyAwIC8vIG5vbkFsZ29SZXdhcmRNQlI6IHVpbnQ2NAoJaW50YyA4IC8vIDEwMDAwMAoJKwoJZnJhbWVfYnVyeSAwIC8vIG5vbkFsZ29SZXdhcmRNQlI6IHVpbnQ2NAoKKmlmMF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTc5CgkvLyBtYnIgPQoJLy8gICAgICAgQUxHT1JBTkRfQUNDT1VOVF9NSU5fQkFMQU5DRSArCgkvLyAgICAgICBub25BbGdvUmV3YXJkTUJSICsKCS8vICAgICAgIHRoaXMuY29zdEZvckJveFN0b3JhZ2UoNyArIGxlbjxTdGFrZUluZm8+KCkgKiBNQVhfU1RBS0VSU19QRVJfUE9PTCkgKwoJLy8gICAgICAgdGhpcy5jb3N0Rm9yQm94U3RvcmFnZSg3ICsgbGVuPHVpbnQ2ND4oKSAqIDE1KQoJaW50YyA4IC8vIDEwMDAwMAoJZnJhbWVfZGlnIDAgLy8gbm9uQWxnb1Jld2FyZE1CUjogdWludDY0CgkrCglpbnRjIDEyIC8vIDI4MDA3CgljYWxsc3ViIGNvc3RGb3JCb3hTdG9yYWdlCgkrCglpbnRjIDEzIC8vIDEyNwoJY2FsbHN1YiBjb3N0Rm9yQm94U3RvcmFnZQoJKwoJZnJhbWVfYnVyeSAxIC8vIG1icjogdWludDY0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE4NQoJLy8gcmV0dXJuIHsKCS8vICAgICAgIG1iclBheW1lbnQ6IG1iciwKCS8vICAgICB9OwoJZnJhbWVfZGlnIDEgLy8gbWJyOiB1aW50NjQKCWl0b2IKCgkvLyBzZXQgdGhlIHN1YnJvdXRpbmUgcmV0dXJuIHZhbHVlCglmcmFtZV9idXJ5IDAKCgkvLyBwb3AgYWxsIGxvY2FsIHZhcmlhYmxlcyBmcm9tIHRoZSBzdGFjawoJcG9wbiAxCglyZXRzdWIKCi8vIGluaXRTdG9yYWdlKHBheSl2b2lkCiphYmlfcm91dGVfaW5pdFN0b3JhZ2U6CgkvLyBtYnJQYXltZW50OiBwYXkKCXR4biBHcm91cEluZGV4CglpbnRjIDEgLy8gMQoJLQoJZHVwCglndHhucyBUeXBlRW51bQoJaW50YyAxIC8vICBwYXkKCT09CgoJLy8gYXJndW1lbnQgMCAobWJyUGF5bWVudCkgZm9yIGluaXRTdG9yYWdlIG11c3QgYmUgYSBwYXkgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGV4ZWN1dGUgaW5pdFN0b3JhZ2UocGF5KXZvaWQKCWNhbGxzdWIgaW5pdFN0b3JhZ2UKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIGluaXRTdG9yYWdlKG1iclBheW1lbnQ6IFBheVR4bik6IHZvaWQKaW5pdFN0b3JhZ2U6Cglwcm90byAxIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgMSAvLyAweAoJZHVwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE5MQoJLy8gYXNzZXJ0KCF0aGlzLnN0YWtlcnMuZXhpc3RzLCAnc3Rha2luZyBwb29sIGFscmVhZHkgaW5pdGlhbGl6ZWQnKQoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCglib3hfbGVuCglzd2FwCglwb3AKCSEKCgkvLyBzdGFraW5nIHBvb2wgYWxyZWFkeSBpbml0aWFsaXplZAoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE5MgoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUsICdPbmx5IGFkbWluIGNhbiBpbml0IHN0b3JhZ2UnKQoJdHhuIFNlbmRlcgoJYnl0ZWMgNyAvLyAgImFkbWluQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIE9ubHkgYWRtaW4gY2FuIGluaXQgc3RvcmFnZQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE5NAoJLy8gbm9uQWxnb1Jld2FyZE1CUiA9IEFTU0VUX0hPTERJTkdfRkVFCglpbnRjIDggLy8gMTAwMDAwCglmcmFtZV9idXJ5IDAgLy8gbm9uQWxnb1Jld2FyZE1CUjogdWludDY0CgoJLy8gKmlmMV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxOTUKCS8vIHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSAhPT0gMAoJYnl0ZWMgNCAvLyAgInJld2FyZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAwIC8vIDAKCSE9CglieiAqaWYxX2VuZAoKCS8vICppZjFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE5NgoJLy8gbm9uQWxnb1Jld2FyZE1CUiArPSBBU1NFVF9IT0xESU5HX0ZFRQoJZnJhbWVfZGlnIDAgLy8gbm9uQWxnb1Jld2FyZE1CUjogdWludDY0CglpbnRjIDggLy8gMTAwMDAwCgkrCglmcmFtZV9idXJ5IDAgLy8gbm9uQWxnb1Jld2FyZE1CUjogdWludDY0CgoqaWYxX2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxOTgKCS8vIHBvb2xNQlIgPQoJLy8gICAgICAgQUxHT1JBTkRfQUNDT1VOVF9NSU5fQkFMQU5DRSArCgkvLyAgICAgICBub25BbGdvUmV3YXJkTUJSICsKCS8vICAgICAgIHRoaXMuY29zdEZvckJveFN0b3JhZ2UoNyArIGxlbjxTdGFrZUluZm8+KCkgKiBNQVhfU1RBS0VSU19QRVJfUE9PTCkgKwoJLy8gICAgICAgdGhpcy5jb3N0Rm9yQm94U3RvcmFnZSg3ICsgbGVuPHVpbnQ2ND4oKSAqIDE1KQoJaW50YyA4IC8vIDEwMDAwMAoJZnJhbWVfZGlnIDAgLy8gbm9uQWxnb1Jld2FyZE1CUjogdWludDY0CgkrCglpbnRjIDEyIC8vIDI4MDA3CgljYWxsc3ViIGNvc3RGb3JCb3hTdG9yYWdlCgkrCglpbnRjIDEzIC8vIDEyNwoJY2FsbHN1YiBjb3N0Rm9yQm94U3RvcmFnZQoJKwoJZnJhbWVfYnVyeSAxIC8vIHBvb2xNQlI6IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyMDUKCS8vIHZlcmlmeVBheVR4bihtYnJQYXltZW50LCB7IHJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzLCBhbW91bnQ6IHBvb2xNQlIgfSkKCS8vIHZlcmlmeSByZWNlaXZlcgoJZnJhbWVfZGlnIC0xIC8vIG1iclBheW1lbnQ6IFBheVR4bgoJZ3R4bnMgUmVjZWl2ZXIKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoibWJyUGF5bWVudCIsImZpZWxkIjoicmVjZWl2ZXIiLCJleHBlY3RlZCI6InRoaXMuYXBwLmFkZHJlc3MifQoJYXNzZXJ0CgoJLy8gdmVyaWZ5IGFtb3VudAoJZnJhbWVfZGlnIC0xIC8vIG1iclBheW1lbnQ6IFBheVR4bgoJZ3R4bnMgQW1vdW50CglmcmFtZV9kaWcgMSAvLyBwb29sTUJSOiB1aW50NjQKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJtYnJQYXltZW50IiwiZmllbGQiOiJhbW91bnQiLCJleHBlY3RlZCI6InBvb2xNQlIifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjIwNgoJLy8gdGhpcy5zdGFrZXJzLmNyZWF0ZSgpCglieXRlYyAyIC8vICAic3Rha2VycyIKCXB1c2hpbnQgMjgwMDAKCWJveF9jcmVhdGUKCXBvcAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyMDcKCS8vIHRoaXMubWluaW11bUJhbGFuY2UudmFsdWUgPSBwb29sTUJSCglwdXNoYnl0ZXMgMHg2ZDY5NmU2OTZkNzU2ZDQyNjE2YzYxNmU2MzY1IC8vICJtaW5pbXVtQmFsYW5jZSIKCWZyYW1lX2RpZyAxIC8vIHBvb2xNQlI6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCgkvLyAqaWYyX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjIwOQoJLy8gdGhpcy5yZXdhcmRBc3NldElkLnZhbHVlICE9PSAwCglieXRlYyA0IC8vICAicmV3YXJkQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJIT0KCWJ6ICppZjJfZW5kCgoJLy8gKmlmMl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjExCgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICAgIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSksCgkvLyAgICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICAgIGFzc2V0QW1vdW50OiAwLAoJLy8gICAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgNyAvLyAgYXhmZXIKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjEyCgkvLyB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUpCglieXRlYyA0IC8vICAicmV3YXJkQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyMTMKCS8vIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjE0CgkvLyBhc3NldEFtb3VudDogMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoqaWYyX2VuZDoKCXJldHN1YgoKLy8gaW5qZWN0UmV3YXJkcyhheGZlcix1aW50NjQsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9pbmplY3RSZXdhcmRzOgoJLy8gcmV3YXJkQXNzZXRJZDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgoJLy8gcXVhbnRpdHk6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIHJld2FyZFR4bjogYXhmZXIKCXR4biBHcm91cEluZGV4CglpbnRjIDEgLy8gMQoJLQoJZHVwCglndHhucyBUeXBlRW51bQoJaW50YyA3IC8vICBheGZlcgoJPT0KCgkvLyBhcmd1bWVudCAyIChyZXdhcmRUeG4pIGZvciBpbmplY3RSZXdhcmRzIG11c3QgYmUgYSBheGZlciB0cmFuc2FjdGlvbgoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBpbmplY3RSZXdhcmRzKGF4ZmVyLHVpbnQ2NCx1aW50NjQpdm9pZAoJY2FsbHN1YiBpbmplY3RSZXdhcmRzCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBpbmplY3RSZXdhcmRzKHJld2FyZFR4bjogQXNzZXRUcmFuc2ZlclR4biwgcXVhbnRpdHk6IHVpbnQ2NCwgcmV3YXJkQXNzZXRJZDogdWludDY0KTogdm9pZAppbmplY3RSZXdhcmRzOgoJcHJvdG8gMyAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDEgLy8gMHgKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjI0CgkvLyB2ZXJpZnlBc3NldFRyYW5zZmVyVHhuKHJld2FyZFR4biwgewoJLy8gICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSksCgkvLyAgICAgICBhc3NldEFtb3VudDogcXVhbnRpdHksCgkvLyAgICAgfSkKCS8vIHZlcmlmeSBhc3NldFJlY2VpdmVyCglmcmFtZV9kaWcgLTEgLy8gcmV3YXJkVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBBc3NldFJlY2VpdmVyCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InJld2FyZFR4biIsImZpZWxkIjoiYXNzZXRSZWNlaXZlciIsImV4cGVjdGVkIjoidGhpcy5hcHAuYWRkcmVzcyJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgeGZlckFzc2V0CglmcmFtZV9kaWcgLTEgLy8gcmV3YXJkVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBYZmVyQXNzZXQKCWJ5dGVjIDQgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJyZXdhcmRUeG4iLCJmaWVsZCI6InhmZXJBc3NldCIsImV4cGVjdGVkIjoiQXNzZXRJRC5mcm9tVWludDY0KHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSkifQoJYXNzZXJ0CgoJLy8gdmVyaWZ5IGFzc2V0QW1vdW50CglmcmFtZV9kaWcgLTEgLy8gcmV3YXJkVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBBc3NldEFtb3VudAoJZnJhbWVfZGlnIC0yIC8vIHF1YW50aXR5OiB1aW50NjQKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJyZXdhcmRUeG4iLCJmaWVsZCI6ImFzc2V0QW1vdW50IiwiZXhwZWN0ZWQiOiJxdWFudGl0eSJ9Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjMxCgkvLyBwbGF0Zm9ybUZlZSA9IHdpZGVSYXRpbyhbcXVhbnRpdHksIHRoaXMucGxhdGZvcm1GZWVCcHMudmFsdWVdLCBbMTAwMDBdKQoJZnJhbWVfZGlnIC0yIC8vIHF1YW50aXR5OiB1aW50NjQKCWJ5dGVjIDIwIC8vICAicGxhdGZvcm1GZWVCcHMiCglhcHBfZ2xvYmFsX2dldAoJbXVsdwoJaW50YyAwIC8vIDAKCWludGMgMTEgLy8gMTAwMDAKCWRpdm1vZHcKCXBvcAoJcG9wCglzd2FwCgkhCgoJLy8gd2lkZVJhdGlvIGZhaWxlZAoJYXNzZXJ0CglmcmFtZV9idXJ5IDAgLy8gcGxhdGZvcm1GZWU6IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyMzMKCS8vIHRoaXMuaW5qZWN0ZWRBU0FSZXdhcmRzLnZhbHVlID0gdGhpcy5pbmplY3RlZEFTQVJld2FyZHMudmFsdWUgKyBxdWFudGl0eSAtIHBsYXRmb3JtRmVlCglieXRlYyA4IC8vICAiaW5qZWN0ZWRBU0FSZXdhcmRzIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIC0yIC8vIHF1YW50aXR5OiB1aW50NjQKCSsKCWZyYW1lX2RpZyAwIC8vIHBsYXRmb3JtRmVlOiB1aW50NjQKCS0KCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjIzNAoJLy8gdGhpcy5sYXN0SW5qZWN0aW9uVGltZS52YWx1ZSA9IGdsb2JhbHMubGF0ZXN0VGltZXN0YW1wCglieXRlYyAxOCAvLyAgImxhc3RJbmplY3Rpb25UaW1lIgoJZ2xvYmFsIExhdGVzdFRpbWVzdGFtcAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjM1CgkvLyB0aGlzLnNlbmRQbGF0Zm9ybUZlZXMocGxhdGZvcm1GZWUpCglmcmFtZV9kaWcgMCAvLyBwbGF0Zm9ybUZlZTogdWludDY0CgljYWxsc3ViIHNlbmRQbGF0Zm9ybUZlZXMKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjM2CgkvLyB0aGlzLmFjY3J1ZVJld2FyZHMoKQoJY2FsbHN1YiBhY2NydWVSZXdhcmRzCglyZXRzdWIKCi8vIHNlbmRQbGF0Zm9ybUZlZXMocGxhdGZvcm1GZWU6IHVpbnQ2NCk6IHZvaWQKc2VuZFBsYXRmb3JtRmVlczoKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNDAKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgIGFzc2V0QW1vdW50OiBwbGF0Zm9ybUZlZSwKCS8vICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHJlYXN1cnlBZGRyZXNzLnZhbHVlLAoJLy8gICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5yZXdhcmRBc3NldElkLnZhbHVlKSwKCS8vICAgICAgIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgIGZlZTogMCwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50YyA3IC8vICBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNDEKCS8vIGFzc2V0QW1vdW50OiBwbGF0Zm9ybUZlZQoJZnJhbWVfZGlnIC0xIC8vIHBsYXRmb3JtRmVlOiB1aW50NjQKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjQyCgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLnRyZWFzdXJ5QWRkcmVzcy52YWx1ZQoJYnl0ZWMgMTkgLy8gICJ0cmVhc3VyeUFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI0MwoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5yZXdhcmRBc3NldElkLnZhbHVlKQoJYnl0ZWMgNCAvLyAgInJld2FyZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjQ0CgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNDUKCS8vIGZlZTogMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNDcKCS8vIHRoaXMucGFpZFBsYXRmb3JtRmVlcy52YWx1ZSA9IHRoaXMucGFpZFBsYXRmb3JtRmVlcy52YWx1ZSArIHBsYXRmb3JtRmVlCglieXRlYyAyMSAvLyAgInBhaWRQbGF0Zm9ybUZlZXMiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgLTEgLy8gcGxhdGZvcm1GZWU6IHVpbnQ2NAoJKwoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gcGlja3VwUmV3YXJkcygpOiB2b2lkCnBpY2t1cFJld2FyZHM6Cglwcm90byAwIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgMSAvLyAweAoJZHVwbiAzCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI1MQoJLy8gYXBwQXNzZXRCYWxhbmNlID0gdGhpcy5hcHAuYWRkcmVzcy5hc3NldEJhbGFuY2UodGhpcy5yZXdhcmRBc3NldElkLnZhbHVlKQoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWJ5dGVjIDQgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQoJcG9wCglmcmFtZV9idXJ5IDAgLy8gYXBwQXNzZXRCYWxhbmNlOiB1aW50NjQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjUyCgkvLyBzdGFrZVRva2VuQW1vdW50ID0gMAoJaW50YyAwIC8vIDAKCWZyYW1lX2J1cnkgMSAvLyBzdGFrZVRva2VuQW1vdW50OiB1aW50NjQKCgkvLyAqaWYzX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI1MwoJLy8gdGhpcy5yZXdhcmRBc3NldElkLnZhbHVlID09PSB0aGlzLnN0YWtlZEFzc2V0SWQudmFsdWUKCWJ5dGVjIDQgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDE0IC8vICAic3Rha2VkQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoJYnogKmlmM19lbmQKCgkvLyAqaWYzX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNTQKCS8vIHN0YWtlVG9rZW5BbW91bnQgPSB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlCglieXRlYyA1IC8vICAidG90YWxTdGFrZWQiCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfYnVyeSAxIC8vIHN0YWtlVG9rZW5BbW91bnQ6IHVpbnQ2NAoKKmlmM19lbmQ6CgkvLyAqaWY0X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI1NwoJLy8gYXBwQXNzZXRCYWxhbmNlID4gdGhpcy5wYWlkQVNBUmV3YXJkcy52YWx1ZSArIHRoaXMuaW5qZWN0ZWRBU0FSZXdhcmRzLnZhbHVlICsgc3Rha2VUb2tlbkFtb3VudAoJZnJhbWVfZGlnIDAgLy8gYXBwQXNzZXRCYWxhbmNlOiB1aW50NjQKCWJ5dGVjIDEyIC8vICAicGFpZEFTQVJld2FyZHMiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgOCAvLyAgImluamVjdGVkQVNBUmV3YXJkcyIKCWFwcF9nbG9iYWxfZ2V0CgkrCglmcmFtZV9kaWcgMSAvLyBzdGFrZVRva2VuQW1vdW50OiB1aW50NjQKCSsKCT4KCWJ6ICppZjRfZW5kCgoJLy8gKmlmNF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjU4CgkvLyBhbW91bnQgPSBhcHBBc3NldEJhbGFuY2UgLSB0aGlzLnBhaWRBU0FSZXdhcmRzLnZhbHVlIC0gc3Rha2VUb2tlbkFtb3VudCAtIHRoaXMuaW5qZWN0ZWRBU0FSZXdhcmRzLnZhbHVlCglmcmFtZV9kaWcgMCAvLyBhcHBBc3NldEJhbGFuY2U6IHVpbnQ2NAoJYnl0ZWMgMTIgLy8gICJwYWlkQVNBUmV3YXJkcyIKCWFwcF9nbG9iYWxfZ2V0CgktCglmcmFtZV9kaWcgMSAvLyBzdGFrZVRva2VuQW1vdW50OiB1aW50NjQKCS0KCWJ5dGVjIDggLy8gICJpbmplY3RlZEFTQVJld2FyZHMiCglhcHBfZ2xvYmFsX2dldAoJLQoJZnJhbWVfYnVyeSAyIC8vIGFtb3VudDogdWludDY0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI2MAoJLy8gcGxhdGZvcm1GZWUgPSB3aWRlUmF0aW8oW2Ftb3VudCwgdGhpcy5wbGF0Zm9ybUZlZUJwcy52YWx1ZV0sIFsxMDAwMF0pCglmcmFtZV9kaWcgMiAvLyBhbW91bnQ6IHVpbnQ2NAoJYnl0ZWMgMjAgLy8gICJwbGF0Zm9ybUZlZUJwcyIKCWFwcF9nbG9iYWxfZ2V0CgltdWx3CglpbnRjIDAgLy8gMAoJaW50YyAxMSAvLyAxMDAwMAoJZGl2bW9kdwoJcG9wCglwb3AKCXN3YXAKCSEKCgkvLyB3aWRlUmF0aW8gZmFpbGVkCglhc3NlcnQKCWZyYW1lX2J1cnkgMyAvLyBwbGF0Zm9ybUZlZTogdWludDY0CgoJLy8gKmlmNV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNjIKCS8vIGFtb3VudCA+IHRoaXMubnVtU3Rha2Vycy52YWx1ZQoJZnJhbWVfZGlnIDIgLy8gYW1vdW50OiB1aW50NjQKCWJ5dGVjIDMgLy8gICJudW1TdGFrZXJzIgoJYXBwX2dsb2JhbF9nZXQKCT4KCWJ6ICppZjVfZW5kCgoJLy8gKmlmNV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjYzCgkvLyB0aGlzLmluamVjdGVkQVNBUmV3YXJkcy52YWx1ZSA9IHRoaXMuaW5qZWN0ZWRBU0FSZXdhcmRzLnZhbHVlICsgYW1vdW50IC0gcGxhdGZvcm1GZWUKCWJ5dGVjIDggLy8gICJpbmplY3RlZEFTQVJld2FyZHMiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMiAvLyBhbW91bnQ6IHVpbnQ2NAoJKwoJZnJhbWVfZGlnIDMgLy8gcGxhdGZvcm1GZWU6IHVpbnQ2NAoJLQoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjY0CgkvLyB0aGlzLnNlbmRQbGF0Zm9ybUZlZXMocGxhdGZvcm1GZWUpCglmcmFtZV9kaWcgMyAvLyBwbGF0Zm9ybUZlZTogdWludDY0CgljYWxsc3ViIHNlbmRQbGF0Zm9ybUZlZXMKCippZjVfZW5kOgoKKmlmNF9lbmQ6CglyZXRzdWIKCi8vIGluamVjdHhVU0QoYXhmZXIsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9pbmplY3R4VVNEOgoJLy8gcXVhbnRpdHk6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIHhVU0RUeG46IGF4ZmVyCgl0eG4gR3JvdXBJbmRleAoJaW50YyAxIC8vIDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgNyAvLyAgYXhmZXIKCT09CgoJLy8gYXJndW1lbnQgMSAoeFVTRFR4bikgZm9yIGluamVjdHhVU0QgbXVzdCBiZSBhIGF4ZmVyIHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyBleGVjdXRlIGluamVjdHhVU0QoYXhmZXIsdWludDY0KXZvaWQKCWNhbGxzdWIgaW5qZWN0eFVTRAoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gaW5qZWN0eFVTRCh4VVNEVHhuOiBBc3NldFRyYW5zZmVyVHhuLCBxdWFudGl0eTogdWludDY0KTogdm9pZAppbmplY3R4VVNEOgoJcHJvdG8gMiAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI3MAoJLy8gdmVyaWZ5QXNzZXRUcmFuc2ZlclR4bih4VVNEVHhuLCB7CgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSksCgkvLyAgICAgICBhc3NldEFtb3VudDogcXVhbnRpdHksCgkvLyAgICAgfSkKCS8vIHZlcmlmeSBhc3NldFJlY2VpdmVyCglmcmFtZV9kaWcgLTEgLy8geFVTRFR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgQXNzZXRSZWNlaXZlcgoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJ4VVNEVHhuIiwiZmllbGQiOiJhc3NldFJlY2VpdmVyIiwiZXhwZWN0ZWQiOiJ0aGlzLmFwcC5hZGRyZXNzIn0KCWFzc2VydAoKCS8vIHZlcmlmeSB4ZmVyQXNzZXQKCWZyYW1lX2RpZyAtMSAvLyB4VVNEVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBYZmVyQXNzZXQKCWJ5dGVjIDEzIC8vICAieFVTREFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InhVU0RUeG4iLCJmaWVsZCI6InhmZXJBc3NldCIsImV4cGVjdGVkIjoiQXNzZXRJRC5mcm9tVWludDY0KHRoaXMueFVTREFzc2V0SWQudmFsdWUpIn0KCWFzc2VydAoKCS8vIHZlcmlmeSBhc3NldEFtb3VudAoJZnJhbWVfZGlnIC0xIC8vIHhVU0RUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIEFzc2V0QW1vdW50CglmcmFtZV9kaWcgLTIgLy8gcXVhbnRpdHk6IHVpbnQ2NAoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InhVU0RUeG4iLCJmaWVsZCI6ImFzc2V0QW1vdW50IiwiZXhwZWN0ZWQiOiJxdWFudGl0eSJ9Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mjc1CgkvLyB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgPSB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgKyBxdWFudGl0eQoJYnl0ZWMgMTAgLy8gICJpbmplY3RlZHhVU0RSZXdhcmRzIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIC0yIC8vIHF1YW50aXR5OiB1aW50NjQKCSsKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI3NgoJLy8gdGhpcy5sYXN0SW5qZWN0aW9uVGltZS52YWx1ZSA9IGdsb2JhbHMubGF0ZXN0VGltZXN0YW1wCglieXRlYyAxOCAvLyAgImxhc3RJbmplY3Rpb25UaW1lIgoJZ2xvYmFsIExhdGVzdFRpbWVzdGFtcAoJYXBwX2dsb2JhbF9wdXQKCgkvLyAqaWY2X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI3NwoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjZfZW5kCgoJLy8gKmlmNl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mjc4CgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWY2X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyODAKCS8vIHRoaXMucGlja3VwUmV3YXJkcygpCgljYWxsc3ViIHBpY2t1cFJld2FyZHMKCgkvLyAqaWY3X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI4MQoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjdfZW5kCgoJLy8gKmlmN19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjgyCgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWY3X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyODQKCS8vIHRoaXMuYWNjcnVlUmV3YXJkcygpCgljYWxsc3ViIGFjY3J1ZVJld2FyZHMKCXJldHN1YgoKLy8gZGVsZXRlQXBwbGljYXRpb24oKXZvaWQKKmFiaV9yb3V0ZV9kZWxldGVBcHBsaWNhdGlvbjoKCS8vIGV4ZWN1dGUgZGVsZXRlQXBwbGljYXRpb24oKXZvaWQKCWNhbGxzdWIgZGVsZXRlQXBwbGljYXRpb24KCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIGRlbGV0ZUFwcGxpY2F0aW9uKCk6IHZvaWQKZGVsZXRlQXBwbGljYXRpb246Cglwcm90byAwIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgMSAvLyAweAoJZHVwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI4OAoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUsICdPbmx5IGFkbWluIGNhbiBkZWxldGUgYXBwbGljYXRpb24nKQoJdHhuIFNlbmRlcgoJYnl0ZWMgNyAvLyAgImFkbWluQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIE9ubHkgYWRtaW4gY2FuIGRlbGV0ZSBhcHBsaWNhdGlvbgoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI4OQoJLy8gYXNzZXJ0KHRoaXMudG90YWxTdGFrZWQudmFsdWUgPT09IDAsICdTdGFrZWQgYXNzZXRzIHN0aWxsIGV4aXN0JykKCWJ5dGVjIDUgLy8gICJ0b3RhbFN0YWtlZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJPT0KCgkvLyBTdGFrZWQgYXNzZXRzIHN0aWxsIGV4aXN0Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjkxCgkvLyB0aGlzLnN0YWtlcnMuZGVsZXRlKCkKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJYm94X2RlbAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyOTIKCS8vIHJld2FyZEJhbGFuY2UgPSB0aGlzLmFwcC5hZGRyZXNzLmFzc2V0QmFsYW5jZSh0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUpCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJYnl0ZWMgNCAvLyAgInJld2FyZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglwb3AKCWZyYW1lX2J1cnkgMCAvLyByZXdhcmRCYWxhbmNlOiB1aW50NjQKCgkvLyAqaWY4X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI5MwoJLy8gcmV3YXJkQmFsYW5jZSA+IDAKCWZyYW1lX2RpZyAwIC8vIHJld2FyZEJhbGFuY2U6IHVpbnQ2NAoJaW50YyAwIC8vIDAKCT4KCWJ6ICppZjhfZW5kCgoJLy8gKmlmOF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mjk0CgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICAgIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSksCgkvLyAgICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYWRtaW5BZGRyZXNzLnZhbHVlLAoJLy8gICAgICAgICBhc3NldEFtb3VudDogcmV3YXJkQmFsYW5jZSwKCS8vICAgICAgICAgYXNzZXRDbG9zZVRvOiB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZSwKCS8vICAgICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDcgLy8gIGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI5NQoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5yZXdhcmRBc3NldElkLnZhbHVlKQoJYnl0ZWMgNCAvLyAgInJld2FyZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mjk2CgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZQoJYnl0ZWMgNyAvLyAgImFkbWluQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mjk3CgkvLyBhc3NldEFtb3VudDogcmV3YXJkQmFsYW5jZQoJZnJhbWVfZGlnIDAgLy8gcmV3YXJkQmFsYW5jZTogdWludDY0CglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI5OAoJLy8gYXNzZXRDbG9zZVRvOiB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZQoJYnl0ZWMgNyAvLyAgImFkbWluQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIEFzc2V0Q2xvc2VUbwoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCippZjhfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMwMQoJLy8gcGF5bWVudEFtb3VudCA9IHRoaXMuYXBwLmFkZHJlc3MuYmFsYW5jZSAtIHRoaXMuYXBwLmFkZHJlc3MubWluQmFsYW5jZSAtIDIwMDAKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdEJhbGFuY2UKCXBvcAoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWFjY3RfcGFyYW1zX2dldCBBY2N0TWluQmFsYW5jZQoJcG9wCgktCglpbnRjIDEwIC8vIDIwMDAKCS0KCWZyYW1lX2J1cnkgMSAvLyBwYXltZW50QW1vdW50OiB1aW50NjQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzAzCgkvLyBzZW5kUGF5bWVudCh7CgkvLyAgICAgICBhbW91bnQ6IHBheW1lbnRBbW91bnQsCgkvLyAgICAgICByZWNlaXZlcjogdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUsCgkvLyAgICAgICBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICBmZWU6IDFfMDAwLAoJLy8gICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDEgLy8gIHBheQoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMDQKCS8vIGFtb3VudDogcGF5bWVudEFtb3VudAoJZnJhbWVfZGlnIDEgLy8gcGF5bWVudEFtb3VudDogdWludDY0CglpdHhuX2ZpZWxkIEFtb3VudAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMDUKCS8vIHJlY2VpdmVyOiB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZQoJYnl0ZWMgNyAvLyAgImFkbWluQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMwNgoJLy8gc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBTZW5kZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzA3CgkvLyBmZWU6IDFfMDAwCglwdXNoaW50IDFfMDAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCXJldHN1YgoKLy8gc3Rha2UoYXhmZXIsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9zdGFrZToKCS8vIHF1YW50aXR5OiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBzdGFrZVR4bjogYXhmZXIKCXR4biBHcm91cEluZGV4CglpbnRjIDEgLy8gMQoJLQoJZHVwCglndHhucyBUeXBlRW51bQoJaW50YyA3IC8vICBheGZlcgoJPT0KCgkvLyBhcmd1bWVudCAxIChzdGFrZVR4bikgZm9yIHN0YWtlIG11c3QgYmUgYSBheGZlciB0cmFuc2FjdGlvbgoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBzdGFrZShheGZlcix1aW50NjQpdm9pZAoJY2FsbHN1YiBzdGFrZQoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gc3Rha2Uoc3Rha2VUeG46IEFzc2V0VHJhbnNmZXJUeG4sIHF1YW50aXR5OiB1aW50NjQpOiB2b2lkCnN0YWtlOgoJcHJvdG8gMiAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDEgLy8gMHgKCWR1cG4gMgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMTIKCS8vIGFzc2VydChxdWFudGl0eSA+IDAsICdJbnZhbGlkIHF1YW50aXR5JykKCWZyYW1lX2RpZyAtMiAvLyBxdWFudGl0eTogdWludDY0CglpbnRjIDAgLy8gMAoJPgoKCS8vIEludmFsaWQgcXVhbnRpdHkKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMTMKCS8vIGFzc2VydCh0aGlzLnBvb2xBY3RpdmUudmFsdWUsICdQb29sIG5vdCBhY3RpdmUnKQoJYnl0ZWMgMTUgLy8gICJwb29sQWN0aXZlIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAwCglnZXRiaXQKCgkvLyBQb29sIG5vdCBhY3RpdmUKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMTQKCS8vIGFzc2VydCghdGhpcy5wb29sRW5kaW5nLnZhbHVlLCAnUG9vbCBlbmRpbmcnKQoJYnl0ZWMgMTYgLy8gICJwb29sRW5kaW5nIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAwCglnZXRiaXQKCSEKCgkvLyBQb29sIGVuZGluZwoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMxNgoJLy8gdGhpcy5waWNrdXBSZXdhcmRzKCkKCWNhbGxzdWIgcGlja3VwUmV3YXJkcwoKCS8vICppZjlfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzE3CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmOV9lbmQKCgkvLyAqaWY5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMTgKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjlfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMyMAoJLy8gdGhpcy5hY2NydWVSZXdhcmRzKCkKCWNhbGxzdWIgYWNjcnVlUmV3YXJkcwoKCS8vICppZjEwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMyMgoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjEwX2VuZAoKCS8vICppZjEwX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMjMKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjEwX2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMjUKCS8vIHZlcmlmeUFzc2V0VHJhbnNmZXJUeG4oc3Rha2VUeG4sIHsKCS8vICAgICAgIHNlbmRlcjogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMuc3Rha2VkQXNzZXRJZC52YWx1ZSksCgkvLyAgICAgICBhc3NldEFtb3VudDogcXVhbnRpdHksCgkvLyAgICAgfSkKCS8vIHZlcmlmeSBzZW5kZXIKCWZyYW1lX2RpZyAtMSAvLyBzdGFrZVR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgU2VuZGVyCgl0eG4gU2VuZGVyCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoic3Rha2VUeG4iLCJmaWVsZCI6InNlbmRlciIsImV4cGVjdGVkIjoidGhpcy50eG4uc2VuZGVyIn0KCWFzc2VydAoKCS8vIHZlcmlmeSBhc3NldFJlY2VpdmVyCglmcmFtZV9kaWcgLTEgLy8gc3Rha2VUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIEFzc2V0UmVjZWl2ZXIKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoic3Rha2VUeG4iLCJmaWVsZCI6ImFzc2V0UmVjZWl2ZXIiLCJleHBlY3RlZCI6InRoaXMuYXBwLmFkZHJlc3MifQoJYXNzZXJ0CgoJLy8gdmVyaWZ5IHhmZXJBc3NldAoJZnJhbWVfZGlnIC0xIC8vIHN0YWtlVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBYZmVyQXNzZXQKCWJ5dGVjIDE0IC8vICAic3Rha2VkQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoic3Rha2VUeG4iLCJmaWVsZCI6InhmZXJBc3NldCIsImV4cGVjdGVkIjoiQXNzZXRJRC5mcm9tVWludDY0KHRoaXMuc3Rha2VkQXNzZXRJZC52YWx1ZSkifQoJYXNzZXJ0CgoJLy8gdmVyaWZ5IGFzc2V0QW1vdW50CglmcmFtZV9kaWcgLTEgLy8gc3Rha2VUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIEFzc2V0QW1vdW50CglmcmFtZV9kaWcgLTIgLy8gcXVhbnRpdHk6IHVpbnQ2NAoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InN0YWtlVHhuIiwiZmllbGQiOiJhc3NldEFtb3VudCIsImV4cGVjdGVkIjoicXVhbnRpdHkifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMzMQoJLy8gYWN0aW9uQ29tcGxldGU6IGJvb2xlYW4gPSBmYWxzZQoJaW50YyAwIC8vIDAKCWZyYW1lX2J1cnkgMCAvLyBhY3Rpb25Db21wbGV0ZTogYm9vbGVhbgoKCS8vICppZjExX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMzMgoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjExX2VuZAoKCS8vICppZjExX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMzMKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjExX2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMzUKCS8vIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zdGFrZXJzLnZhbHVlLmxlbmd0aDsgaSArPSAxKQoJaW50YyAwIC8vIDAKCWZyYW1lX2J1cnkgMSAvLyBpOiB1aW50NjQKCipmb3JfMDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMzUKCS8vIGkgPCB0aGlzLnN0YWtlcnMudmFsdWUubGVuZ3RoCglmcmFtZV9kaWcgMSAvLyBpOiB1aW50NjQKCXB1c2hpbnQgNTAwCgk8CglieiAqZm9yXzBfZW5kCgoJLy8gKmlmMTJfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzM2CgkvLyBhY3Rpb25Db21wbGV0ZQoJZnJhbWVfZGlnIDAgLy8gYWN0aW9uQ29tcGxldGU6IGJvb2xlYW4KCWJ6ICppZjEyX2VuZAoKCS8vICppZjEyX2NvbnNlcXVlbnQKCWIgKmZvcl8wX2VuZAoKKmlmMTJfZW5kOgoJLy8gKmlmMTNfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzM4CgkvLyB0aGlzLnN0YWtlcnMudmFsdWVbaV0uYWNjb3VudCA9PT0gdGhpcy50eG4uc2VuZGVyCglmcmFtZV9kaWcgMSAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglpbnRjIDAgLy8gMAoJKwoJaW50YyA2IC8vIDMyCglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9leHRyYWN0Cgl0eG4gU2VuZGVyCgk9PQoJYnogKmlmMTNfZWxzZWlmMV9jb25kaXRpb24KCgkvLyAqaWYxM19jb25zZXF1ZW50CgkvLyAqaWYxNF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNDEKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWYxNF9lbmQKCgkvLyAqaWYxNF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzQyCgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWYxNF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzQ1CgkvLyBzdGFrZXIgPSBjbG9uZSh0aGlzLnN0YWtlcnMudmFsdWVbaV0pCglmcmFtZV9kaWcgMSAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglpbnRjIDUgLy8gNTYKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWZyYW1lX2J1cnkgMiAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNDYKCS8vIHN0YWtlci5zdGFrZSArPSBzdGFrZVR4bi5hc3NldEFtb3VudAoJZnJhbWVfZGlnIDIgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWludGMgNiAvLyAgaGVhZE9mZnNldAoJZnJhbWVfZGlnIDIgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgMzIgOAoJYnRvaQoJZnJhbWVfZGlnIC0xIC8vIHN0YWtlVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBBc3NldEFtb3VudAoJKwoJaXRvYgoJcmVwbGFjZTMKCWZyYW1lX2J1cnkgMiAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKCS8vICppZjE1X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM0OAoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjE1X2VuZAoKCS8vICppZjE1X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNDkKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjE1X2VuZDoKCS8vICppZjE2X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM1MQoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjE2X2VuZAoKCS8vICppZjE2X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNTIKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjE2X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNTQKCS8vIHRoaXMuc3Rha2Vycy52YWx1ZVtpXSA9IHN0YWtlcgoJZnJhbWVfZGlnIDEgLy8gaTogdWludDY0CglpbnRjIDUgLy8gNTYKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJZnJhbWVfZGlnIDIgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X3JlcGxhY2UKCgkvLyAqaWYxN19jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNTUKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWYxN19lbmQKCgkvLyAqaWYxN19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzU2CgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWYxN19lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzU4CgkvLyB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlICs9IHN0YWtlVHhuLmFzc2V0QW1vdW50CglieXRlYyA1IC8vICAidG90YWxTdGFrZWQiCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIC0xIC8vIHN0YWtlVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBBc3NldEFtb3VudAoJKwoJYnl0ZWMgNSAvLyAgInRvdGFsU3Rha2VkIgoJc3dhcAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzU5CgkvLyBhY3Rpb25Db21wbGV0ZSA9IHRydWUKCWludGMgMSAvLyAxCglmcmFtZV9idXJ5IDAgLy8gYWN0aW9uQ29tcGxldGU6IGJvb2xlYW4KCWIgKmlmMTNfZW5kCgoqaWYxM19lbHNlaWYxX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNjAKCS8vIHRoaXMuc3Rha2Vycy52YWx1ZVtpXS5hY2NvdW50ID09PSBnbG9iYWxzLnplcm9BZGRyZXNzCglmcmFtZV9kaWcgMSAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglpbnRjIDAgLy8gMAoJKwoJaW50YyA2IC8vIDMyCglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9leHRyYWN0CglnbG9iYWwgWmVyb0FkZHJlc3MKCT09CglieiAqaWYxM19lbmQKCgkvLyAqaWYxM19lbHNlaWYxX2NvbnNlcXVlbnQKCS8vICppZjE4X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM2MQoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjE4X2VuZAoKCS8vICppZjE4X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNjIKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjE4X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNjQKCS8vIHRoaXMudG90YWxTdGFrZWQudmFsdWUgPSB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlICsgc3Rha2VUeG4uYXNzZXRBbW91bnQKCWJ5dGVjIDUgLy8gICJ0b3RhbFN0YWtlZCIKCWR1cAoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAtMSAvLyBzdGFrZVR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgQXNzZXRBbW91bnQKCSsKCWFwcF9nbG9iYWxfcHV0CgoJLy8gKmlmMTlfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzY1CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMTlfZW5kCgoJLy8gKmlmMTlfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM2NgoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMTlfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM2OAoJLy8gdGhpcy5zdGFrZXJzLnZhbHVlW2ldID0gewoJLy8gICAgICAgICAgIGFjY291bnQ6IHRoaXMudHhuLnNlbmRlciwKCS8vICAgICAgICAgICBzdGFrZTogc3Rha2VUeG4uYXNzZXRBbW91bnQsCgkvLyAgICAgICAgICAgYWNjcnVlZEFTQVJld2FyZHM6IDAsCgkvLyAgICAgICAgICAgYWNjcnVlZHhVU0RSZXdhcmRzOiAwLAoJLy8gICAgICAgICB9CglmcmFtZV9kaWcgMSAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCgl0eG4gU2VuZGVyCglmcmFtZV9kaWcgLTEgLy8gc3Rha2VUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIEFzc2V0QW1vdW50CglpdG9iCgljb25jYXQKCWJ5dGVjIDYgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCgljb25jYXQKCWJ5dGVjIDYgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCgljb25jYXQKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X3JlcGxhY2UKCgkvLyAqaWYyMF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNzQKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWYyMF9lbmQKCgkvLyAqaWYyMF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mzc1CgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWYyMF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mzc3CgkvLyB0aGlzLm51bVN0YWtlcnMudmFsdWUgPSB0aGlzLm51bVN0YWtlcnMudmFsdWUgKyAxCglieXRlYyAzIC8vICAibnVtU3Rha2VycyIKCWR1cAoJYXBwX2dsb2JhbF9nZXQKCWludGMgMSAvLyAxCgkrCglhcHBfZ2xvYmFsX3B1dAoKCS8vICppZjIxX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM3OAoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjIxX2VuZAoKCS8vICppZjIxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNzkKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjIxX2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozODEKCS8vIGFjdGlvbkNvbXBsZXRlID0gdHJ1ZQoJaW50YyAxIC8vIDEKCWZyYW1lX2J1cnkgMCAvLyBhY3Rpb25Db21wbGV0ZTogYm9vbGVhbgoKKmlmMTNfZW5kOgoJLy8gKmlmMjJfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mzg0CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMjJfZW5kCgoJLy8gKmlmMjJfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM4NQoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMjJfZW5kOgoKKmZvcl8wX2NvbnRpbnVlOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMzNQoJLy8gaSArPSAxCglmcmFtZV9kaWcgMSAvLyBpOiB1aW50NjQKCWludGMgMSAvLyAxCgkrCglmcmFtZV9idXJ5IDEgLy8gaTogdWludDY0CgliICpmb3JfMAoKKmZvcl8wX2VuZDoKCXJldHN1YgoKLy8gYWNjcnVlUmV3YXJkcygpdm9pZAoqYWJpX3JvdXRlX2FjY3J1ZVJld2FyZHM6CgkvLyBleGVjdXRlIGFjY3J1ZVJld2FyZHMoKXZvaWQKCWNhbGxzdWIgYWNjcnVlUmV3YXJkcwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gYWNjcnVlUmV3YXJkcygpOiB2b2lkCmFjY3J1ZVJld2FyZHM6Cglwcm90byAwIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgMSAvLyAweAoJZHVwbiA3CgoJLy8gKmlmMjNfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzkxCgkvLyAhdGhpcy5mcmVlemUudmFsdWUgJiYgIXRoaXMucG9vbEVuZGluZy52YWx1ZSAmJiB0aGlzLnBvb2xBY3RpdmUudmFsdWUKCWJ5dGVjIDE3IC8vICAiZnJlZXplIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAwCglnZXRiaXQKCSEKCWR1cAoJYnogKnNraXBfYW5kMAoJYnl0ZWMgMTYgLy8gICJwb29sRW5kaW5nIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAwCglnZXRiaXQKCSEKCSYmCgoqc2tpcF9hbmQwOgoJZHVwCglieiAqc2tpcF9hbmQxCglieXRlYyAxNSAvLyAgInBvb2xBY3RpdmUiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAwIC8vIDAKCWdldGJpdAoJJiYKCipza2lwX2FuZDE6CglieiAqaWYyM19lbmQKCgkvLyAqaWYyM19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzkyCgkvLyBhZGRpdGlvbmFsQVNBUmV3YXJkcyA9IHRoaXMuaW5qZWN0ZWRBU0FSZXdhcmRzLnZhbHVlCglieXRlYyA4IC8vICAiaW5qZWN0ZWRBU0FSZXdhcmRzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2J1cnkgMCAvLyBhZGRpdGlvbmFsQVNBUmV3YXJkczogdWludDY0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM5MwoJLy8geFVTRFJld2FyZHMgPSB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUKCWJ5dGVjIDEwIC8vICAiaW5qZWN0ZWR4VVNEUmV3YXJkcyIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9idXJ5IDEgLy8geFVTRFJld2FyZHM6IHVpbnQ2NAoKCS8vICppZjI0X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM5NQoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjI0X2VuZAoKCS8vICppZjI0X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozOTYKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjI0X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozOTkKCS8vIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5udW1TdGFrZXJzLnZhbHVlOyBpICs9IDEpCglpbnRjIDAgLy8gMAoJZnJhbWVfYnVyeSAyIC8vIGk6IHVpbnQ2NAoKKmZvcl8xOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM5OQoJLy8gaSA8IHRoaXMubnVtU3Rha2Vycy52YWx1ZQoJZnJhbWVfZGlnIDIgLy8gaTogdWludDY0CglieXRlYyAzIC8vICAibnVtU3Rha2VycyIKCWFwcF9nbG9iYWxfZ2V0Cgk8CglieiAqZm9yXzFfZW5kCgoJLy8gKmlmMjVfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDAwCgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMjVfZW5kCgoJLy8gKmlmMjVfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQwMQoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMjVfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQwMwoJLy8gc3Rha2UgPSB0aGlzLnN0YWtlcnMudmFsdWVbaV0uc3Rha2UKCWZyYW1lX2RpZyAyIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgNiAvLyAgaGVhZE9mZnNldAoJKwoJcHVzaGludCA4CglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9leHRyYWN0CglidG9pCglmcmFtZV9idXJ5IDMgLy8gc3Rha2U6IHVpbnQ2NAoKCS8vICppZjI2X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQwNQoJLy8gc3Rha2UgPiAwCglmcmFtZV9kaWcgMyAvLyBzdGFrZTogdWludDY0CglpbnRjIDAgLy8gMAoJPgoJYnogKmlmMjZfZW5kCgoJLy8gKmlmMjZfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQwNgoJLy8gc3Rha2VyID0gY2xvbmUodGhpcy5zdGFrZXJzLnZhbHVlW2ldKQoJZnJhbWVfZGlnIDIgLy8gaTogdWludDY0CglpbnRjIDUgLy8gNTYKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJaW50YyA1IC8vIDU2CglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9leHRyYWN0CglmcmFtZV9idXJ5IDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDA4CgkvLyBzdGFrZXJTaGFyZSA9IHdpZGVSYXRpbyhbc3Rha2UsIFBSRUNJU0lPTl0sIFt0aGlzLnRvdGFsU3Rha2VkLnZhbHVlXSkKCWZyYW1lX2RpZyAzIC8vIHN0YWtlOiB1aW50NjQKCWludGMgOSAvLyAxMDAwMDAwMDAwMDAwMDAwCgltdWx3CglpbnRjIDAgLy8gMAoJYnl0ZWMgNSAvLyAgInRvdGFsU3Rha2VkIgoJYXBwX2dsb2JhbF9nZXQKCWRpdm1vZHcKCXBvcAoJcG9wCglzd2FwCgkhCgoJLy8gd2lkZVJhdGlvIGZhaWxlZAoJYXNzZXJ0CglmcmFtZV9idXJ5IDUgLy8gc3Rha2VyU2hhcmU6IHVpbnQ2NAoKCS8vICppZjI3X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQxMAoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjI3X2VuZAoKCS8vICppZjI3X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MTEKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjI3X2VuZDoKCS8vICppZjI4X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQxNAoJLy8gYWRkaXRpb25hbEFTQVJld2FyZHMgPiB0aGlzLm51bVN0YWtlcnMudmFsdWUKCWZyYW1lX2RpZyAwIC8vIGFkZGl0aW9uYWxBU0FSZXdhcmRzOiB1aW50NjQKCWJ5dGVjIDMgLy8gICJudW1TdGFrZXJzIgoJYXBwX2dsb2JhbF9nZXQKCT4KCWJ6ICppZjI4X2VuZAoKCS8vICppZjI4X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MTUKCS8vIHJld2FyZFJhdGUgPSB3aWRlUmF0aW8oW2FkZGl0aW9uYWxBU0FSZXdhcmRzLCBzdGFrZXJTaGFyZV0sIFtQUkVDSVNJT05dKQoJZnJhbWVfZGlnIDAgLy8gYWRkaXRpb25hbEFTQVJld2FyZHM6IHVpbnQ2NAoJZnJhbWVfZGlnIDUgLy8gc3Rha2VyU2hhcmU6IHVpbnQ2NAoJbXVsdwoJaW50YyAwIC8vIDAKCWludGMgOSAvLyAxMDAwMDAwMDAwMDAwMDAwCglkaXZtb2R3Cglwb3AKCXBvcAoJc3dhcAoJIQoKCS8vIHdpZGVSYXRpbyBmYWlsZWQKCWFzc2VydAoJZnJhbWVfYnVyeSA2IC8vIHJld2FyZFJhdGU6IHVpbnQ2NAoKCS8vICppZjI5X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQxNgoJLy8gcmV3YXJkUmF0ZSA9PT0gMAoJZnJhbWVfZGlnIDYgLy8gcmV3YXJkUmF0ZTogdWludDY0CglpbnRjIDAgLy8gMAoJPT0KCWJ6ICppZjI5X2VuZAoKCS8vICppZjI5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MTcKCS8vIHJld2FyZFJhdGUgPSAxCglpbnRjIDEgLy8gMQoJZnJhbWVfYnVyeSA2IC8vIHJld2FyZFJhdGU6IHVpbnQ2NAoKKmlmMjlfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQyMAoJLy8gdGhpcy5pbmplY3RlZEFTQVJld2FyZHMudmFsdWUgPSB0aGlzLmluamVjdGVkQVNBUmV3YXJkcy52YWx1ZSAtIHJld2FyZFJhdGUKCWJ5dGVjIDggLy8gICJpbmplY3RlZEFTQVJld2FyZHMiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgNiAvLyByZXdhcmRSYXRlOiB1aW50NjQKCS0KCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQyMQoJLy8gdGhpcy5wYWlkQVNBUmV3YXJkcy52YWx1ZSA9IHRoaXMucGFpZEFTQVJld2FyZHMudmFsdWUgKyByZXdhcmRSYXRlCglieXRlYyAxMiAvLyAgInBhaWRBU0FSZXdhcmRzIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIDYgLy8gcmV3YXJkUmF0ZTogdWludDY0CgkrCglhcHBfZ2xvYmFsX3B1dAoKCS8vICppZjMwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQyMgoJLy8gdGhpcy5yZXdhcmRBc3NldElkLnZhbHVlID09PSB0aGlzLnN0YWtlZEFzc2V0SWQudmFsdWUKCWJ5dGVjIDQgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDE0IC8vICAic3Rha2VkQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoJYnogKmlmMzBfZWxzZQoKCS8vICppZjMwX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MjUKCS8vIHN0YWtlci5zdGFrZSA9IHN0YWtlci5zdGFrZSArIHJld2FyZFJhdGUKCWZyYW1lX2RpZyA0IC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglpbnRjIDYgLy8gIGhlYWRPZmZzZXQKCWZyYW1lX2RpZyA0IC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDMyIDgKCWJ0b2kKCWZyYW1lX2RpZyA2IC8vIHJld2FyZFJhdGU6IHVpbnQ2NAoJKwoJaXRvYgoJcmVwbGFjZTMKCWZyYW1lX2J1cnkgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MjYKCS8vIHRoaXMudG90YWxTdGFrZWQudmFsdWUgPSB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlICsgcmV3YXJkUmF0ZQoJYnl0ZWMgNSAvLyAgInRvdGFsU3Rha2VkIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIDYgLy8gcmV3YXJkUmF0ZTogdWludDY0CgkrCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYzMF9lbmQKCippZjMwX2Vsc2U6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDI4CgkvLyBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMgPSBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMgKyByZXdhcmRSYXRlCglmcmFtZV9kaWcgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJcHVzaGludCA0MCAvLyBoZWFkT2Zmc2V0CglmcmFtZV9kaWcgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCA0MCA4CglidG9pCglmcmFtZV9kaWcgNiAvLyByZXdhcmRSYXRlOiB1aW50NjQKCSsKCWl0b2IKCXJlcGxhY2UzCglmcmFtZV9idXJ5IDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCippZjMwX2VuZDoKCippZjI4X2VuZDoKCS8vICppZjMxX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQzMQoJLy8geFVTRFJld2FyZHMgPiAwCglmcmFtZV9kaWcgMSAvLyB4VVNEUmV3YXJkczogdWludDY0CglpbnRjIDAgLy8gMAoJPgoJYnogKmlmMzFfZW5kCgoJLy8gKmlmMzFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQzMgoJLy8gcmV3YXJkUmF0ZSA9IHdpZGVSYXRpbyhbeFVTRFJld2FyZHMsIHN0YWtlclNoYXJlXSwgW1BSRUNJU0lPTl0pCglmcmFtZV9kaWcgMSAvLyB4VVNEUmV3YXJkczogdWludDY0CglmcmFtZV9kaWcgNSAvLyBzdGFrZXJTaGFyZTogdWludDY0CgltdWx3CglpbnRjIDAgLy8gMAoJaW50YyA5IC8vIDEwMDAwMDAwMDAwMDAwMDAKCWRpdm1vZHcKCXBvcAoJcG9wCglzd2FwCgkhCgoJLy8gd2lkZVJhdGlvIGZhaWxlZAoJYXNzZXJ0CglmcmFtZV9idXJ5IDcgLy8gcmV3YXJkUmF0ZTogdWludDY0CgoJLy8gKmlmMzJfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDMzCgkvLyByZXdhcmRSYXRlID09PSAwCglmcmFtZV9kaWcgNyAvLyByZXdhcmRSYXRlOiB1aW50NjQKCWludGMgMCAvLyAwCgk9PQoJYnogKmlmMzJfZW5kCgoJLy8gKmlmMzJfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQzNAoJLy8gcmV3YXJkUmF0ZSA9IDEKCWludGMgMSAvLyAxCglmcmFtZV9idXJ5IDcgLy8gcmV3YXJkUmF0ZTogdWludDY0CgoqaWYzMl9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDM3CgkvLyB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgPSB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgLSByZXdhcmRSYXRlCglieXRlYyAxMCAvLyAgImluamVjdGVkeFVTRFJld2FyZHMiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgNyAvLyByZXdhcmRSYXRlOiB1aW50NjQKCS0KCWFwcF9nbG9iYWxfcHV0CgoJLy8gKmlmMzNfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDM4CgkvLyB0aGlzLnhVU0RBc3NldElkLnZhbHVlID09PSB0aGlzLnN0YWtlZEFzc2V0SWQudmFsdWUKCWJ5dGVjIDEzIC8vICAieFVTREFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgMTQgLy8gICJzdGFrZWRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCT09CglieiAqaWYzM19lbHNlCgoJLy8gKmlmMzNfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ0MQoJLy8gc3Rha2VyLnN0YWtlID0gc3Rha2VyLnN0YWtlICsgcmV3YXJkUmF0ZQoJZnJhbWVfZGlnIDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWludGMgNiAvLyAgaGVhZE9mZnNldAoJZnJhbWVfZGlnIDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgMzIgOAoJYnRvaQoJZnJhbWVfZGlnIDcgLy8gcmV3YXJkUmF0ZTogdWludDY0CgkrCglpdG9iCglyZXBsYWNlMwoJZnJhbWVfYnVyeSA0IC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ0MgoJLy8gdGhpcy50b3RhbFN0YWtlZC52YWx1ZSA9IHRoaXMudG90YWxTdGFrZWQudmFsdWUgKyByZXdhcmRSYXRlCglieXRlYyA1IC8vICAidG90YWxTdGFrZWQiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgNyAvLyByZXdhcmRSYXRlOiB1aW50NjQKCSsKCWFwcF9nbG9iYWxfcHV0CgliICppZjMzX2VuZAoKKmlmMzNfZWxzZToKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NDQKCS8vIHN0YWtlci5hY2NydWVkeFVTRFJld2FyZHMgPSBzdGFrZXIuYWNjcnVlZHhVU0RSZXdhcmRzICsgcmV3YXJkUmF0ZQoJZnJhbWVfZGlnIDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCXB1c2hpbnQgNDggLy8gaGVhZE9mZnNldAoJZnJhbWVfZGlnIDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgNDggOAoJYnRvaQoJZnJhbWVfZGlnIDcgLy8gcmV3YXJkUmF0ZTogdWludDY0CgkrCglpdG9iCglyZXBsYWNlMwoJZnJhbWVfYnVyeSA0IC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCgoqaWYzM19lbmQ6CgoqaWYzMV9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDQ3CgkvLyB0aGlzLnN0YWtlcnMudmFsdWVbaV0gPSBzdGFrZXIKCWZyYW1lX2RpZyAyIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWZyYW1lX2RpZyA0IC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9yZXBsYWNlCgoqaWYyNl9lbmQ6CgoqZm9yXzFfY29udGludWU6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mzk5CgkvLyBpICs9IDEKCWZyYW1lX2RpZyAyIC8vIGk6IHVpbnQ2NAoJaW50YyAxIC8vIDEKCSsKCWZyYW1lX2J1cnkgMiAvLyBpOiB1aW50NjQKCWIgKmZvcl8xCgoqZm9yXzFfZW5kOgoJLy8gKmlmMzRfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDUwCgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMzRfZW5kCgoJLy8gKmlmMzRfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ1MQoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMzRfZW5kOgoJLy8gKmlmMzVfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDYzCgkvLyB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgPiAwCglieXRlYyAxMCAvLyAgImluamVjdGVkeFVTRFJld2FyZHMiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAwIC8vIDAKCT4KCWJ6ICppZjM1X2VuZAoKCS8vICppZjM1X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NjQKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnhVU0RBc3NldElkLnZhbHVlKSwKCS8vICAgICAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZSwKCS8vICAgICAgICAgICBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICAgICAgYXNzZXRBbW91bnQ6IHRoaXMuaW5qZWN0ZWR4VVNEUmV3YXJkcy52YWx1ZSwKCS8vICAgICAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgNyAvLyAgYXhmZXIKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDY1CgkvLyB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnhVU0RBc3NldElkLnZhbHVlKQoJYnl0ZWMgMTMgLy8gICJ4VVNEQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NjYKCS8vIGFzc2V0UmVjZWl2ZXI6IHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlCglieXRlYyA5IC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NjcKCS8vIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgU2VuZGVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ2OAoJLy8gYXNzZXRBbW91bnQ6IHRoaXMuaW5qZWN0ZWR4VVNEUmV3YXJkcy52YWx1ZQoJYnl0ZWMgMTAgLy8gICJpbmplY3RlZHhVU0RSZXdhcmRzIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoqaWYzNV9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDcyCgkvLyB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgPSAwCglieXRlYyAxMCAvLyAgImluamVjdGVkeFVTRFJld2FyZHMiCglpbnRjIDAgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCippZjIzX2VuZDoKCXJldHN1YgoKLy8gZ2V0U3Rha2VyKGFkZHJlc3M6IEFkZHJlc3MpOiBTdGFrZUluZm8KZ2V0U3Rha2VyOgoJcHJvdG8gMSAxCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDEgLy8gMHgKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDc3CgkvLyBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubnVtU3Rha2Vycy52YWx1ZTsgaSArPSAxKQoJaW50YyAwIC8vIDAKCWZyYW1lX2J1cnkgMCAvLyBpOiB1aW50NjQKCipmb3JfMjoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NzcKCS8vIGkgPCB0aGlzLm51bVN0YWtlcnMudmFsdWUKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJYnl0ZWMgMyAvLyAgIm51bVN0YWtlcnMiCglhcHBfZ2xvYmFsX2dldAoJPAoJYnogKmZvcl8yX2VuZAoKCS8vICppZjM2X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ3OAoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjM2X2VuZAoKCS8vICppZjM2X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NzkKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjM2X2VuZDoKCS8vICppZjM3X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ4MQoJLy8gdGhpcy5zdGFrZXJzLnZhbHVlW2ldLmFjY291bnQgPT09IGFkZHJlc3MKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgMCAvLyAwCgkrCglpbnRjIDYgLy8gMzIKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWZyYW1lX2RpZyAtMSAvLyBhZGRyZXNzOiBBZGRyZXNzCgk9PQoJYnogKmlmMzdfZW5kCgoJLy8gKmlmMzdfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ4MgoJLy8gcmV0dXJuIGNsb25lKHRoaXMuc3Rha2Vycy52YWx1ZVtpXSk7CglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglpbnRjIDUgLy8gNTYKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWIgKmdldFN0YWtlcipyZXR1cm4KCippZjM3X2VuZDoKCipmb3JfMl9jb250aW51ZToKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NzcKCS8vIGkgKz0gMQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnRjIDEgLy8gMQoJKwoJZnJhbWVfYnVyeSAwIC8vIGk6IHVpbnQ2NAoJYiAqZm9yXzIKCipmb3JfMl9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDg1CgkvLyByZXR1cm4gewoJLy8gICAgICAgYWNjb3VudDogZ2xvYmFscy56ZXJvQWRkcmVzcywKCS8vICAgICAgIHN0YWtlOiAwLAoJLy8gICAgICAgYWNjcnVlZEFTQVJld2FyZHM6IDAsCgkvLyAgICAgICBhY2NydWVkeFVTRFJld2FyZHM6IDAsCgkvLyAgICAgfTsKCWdsb2JhbCBaZXJvQWRkcmVzcwoJYnl0ZWMgNiAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCWNvbmNhdAoJYnl0ZWMgNiAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCWNvbmNhdAoJYnl0ZWMgNiAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCWNvbmNhdAoKKmdldFN0YWtlcipyZXR1cm46CgkvLyBzZXQgdGhlIHN1YnJvdXRpbmUgcmV0dXJuIHZhbHVlCglmcmFtZV9idXJ5IDAKCXJldHN1YgoKLy8gY2xhaW1SZXdhcmRzKCl2b2lkCiphYmlfcm91dGVfY2xhaW1SZXdhcmRzOgoJLy8gZXhlY3V0ZSBjbGFpbVJld2FyZHMoKXZvaWQKCWNhbGxzdWIgY2xhaW1SZXdhcmRzCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBjbGFpbVJld2FyZHMoKTogdm9pZApjbGFpbVJld2FyZHM6Cglwcm90byAwIDAKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgMSAvLyAweAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0OTQKCS8vIHRoaXMucGlja3VwUmV3YXJkcygpCgljYWxsc3ViIHBpY2t1cFJld2FyZHMKCgkvLyAqaWYzOF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0OTUKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWYzOF9lbmQKCgkvLyAqaWYzOF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDk2CgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWYzOF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDk4CgkvLyB0aGlzLmFjY3J1ZVJld2FyZHMoKQoJY2FsbHN1YiBhY2NydWVSZXdhcmRzCgoJLy8gKmlmMzlfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDk5CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMzlfZW5kCgoJLy8gKmlmMzlfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUwMAoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMzlfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUwMgoJLy8gc3Rha2VyID0gdGhpcy5nZXRTdGFrZXIodGhpcy50eG4uc2VuZGVyKQoJdHhuIFNlbmRlcgoJY2FsbHN1YiBnZXRTdGFrZXIKCWZyYW1lX2J1cnkgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKCS8vICppZjQwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUwNAoJLy8gc3Rha2VyLmFjY3J1ZWRBU0FSZXdhcmRzID4gMAoJZnJhbWVfZGlnIDAgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgNDAgOAoJYnRvaQoJaW50YyAwIC8vIDAKCT4KCWJ6ICppZjQwX2VuZAoKCS8vICppZjQwX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MDUKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5yZXdhcmRBc3NldElkLnZhbHVlKSwKCS8vICAgICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgICBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICAgIGFzc2V0QW1vdW50OiBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMsCgkvLyAgICAgICB9KQoJaXR4bl9iZWdpbgoJaW50YyA3IC8vICBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MDYKCS8vIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDQgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUwNwoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTA4CgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MDkKCS8vIGFzc2V0QW1vdW50OiBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDQwIDgKCWJ0b2kKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUxMQoJLy8gdGhpcy5wYWlkQVNBUmV3YXJkcy52YWx1ZSA9IHRoaXMucGFpZEFTQVJld2FyZHMudmFsdWUgLSBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMKCWJ5dGVjIDEyIC8vICAicGFpZEFTQVJld2FyZHMiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCA0MCA4CglidG9pCgktCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MTIKCS8vIHN0YWtlci5hY2NydWVkQVNBUmV3YXJkcyA9IDAKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglieXRlYyA2IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJcmVwbGFjZTIgNDAKCWZyYW1lX2J1cnkgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKKmlmNDBfZW5kOgoJLy8gKmlmNDFfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTE0CgkvLyBzdGFrZXIuYWNjcnVlZHhVU0RSZXdhcmRzID4gMAoJZnJhbWVfZGlnIDAgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgNDggOAoJYnRvaQoJaW50YyAwIC8vIDAKCT4KCWJ6ICppZjQxX2VuZAoKCS8vICppZjQxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MTUKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSksCgkvLyAgICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlciwKCS8vICAgICAgICAgc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgICBhc3NldEFtb3VudDogc3Rha2VyLmFjY3J1ZWR4VVNEUmV3YXJkcywKCS8vICAgICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDcgLy8gIGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUxNgoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDEzIC8vICAieFVTREFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTE3CgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLnR4bi5zZW5kZXIKCXR4biBTZW5kZXIKCWl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MTgKCS8vIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgU2VuZGVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUxOQoJLy8gYXNzZXRBbW91bnQ6IHN0YWtlci5hY2NydWVkeFVTRFJld2FyZHMKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDQ4IDgKCWJ0b2kKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUyMQoJLy8gc3Rha2VyLmFjY3J1ZWR4VVNEUmV3YXJkcyA9IDAKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglieXRlYyA2IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJcmVwbGFjZTIgNDgKCWZyYW1lX2J1cnkgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKKmlmNDFfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUyNAoJLy8gdGhpcy5zZXRTdGFrZXIoc3Rha2VyLmFjY291bnQsIHN0YWtlcikKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglmcmFtZV9kaWcgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCAwIDMyCgljYWxsc3ViIHNldFN0YWtlcgoKCS8vICppZjQyX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUyNQoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjQyX2VuZAoKCS8vICppZjQyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MjYKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjQyX2VuZDoKCXJldHN1YgoKLy8gdW5zdGFrZSh1aW50NjQpdm9pZAoqYWJpX3JvdXRlX3Vuc3Rha2U6CgkvLyBxdWFudGl0eTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSB1bnN0YWtlKHVpbnQ2NCl2b2lkCgljYWxsc3ViIHVuc3Rha2UKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHVuc3Rha2UocXVhbnRpdHk6IHVpbnQ2NCk6IHZvaWQKdW5zdGFrZToKCXByb3RvIDEgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAxIC8vIDB4CglkdXBuIDQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTMxCgkvLyB0aGlzLnBpY2t1cFJld2FyZHMoKQoJY2FsbHN1YiBwaWNrdXBSZXdhcmRzCgoJLy8gKmlmNDNfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTMyCgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmNDNfZW5kCgoJLy8gKmlmNDNfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUzMwoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmNDNfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUzNQoJLy8gdGhpcy5hY2NydWVSZXdhcmRzKCkKCWNhbGxzdWIgYWNjcnVlUmV3YXJkcwoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MzYKCS8vIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5udW1TdGFrZXJzLnZhbHVlOyBpICs9IDEpCglpbnRjIDAgLy8gMAoJZnJhbWVfYnVyeSAwIC8vIGk6IHVpbnQ2NAoKKmZvcl8zOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUzNgoJLy8gaSA8IHRoaXMubnVtU3Rha2Vycy52YWx1ZQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglieXRlYyAzIC8vICAibnVtU3Rha2VycyIKCWFwcF9nbG9iYWxfZ2V0Cgk8CglieiAqZm9yXzNfZW5kCgoJLy8gKmlmNDRfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTM3CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmNDRfZW5kCgoJLy8gKmlmNDRfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUzOAoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmNDRfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU0MAoJLy8gc3Rha2VyID0gY2xvbmUodGhpcy5zdGFrZXJzLnZhbHVlW2ldKQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnRjIDUgLy8gNTYKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJaW50YyA1IC8vIDU2CglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9leHRyYWN0CglmcmFtZV9idXJ5IDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCgkvLyAqaWY0NV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NDEKCS8vIHN0YWtlci5hY2NvdW50ID09PSB0aGlzLnR4bi5zZW5kZXIKCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDAgMzIKCXR4biBTZW5kZXIKCT09CglieiAqaWY0NV9lbmQKCgkvLyAqaWY0NV9jb25zZXF1ZW50CgkvLyAqaWY0Nl9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NDIKCS8vIHN0YWtlci5zdGFrZSA+IDAKCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDMyIDgKCWJ0b2kKCWludGMgMCAvLyAwCgk+CglieiAqaWY0Nl9lbmQKCgkvLyAqaWY0Nl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTQzCgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnN0YWtlZEFzc2V0SWQudmFsdWUpLAoJLy8gICAgICAgICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgICAgICAgc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgICAgICAgYXNzZXRBbW91bnQ6IHF1YW50aXR5ID09PSAwID8gc3Rha2VyLnN0YWtlIDogcXVhbnRpdHksCgkvLyAgICAgICAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgNyAvLyAgYXhmZXIKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTQ0CgkvLyB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnN0YWtlZEFzc2V0SWQudmFsdWUpCglieXRlYyAxNCAvLyAgInN0YWtlZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTQ1CgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLnR4bi5zZW5kZXIKCXR4biBTZW5kZXIKCWl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NDYKCS8vIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgU2VuZGVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU0NwoJLy8gYXNzZXRBbW91bnQ6IHF1YW50aXR5ID09PSAwID8gc3Rha2VyLnN0YWtlIDogcXVhbnRpdHkKCWZyYW1lX2RpZyAtMSAvLyBxdWFudGl0eTogdWludDY0CglpbnRjIDAgLy8gMAoJPT0KCWJ6ICp0ZXJuYXJ5MF9mYWxzZQoJZnJhbWVfZGlnIDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgMzIgOAoJYnRvaQoJYiAqdGVybmFyeTBfZW5kCgoqdGVybmFyeTBfZmFsc2U6CglmcmFtZV9kaWcgLTEgLy8gcXVhbnRpdHk6IHVpbnQ2NAoKKnRlcm5hcnkwX2VuZDoKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoqaWY0Nl9lbmQ6CgkvLyAqaWY0N19jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NTIKCS8vIHN0YWtlci5hY2NydWVkQVNBUmV3YXJkcyA+IDAKCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDQwIDgKCWJ0b2kKCWludGMgMCAvLyAwCgk+CglieiAqaWY0N19lbmQKCgkvLyAqaWY0N19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTUzCgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUpLAoJLy8gICAgICAgICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgICAgICAgc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgICAgICAgYXNzZXRBbW91bnQ6IHN0YWtlci5hY2NydWVkQVNBUmV3YXJkcywKCS8vICAgICAgICAgICB9KQoJaXR4bl9iZWdpbgoJaW50YyA3IC8vICBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NTQKCS8vIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDQgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU1NQoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTU2CgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NTcKCS8vIGFzc2V0QW1vdW50OiBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMKCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDQwIDgKCWJ0b2kKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU1OQoJLy8gc3Rha2VyLmFjY3J1ZWRBU0FSZXdhcmRzID0gMAoJZnJhbWVfZGlnIDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWJ5dGVjIDYgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCglyZXBsYWNlMiA0MAoJZnJhbWVfYnVyeSAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCgoqaWY0N19lbmQ6CgkvLyAqaWY0OF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NjMKCS8vIHN0YWtlci5hY2NydWVkeFVTRFJld2FyZHMgPiAwCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCA0OCA4CglidG9pCglpbnRjIDAgLy8gMAoJPgoJYnogKmlmNDhfZW5kCgoJLy8gKmlmNDhfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU2NAoJLy8gc2VuZEFzc2V0VHJhbnNmZXIoewoJLy8gICAgICAgICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSksCgkvLyAgICAgICAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLnR4bi5zZW5kZXIsCgkvLyAgICAgICAgICAgICBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICAgICAgICBhc3NldEFtb3VudDogc3Rha2VyLmFjY3J1ZWR4VVNEUmV3YXJkcywKCS8vICAgICAgICAgICB9KQoJaXR4bl9iZWdpbgoJaW50YyA3IC8vICBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NjUKCS8vIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMueFVTREFzc2V0SWQudmFsdWUpCglieXRlYyAxMyAvLyAgInhVU0RBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU2NgoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTY3CgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NjgKCS8vIGFzc2V0QW1vdW50OiBzdGFrZXIuYWNjcnVlZHhVU0RSZXdhcmRzCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCA0OCA4CglidG9pCglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NzAKCS8vIHN0YWtlci5hY2NydWVkeFVTRFJld2FyZHMgPSAwCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJYnl0ZWMgNiAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCXJlcGxhY2UyIDQ4CglmcmFtZV9idXJ5IDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCippZjQ4X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NzQKCS8vIHRoaXMudG90YWxTdGFrZWQudmFsdWUgPSB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlIC0gKHF1YW50aXR5ID09PSAwID8gc3Rha2VyLnN0YWtlIDogcXVhbnRpdHkpCglieXRlYyA1IC8vICAidG90YWxTdGFrZWQiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgLTEgLy8gcXVhbnRpdHk6IHVpbnQ2NAoJaW50YyAwIC8vIDAKCT09CglieiAqdGVybmFyeTJfZmFsc2UKCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDMyIDgKCWJ0b2kKCWIgKnRlcm5hcnkyX2VuZAoKKnRlcm5hcnkyX2ZhbHNlOgoJZnJhbWVfZGlnIC0xIC8vIHF1YW50aXR5OiB1aW50NjQKCip0ZXJuYXJ5Ml9lbmQ6CgktCglhcHBfZ2xvYmFsX3B1dAoKCS8vICppZjQ5X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU3NgoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjQ5X2VuZAoKCS8vICppZjQ5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NzcKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjQ5X2VuZDoKCS8vICppZjUwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU4MAoJLy8gcXVhbnRpdHkgPT09IDAKCWZyYW1lX2RpZyAtMSAvLyBxdWFudGl0eTogdWludDY0CglpbnRjIDAgLy8gMAoJPT0KCWJ6ICppZjUwX2Vsc2UKCgkvLyAqaWY1MF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTgxCgkvLyByZW1vdmVkU3Rha2VyOiBTdGFrZUluZm8gPSB7CgkvLyAgICAgICAgICAgICBhY2NvdW50OiBnbG9iYWxzLnplcm9BZGRyZXNzLAoJLy8gICAgICAgICAgICAgc3Rha2U6IDAsCgkvLyAgICAgICAgICAgICBhY2NydWVkeFVTRFJld2FyZHM6IDAsCgkvLyAgICAgICAgICAgICBhY2NydWVkQVNBUmV3YXJkczogMCwKCS8vICAgICAgICAgICB9CglnbG9iYWwgWmVyb0FkZHJlc3MKCWJ5dGVjIDYgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCgljb25jYXQKCWJ5dGVjIDYgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCgljb25jYXQKCWJ5dGVjIDYgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCgljb25jYXQKCWZyYW1lX2J1cnkgMiAvLyByZW1vdmVkU3Rha2VyOiBTdGFrZUluZm8KCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTg3CgkvLyB0aGlzLnNldFN0YWtlcihzdGFrZXIuYWNjb3VudCwgcmVtb3ZlZFN0YWtlcikKCWZyYW1lX2RpZyAyIC8vIHJlbW92ZWRTdGFrZXI6IFN0YWtlSW5mbwoJZnJhbWVfZGlnIDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgMCAzMgoJY2FsbHN1YiBzZXRTdGFrZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTkxCgkvLyBsYXN0U3Rha2VyID0gdGhpcy5nZXRTdGFrZXIodGhpcy5zdGFrZXJzLnZhbHVlW3RoaXMubnVtU3Rha2Vycy52YWx1ZSAtIDFdLmFjY291bnQpCglieXRlYyAzIC8vICAibnVtU3Rha2VycyIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDEgLy8gMQoJLQoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgMCAvLyAwCgkrCglpbnRjIDYgLy8gMzIKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWNhbGxzdWIgZ2V0U3Rha2VyCglmcmFtZV9idXJ5IDMgLy8gbGFzdFN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU5MgoJLy8gbGFzdFN0YWtlckluZGV4ID0gdGhpcy5nZXRTdGFrZXJJbmRleCh0aGlzLnN0YWtlcnMudmFsdWVbdGhpcy5udW1TdGFrZXJzLnZhbHVlIC0gMV0uYWNjb3VudCkKCWJ5dGVjIDMgLy8gICJudW1TdGFrZXJzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMSAvLyAxCgktCglpbnRjIDUgLy8gNTYKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJaW50YyAwIC8vIDAKCSsKCWludGMgNiAvLyAzMgoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfZXh0cmFjdAoJY2FsbHN1YiBnZXRTdGFrZXJJbmRleAoJZnJhbWVfYnVyeSA0IC8vIGxhc3RTdGFrZXJJbmRleDogdWludDY0CgoJLy8gKmlmNTFfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTkzCgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmNTFfZW5kCgoJLy8gKmlmNTFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU5NAoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmNTFfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU5NgoJLy8gdGhpcy5zZXRTdGFrZXJBdEluZGV4KGxhc3RTdGFrZXIsIGkpCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWZyYW1lX2RpZyAzIC8vIGxhc3RTdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJY2FsbHN1YiBzZXRTdGFrZXJBdEluZGV4CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU5OQoJLy8gdGhpcy5zZXRTdGFrZXJBdEluZGV4KHJlbW92ZWRTdGFrZXIsIGxhc3RTdGFrZXJJbmRleCkKCWZyYW1lX2RpZyA0IC8vIGxhc3RTdGFrZXJJbmRleDogdWludDY0CglmcmFtZV9kaWcgMiAvLyByZW1vdmVkU3Rha2VyOiBTdGFrZUluZm8KCWNhbGxzdWIgc2V0U3Rha2VyQXRJbmRleAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MDAKCS8vIHRoaXMubnVtU3Rha2Vycy52YWx1ZSA9IHRoaXMubnVtU3Rha2Vycy52YWx1ZSAtIDEKCWJ5dGVjIDMgLy8gICJudW1TdGFrZXJzIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJaW50YyAxIC8vIDEKCS0KCWFwcF9nbG9iYWxfcHV0CgliICppZjUwX2VuZAoKKmlmNTBfZWxzZToKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MDIKCS8vIHN0YWtlci5zdGFrZSA9IHN0YWtlci5zdGFrZSAtIHF1YW50aXR5CglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJaW50YyA2IC8vICBoZWFkT2Zmc2V0CglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCAzMiA4CglidG9pCglmcmFtZV9kaWcgLTEgLy8gcXVhbnRpdHk6IHVpbnQ2NAoJLQoJaXRvYgoJcmVwbGFjZTMKCWZyYW1lX2J1cnkgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MDMKCS8vIHN0YWtlci5hY2NydWVkQVNBUmV3YXJkcyA9IDAKCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglieXRlYyA2IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJcmVwbGFjZTIgNDAKCWZyYW1lX2J1cnkgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKKmlmNTBfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYwNQoJLy8gdGhpcy5zZXRTdGFrZXIoc3Rha2VyLmFjY291bnQsIHN0YWtlcikKCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCAwIDMyCgljYWxsc3ViIHNldFN0YWtlcgoKKmlmNDVfZW5kOgoKKmZvcl8zX2NvbnRpbnVlOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUzNgoJLy8gaSArPSAxCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWludGMgMSAvLyAxCgkrCglmcmFtZV9idXJ5IDAgLy8gaTogdWludDY0CgliICpmb3JfMwoKKmZvcl8zX2VuZDoKCXJldHN1YgoKLy8gZ2V0U3Rha2VySW5kZXgoYWRkcmVzczogQWRkcmVzcyk6IHVpbnQ2NApnZXRTdGFrZXJJbmRleDoKCXByb3RvIDEgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAxIC8vIDB4CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYxMQoJLy8gZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm51bVN0YWtlcnMudmFsdWU7IGkgKz0gMSkKCWludGMgMCAvLyAwCglmcmFtZV9idXJ5IDAgLy8gaTogdWludDY0CgoqZm9yXzQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjExCgkvLyBpIDwgdGhpcy5udW1TdGFrZXJzLnZhbHVlCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWJ5dGVjIDMgLy8gICJudW1TdGFrZXJzIgoJYXBwX2dsb2JhbF9nZXQKCTwKCWJ6ICpmb3JfNF9lbmQKCgkvLyAqaWY1Ml9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MTIKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWY1Ml9lbmQKCgkvLyAqaWY1Ml9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjEzCgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWY1Ml9lbmQ6CgkvLyAqaWY1M19jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MTUKCS8vIHRoaXMuc3Rha2Vycy52YWx1ZVtpXS5hY2NvdW50ID09PSBhZGRyZXNzCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglpbnRjIDAgLy8gMAoJKwoJaW50YyA2IC8vIDMyCglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9leHRyYWN0CglmcmFtZV9kaWcgLTEgLy8gYWRkcmVzczogQWRkcmVzcwoJPT0KCWJ6ICppZjUzX2VuZAoKCS8vICppZjUzX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MTYKCS8vIHJldHVybiBpOwoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CgliICpnZXRTdGFrZXJJbmRleCpyZXR1cm4KCippZjUzX2VuZDoKCipmb3JfNF9jb250aW51ZToKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MTEKCS8vIGkgKz0gMQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnRjIDEgLy8gMQoJKwoJZnJhbWVfYnVyeSAwIC8vIGk6IHVpbnQ2NAoJYiAqZm9yXzQKCipmb3JfNF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjE5CgkvLyByZXR1cm4gMDsKCWludGMgMCAvLyAwCgoqZ2V0U3Rha2VySW5kZXgqcmV0dXJuOgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCglyZXRzdWIKCi8vIHNldFN0YWtlcihzdGFrZXJBY2NvdW50OiBBZGRyZXNzLCBzdGFrZXI6IFN0YWtlSW5mbyk6IHZvaWQKc2V0U3Rha2VyOgoJcHJvdG8gMiAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDEgLy8gMHgKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjIzCgkvLyBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubnVtU3Rha2Vycy52YWx1ZTsgaSArPSAxKQoJaW50YyAwIC8vIDAKCWZyYW1lX2J1cnkgMCAvLyBpOiB1aW50NjQKCipmb3JfNToKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MjMKCS8vIGkgPCB0aGlzLm51bVN0YWtlcnMudmFsdWUKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJYnl0ZWMgMyAvLyAgIm51bVN0YWtlcnMiCglhcHBfZ2xvYmFsX2dldAoJPAoJYnogKmZvcl81X2VuZAoKCS8vICppZjU0X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYyNAoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjU0X2VuZAoKCS8vICppZjU0X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MjUKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjU0X2VuZDoKCS8vICppZjU1X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYyNwoJLy8gdGhpcy5zdGFrZXJzLnZhbHVlW2ldLmFjY291bnQgPT09IHN0YWtlckFjY291bnQKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgMCAvLyAwCgkrCglpbnRjIDYgLy8gMzIKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWZyYW1lX2RpZyAtMSAvLyBzdGFrZXJBY2NvdW50OiBBZGRyZXNzCgk9PQoJYnogKmlmNTVfZWxzZWlmMV9jb25kaXRpb24KCgkvLyAqaWY1NV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjI4CgkvLyB0aGlzLnN0YWtlcnMudmFsdWVbaV0gPSBzdGFrZXIKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWZyYW1lX2RpZyAtMiAvLyBzdGFrZXI6IFN0YWtlSW5mbwoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfcmVwbGFjZQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MjkKCS8vIHJldHVybjsKCXJldHN1YgoJYiAqaWY1NV9lbmQKCippZjU1X2Vsc2VpZjFfY29uZGl0aW9uOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYzMQoJLy8gdGhpcy5zdGFrZXJzLnZhbHVlW2ldLmFjY291bnQgPT09IGdsb2JhbHMuemVyb0FkZHJlc3MKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgMCAvLyAwCgkrCglpbnRjIDYgLy8gMzIKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWdsb2JhbCBaZXJvQWRkcmVzcwoJPT0KCWJ6ICppZjU1X2VuZAoKCS8vICppZjU1X2Vsc2VpZjFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYzMgoJLy8gdGhpcy5zdGFrZXJzLnZhbHVlW2ldID0gc3Rha2VyCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglmcmFtZV9kaWcgLTIgLy8gc3Rha2VyOiBTdGFrZUluZm8KCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X3JlcGxhY2UKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjMzCgkvLyByZXR1cm47CglyZXRzdWIKCippZjU1X2VuZDoKCipmb3JfNV9jb250aW51ZToKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MjMKCS8vIGkgKz0gMQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnRjIDEgLy8gMQoJKwoJZnJhbWVfYnVyeSAwIC8vIGk6IHVpbnQ2NAoJYiAqZm9yXzUKCipmb3JfNV9lbmQ6CglyZXRzdWIKCi8vIHNldFN0YWtlckF0SW5kZXgoc3Rha2VyOiBTdGFrZUluZm8sIGluZGV4OiB1aW50NjQpOiB2b2lkCnNldFN0YWtlckF0SW5kZXg6Cglwcm90byAyIDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjM5CgkvLyB0aGlzLnN0YWtlcnMudmFsdWVbaW5kZXhdID0gc3Rha2VyCglmcmFtZV9kaWcgLTIgLy8gaW5kZXg6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWZyYW1lX2RpZyAtMSAvLyBzdGFrZXI6IFN0YWtlSW5mbwoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfcmVwbGFjZQoJcmV0c3ViCgovLyBzZXRGcmVlemUoYm9vbCl2b2lkCiphYmlfcm91dGVfc2V0RnJlZXplOgoJLy8gZW5hYmxlZDogYm9vbAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludGMgMSAvLyAxCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGVuYWJsZWQpIGZvciBzZXRGcmVlemUgbXVzdCBiZSBhIGJvb2wKCWFzc2VydAoJaW50YyAwIC8vIDAKCWdldGJpdAoKCS8vIGV4ZWN1dGUgc2V0RnJlZXplKGJvb2wpdm9pZAoJY2FsbHN1YiBzZXRGcmVlemUKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHNldEZyZWV6ZShlbmFibGVkOiBib29sZWFuKTogdm9pZApzZXRGcmVlemU6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjQzCgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09PSB0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZSwgJ09ubHkgaW5qZWN0b3IgY2FuIGZyZWV6ZSBwYXlvdXRzJykKCXR4biBTZW5kZXIKCWJ5dGVjIDkgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGluamVjdG9yIGNhbiBmcmVlemUgcGF5b3V0cwoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjY0NAoJLy8gdGhpcy5mcmVlemUudmFsdWUgPSBlbmFibGVkCglieXRlYyAxNyAvLyAgImZyZWV6ZSIKCWZyYW1lX2RpZyAtMSAvLyBlbmFibGVkOiBib29sZWFuCglieXRlYyAxMSAvLyAweDAwCglpbnRjIDAgLy8gMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIGdhcygpdm9pZAoqYWJpX3JvdXRlX2dhczoKCS8vIGV4ZWN1dGUgZ2FzKCl2b2lkCgljYWxsc3ViIGdhcwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gZ2FzKCk6IHZvaWQKZ2FzOgoJcHJvdG8gMCAwCglyZXRzdWIKCipjcmVhdGVfTm9PcDoKCXB1c2hieXRlcyAweDM1ZTQ0YzFmIC8vIG1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oYWRkcmVzcyxhZGRyZXNzLGFkZHJlc3Mpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfY3JlYXRlQXBwbGljYXRpb24KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY3JlYXRlIE5vT3AKCWVycgoKKmNhbGxfTm9PcDoKCXB1c2hieXRlcyAweDFjMDU3YWI5IC8vIG1ldGhvZCAiaW5pdEFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQsdWludDY0LHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4YTNmZWE0MGYgLy8gbWV0aG9kICJ1cGRhdGVBZG1pbkFkZHJlc3MoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4NWY4NGU2MGIgLy8gbWV0aG9kICJzZXRQb29sQWN0aXZlKCl2b2lkIgoJcHVzaGJ5dGVzIDB4YjcyY2YzNjAgLy8gbWV0aG9kICJzZXRQb29sRW5kaW5nKCl2b2lkIgoJcHVzaGJ5dGVzIDB4NjgyYWM2OTMgLy8gbWV0aG9kICJ1cGRhdGVJbmplY3RlZEFTQVJld2FyZHModWludDY0KXZvaWQiCglwdXNoYnl0ZXMgMHhlN2ZlOWNjZSAvLyBtZXRob2QgInVwZGF0ZVBhaWRBU0FSZXdhcmRzKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4YzQ3N2E0NGQgLy8gbWV0aG9kICJ1cGRhdGVJbmplY3RlZHhVU0RSZXdhcmRzKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4MWI5MjQxNTkgLy8gbWV0aG9kICJ1cGRhdGVUcmVhc3VyeUFkZHJlc3MoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4MmQ5ZDdjYWIgLy8gbWV0aG9kICJ1cGRhdGVJbmplY3RvckFkZHJlc3MoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4ZjY5ZGQ3NzIgLy8gbWV0aG9kICJ1cGRhdGVOdW1TdGFrZXJzKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZDI0OTYzYjggLy8gbWV0aG9kICJ1cGRhdGVGcmVlemUoYm9vbCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZGIyODQwNjEgLy8gbWV0aG9kICJ1cGRhdGVQb29sRW5kaW5nKGJvb2wpdm9pZCIKCXB1c2hieXRlcyAweDRjNDM2NzI2IC8vIG1ldGhvZCAiZ2V0TUJSRm9yUG9vbENyZWF0aW9uKCkodWludDY0KSIKCXB1c2hieXRlcyAweDQ3Y2ZjYzA0IC8vIG1ldGhvZCAiaW5pdFN0b3JhZ2UocGF5KXZvaWQiCglwdXNoYnl0ZXMgMHgzNDcwMDdlYiAvLyBtZXRob2QgImluamVjdFJld2FyZHMoYXhmZXIsdWludDY0LHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4YzZiYThmMTkgLy8gbWV0aG9kICJpbmplY3R4VVNEKGF4ZmVyLHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZjRlYjRhMDMgLy8gbWV0aG9kICJzdGFrZShheGZlcix1aW50NjQpdm9pZCIKCXB1c2hieXRlcyAweGVhNGJjYTU3IC8vIG1ldGhvZCAiYWNjcnVlUmV3YXJkcygpdm9pZCIKCXB1c2hieXRlcyAweGE1YWU2YmQxIC8vIG1ldGhvZCAiY2xhaW1SZXdhcmRzKCl2b2lkIgoJcHVzaGJ5dGVzIDB4ODEzY2U4OWEgLy8gbWV0aG9kICJ1bnN0YWtlKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4YmI2YmM2ZTMgLy8gbWV0aG9kICJzZXRGcmVlemUoYm9vbCl2b2lkIgoJcHVzaGJ5dGVzIDB4MzE3MmNhOWQgLy8gbWV0aG9kICJnYXMoKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2luaXRBcHBsaWNhdGlvbiAqYWJpX3JvdXRlX3VwZGF0ZUFkbWluQWRkcmVzcyAqYWJpX3JvdXRlX3NldFBvb2xBY3RpdmUgKmFiaV9yb3V0ZV9zZXRQb29sRW5kaW5nICphYmlfcm91dGVfdXBkYXRlSW5qZWN0ZWRBU0FSZXdhcmRzICphYmlfcm91dGVfdXBkYXRlUGFpZEFTQVJld2FyZHMgKmFiaV9yb3V0ZV91cGRhdGVJbmplY3RlZHhVU0RSZXdhcmRzICphYmlfcm91dGVfdXBkYXRlVHJlYXN1cnlBZGRyZXNzICphYmlfcm91dGVfdXBkYXRlSW5qZWN0b3JBZGRyZXNzICphYmlfcm91dGVfdXBkYXRlTnVtU3Rha2VycyAqYWJpX3JvdXRlX3VwZGF0ZUZyZWV6ZSAqYWJpX3JvdXRlX3VwZGF0ZVBvb2xFbmRpbmcgKmFiaV9yb3V0ZV9nZXRNQlJGb3JQb29sQ3JlYXRpb24gKmFiaV9yb3V0ZV9pbml0U3RvcmFnZSAqYWJpX3JvdXRlX2luamVjdFJld2FyZHMgKmFiaV9yb3V0ZV9pbmplY3R4VVNEICphYmlfcm91dGVfc3Rha2UgKmFiaV9yb3V0ZV9hY2NydWVSZXdhcmRzICphYmlfcm91dGVfY2xhaW1SZXdhcmRzICphYmlfcm91dGVfdW5zdGFrZSAqYWJpX3JvdXRlX3NldEZyZWV6ZSAqYWJpX3JvdXRlX2dhcwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycgoKKmNhbGxfRGVsZXRlQXBwbGljYXRpb246CglwdXNoYnl0ZXMgMHgyNDg3YzMyYyAvLyBtZXRob2QgImRlbGV0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9kZWxldGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIERlbGV0ZUFwcGxpY2F0aW9uCgllcnI=","clear":"I3ByYWdtYSB2ZXJzaW9uIDEx"},"byteCode":{"approval":"CyAOAAEGrAIFOCAEoI0GgICapuqv4wHQD5BO59oBfyYWAwqBAQAHc3Rha2VycwpudW1TdGFrZXJzDXJld2FyZEFzc2V0SWQLdG90YWxTdGFrZWQIAAAAAAAAAAAMYWRtaW5BZGRyZXNzEmluamVjdGVkQVNBUmV3YXJkcw9pbmplY3RvckFkZHJlc3MTaW5qZWN0ZWR4VVNEUmV3YXJkcwEADnBhaWRBU0FSZXdhcmRzC3hVU0RBc3NldElkDXN0YWtlZEFzc2V0SWQKcG9vbEFjdGl2ZQpwb29sRW5kaW5nBmZyZWV6ZRFsYXN0SW5qZWN0aW9uVGltZQ90cmVhc3VyeUFkZHJlc3MOcGxhdGZvcm1GZWVCcHMQcGFpZFBsYXRmb3JtRmVlczEYFCQLMRkIjQwNCwAAAAAAAAAADcEM/QAAAAAAAAAAAAAANhoDSRUhBhJENhoCSRUhBhJENhoBSRUhBhJEiAACI0OKAwAnB4v/ZycTi/5nJwmL/WeAD2NvbnRyYWN0VmVyc2lvbiEKZ4k2GgQXNhoDFzYaAhc2GgEXiAACI0OKBAAxACcHZBJEJw6L/2cnBIv+ZycFImcnESInCyJPAlRnJwgiZycKImcrImcnDyInCyJPAlRnJxAiJwsiTwJUZycNi/1nJxIyB2cnDCJnJxSL/GexIQeyEIv/shEyCrIUIrISIrIBs7EhB7IQJw1kshEyCrIUIrISIrIBs7EhB7IQi/6yETIKshQishIisgGziTYaAUkVIQYSRIgAAiNDigEAMQAnB2QSRCcHi/9niYgAAiNDigAAMQAnB2QSRCcPIycLIk8CVGeJiAACI0OKAAAxACcHZBJEJxAjJwsiTwJUZycPIicLIk8CVGeJNhoBF4gAAiNDigEAMQAnCWQSRCcIi/9niTYaAReIAAIjQ4oBADEAJwlkEkQnDIv/Z4k2GgEXiAACI0OKAQAxACcJZBJEJwqL/2eJNhoBSRUhBhJEiAACI0OKAQAxACcJZBJEJxOL/2eJNhoBSRUhBhJEiAACI0OKAQAxACcJZBJEJwmL/2eJNhoBF4gAAiNDigEAMQAnCWQSRCuL/2eJNhoBSRUjEkQiU4gAAiNDigEAMQAnCWQSRCcRi/8nCyJPAlRniTYaAUkVIxJEIlOIAAIjQ4oBADEAJwdkEkQnEIv/JwsiTwJUZ4mKAQGBxBOL/4GQAwsIiYAEFR98dYgABFCwI0OKAAEpSSEIjAAnBGQiE0EAB4sAIQgIjAAhCIsACCEMiP/DCCENiP+9CIwBiwEWjABGAYkxFiMJSTgQIxJEiAACI0OKAQApSSq9TEgURDEAJwdkEkQhCIwAJwRkIhNBAAeLACEICIwAIQiLAAghDIj/dAghDYj/bgiMAYv/OAcyChJEi/84CIsBEkQqgeDaAblIgA5taW5pbXVtQmFsYW5jZYsBZycEZCITQQAVsSEHshAnBGSyETIKshQishIisgGziTYaAhc2GgEXMRYjCUk4ECEHEkSIAAIjQ4oDACmL/zgUMgoSRIv/OBEnBGQSRIv/OBKL/hJEi/4nFGQdIiELH0hITBREjAAnCElki/4IiwAJZycSMgdniwCIAASIA6mJigEAsSEHshCL/7ISJxNkshQnBGSyETIKsgAisgGzJxVJZIv/CGeJigAAKUcDMgonBGRwAEiMACKMAScEZCcOZBJBAAUnBWSMAYsAJwxkJwhkCIsBCA1BADiLACcMZAmLAQknCGQJjAKLAicUZB0iIQsfSEhMFESMA4sCK2QNQQAQJwhJZIsCCIsDCWeLA4j/b4k2GgEXMRYjCUk4ECEHEkSIAAIjQ4oCAIv/OBQyChJEi/84EScNZBJEi/84Eov+EkQnCklki/4IZycSMgdnMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4j/PDIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOIAqGJiAACI0OKAAApSTEAJwdkEkQnBWQiEkQqvDIKJwRkcABIjACLACINQQAcsSEHshAnBGSyEScHZLIUiwCyEicHZLIVIrIBszIKcwBIMgpzAUgJIQoJjAGxI7IQiwGyCCcHZLIHMgqyAIHoB7IBs4k2GgEXMRYjCUk4ECEHEkSIAAIjQ4oCAClHAov+Ig1EJw9kIlNEJxBkIlMURIj+gjIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOIAecyDCUMQQASsSSyECKyAShJsh6yHyEEshmzi/84ADEAEkSL/zgUMgoSRIv/OBEnDmQSRIv/OBKL/hJEIowAMgwlDEEAErEkshAisgEoSbIesh8hBLIZsyKMAYsBgfQDDEEBf4sAQQADQgF3iwEhBQsiCCEGKk4CujEAEkEAoTIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLASEFCyEFKk4CuowCiwIhBosCVyAIF4v/OBIIFl2MAjIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwEhBQuLAipOArsyDCUMQQASsSSyECKyAShJsh6yHyEEshmzJwVki/84EggnBUxnI4wAQgChiwEhBQsiCCEGKk4CujIDEkEAjjIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMnBUlki/84EghnMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4sBIQULMQCL/zgSFlAnBlAnBlAqTgK7MgwlDEEAErEkshAisgEoSbIesh8hBLIZsytJZCMIZzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMjjAAyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwEjCIwBQv54iYgAAiNDigAAKUcHJxFkIlMUSUEABycQZCJTFBBJQQAGJw9kIlMQQQG0JwhkjAAnCmSMATIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMijAKLAitkDEEBRTIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLAiEFCyEGCIEIKk4CuheMA4sDIg1BAQuLAiEFCyEFKk4CuowEiwMhCR0iJwVkH0hITBREjAUyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwArZA1BAGGLAIsFHSIhCR9ISEwURIwGiwYiEkEAAyOMBicISWSLBglnJwxJZIsGCGcnBGQnDmQSQQAciwQhBosEVyAIF4sGCBZdjAQnBUlkiwYIZ0IAEYsEgSiLBFcoCBeLBggWXYwEiwEiDUEAWYsBiwUdIiEJH0hITBREjAeLByISQQADI4wHJwpJZIsHCWcnDWQnDmQSQQAciwQhBosEVyAIF4sHCBZdjAQnBUlkiwcIZ0IAEYsEgTCLBFcwCBeLBwgWXYwEiwIhBQuLBCpOAruLAiMIjAJC/rMyDCUMQQASsSSyECKyAShJsh6yHyEEshmzJwpkIg1BAByxIQeyECcNZLIRJwlkshQyCrIAJwpkshIisgGzJwoiZ4mKAQEpIowAiwArZAxBAEMyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwAhBQsiCCEGKk4Cuov/EkEADosAIQULIQUqTgK6QgAUiwAjCIwAQv+1MgMnBlAnBlAnBlCMAImIAAIjQ4oAACmI+joyDCUMQQASsSSyECKyAShJsh6yHyEEshmziP2fMgwlDEEAErEkshAisgEoSbIesh8hBLIZszEAiP9ajACLAFcoCBciDUEAMrEhB7IQJwRkshExALIUMgqyAIsAVygIF7ISIrIBsycMSWSLAFcoCBcJZ4sAJwZcKIwAiwBXMAgXIg1BACaxIQeyECcNZLIRMQCyFDIKsgCLAFcwCBeyEiKyAbOLACcGXDCMAIsAiwBXACCIAjwyDCUMQQASsSSyECKyAShJsh6yHyEEshmziTYaAReIAAIjQ4oBAClHBIj5WjIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOI/L8ijACLACtkDEEBmzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLACEFCyEFKk4CuowBiwFXACAxABJBAWGLAVcgCBciDUEAKrEhB7IQJw5kshExALIUMgqyAIv/IhJBAAmLAVcgCBdCAAKL/7ISIrIBs4sBVygIFyINQQAmsSEHshAnBGSyETEAshQyCrIAiwFXKAgXshIisgGziwEnBlwojAGLAVcwCBciDUEAJrEhB7IQJw1kshExALIUMgqyAIsBVzAIF7ISIrIBs4sBJwZcMIwBJwVJZIv/IhJBAAmLAVcgCBdCAAKL/wlnMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4v/IhJBAG8yAycGUCcGUCcGUIwCiwKLAVcAIIgA0itkIwkhBQsiCCEGKk4Cuoj9ZIwDK2QjCSEFCyIIIQYqTgK6iABfjAQyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwCLA4gA/YsEiwKIAPYrSWQjCWdCABmLASEGiwFXIAgXi/8JFl2MAYsBJwZcKIwBiwGLAVcAIIgAV4sAIwiMAEL+XYmKAQEpIowAiwArZAxBADoyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwAhBQsiCCEGKk4Cuov/EkEABYsAQgAKiwAjCIwAQv++IowAiYoCACkijACLACtkDEEAYzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLACEFCyIIIQYqTgK6i/8SQQAPiwAhBQuL/ipOAruJQgAfiwAhBQsiCCEGKk4CujIDEkEADIsAIQULi/4qTgK7iYsAIwiMAEL/lYmKAgCL/iEFC4v/Kk4Cu4k2GgFJFSMSRCJTiAACI0OKAQAxACcJZBJEJxGL/ycLIk8CVGeJiAACI0OKAACJgAQ15EwfNhoAjgHy9wCABBwFermABKP+pA+ABF+E5guABLcs82CABGgqxpOABOf+nM6ABMR3pE2ABBuSQVmABC2dfKuABPad13KABNJJY7iABNsoQGGABExDZyaABEfPzASABDRwB+uABMa6jxmABPTrSgOABOpLyleABKWua9GABIE86JqABLtrxuOABDFyyp02GgCOFvKI8y/zTfNn84vzpPO989bz9PQS9Cr0T/SC9ML1UfZC9yb5U/uR/Gv/D/80AIAEJIfDLDYaAI4B9qoA","clear":"Cw=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":1,"patch":2,"commitHash":"088f89dd"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


// Type definitions for ARC-56 structs

export type MbrReturn = {
  mbrPayment: bigint
}


/**
 * Converts the ABI tuple representation of a mbrReturn to the struct representation
 */
export function MbrReturnFromTuple(abiTuple: [bigint]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.mbrReturn, APP_SPEC.structs) as MbrReturn
}

/**
 * The argument types for the PermissionlessInjectedRewardsPool contract
 */
export type PermissionlessInjectedRewardsPoolArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication(address,address,address)void': {
      adminAddress: string
      treasuryAddress: string
      injectorAddress: string
    }
    'initApplication(uint64,uint64,uint64,uint64)void': {
      stakedAsset: bigint | number
      rewardAssetId: bigint | number
      xUsdAssetId: bigint | number
      platformFeeBps: bigint | number
    }
    'updateAdminAddress(address)void': {
      adminAddress: string
    }
    'setPoolActive()void': Record<string, never>
    'setPoolEnding()void': Record<string, never>
    'updateInjectedASARewards(uint64)void': {
      injectedAsaRewards: bigint | number
    }
    'updatePaidASARewards(uint64)void': {
      paidAsaRewards: bigint | number
    }
    'updateInjectedxUSDRewards(uint64)void': {
      injectedxUsdRewards: bigint | number
    }
    'updateTreasuryAddress(address)void': {
      treasuryAddress: string
    }
    'updateInjectorAddress(address)void': {
      injectorAddress: string
    }
    'updateNumStakers(uint64)void': {
      numStakers: bigint | number
    }
    'updateFreeze(bool)void': {
      freeze: boolean
    }
    'updatePoolEnding(bool)void': {
      poolEnding: boolean
    }
    'getMBRForPoolCreation()(uint64)': Record<string, never>
    'initStorage(pay)void': {
      mbrPayment: AppMethodCallTransactionArgument
    }
    'injectRewards(axfer,uint64,uint64)void': {
      rewardTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
      rewardAssetId: bigint | number
    }
    'injectxUSD(axfer,uint64)void': {
      xUsdTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
    }
    'deleteApplication()void': Record<string, never>
    'stake(axfer,uint64)void': {
      stakeTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
    }
    'accrueRewards()void': Record<string, never>
    'claimRewards()void': Record<string, never>
    'unstake(uint64)void': {
      quantity: bigint | number
    }
    'setFreeze(bool)void': {
      enabled: boolean
    }
    'gas()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication(address,address,address)void': [adminAddress: string, treasuryAddress: string, injectorAddress: string]
    'initApplication(uint64,uint64,uint64,uint64)void': [stakedAsset: bigint | number, rewardAssetId: bigint | number, xUsdAssetId: bigint | number, platformFeeBps: bigint | number]
    'updateAdminAddress(address)void': [adminAddress: string]
    'setPoolActive()void': []
    'setPoolEnding()void': []
    'updateInjectedASARewards(uint64)void': [injectedAsaRewards: bigint | number]
    'updatePaidASARewards(uint64)void': [paidAsaRewards: bigint | number]
    'updateInjectedxUSDRewards(uint64)void': [injectedxUsdRewards: bigint | number]
    'updateTreasuryAddress(address)void': [treasuryAddress: string]
    'updateInjectorAddress(address)void': [injectorAddress: string]
    'updateNumStakers(uint64)void': [numStakers: bigint | number]
    'updateFreeze(bool)void': [freeze: boolean]
    'updatePoolEnding(bool)void': [poolEnding: boolean]
    'getMBRForPoolCreation()(uint64)': []
    'initStorage(pay)void': [mbrPayment: AppMethodCallTransactionArgument]
    'injectRewards(axfer,uint64,uint64)void': [rewardTxn: AppMethodCallTransactionArgument, quantity: bigint | number, rewardAssetId: bigint | number]
    'injectxUSD(axfer,uint64)void': [xUsdTxn: AppMethodCallTransactionArgument, quantity: bigint | number]
    'deleteApplication()void': []
    'stake(axfer,uint64)void': [stakeTxn: AppMethodCallTransactionArgument, quantity: bigint | number]
    'accrueRewards()void': []
    'claimRewards()void': []
    'unstake(uint64)void': [quantity: bigint | number]
    'setFreeze(bool)void': [enabled: boolean]
    'gas()void': []
  }
}

/**
 * The return type for each method
 */
export type PermissionlessInjectedRewardsPoolReturns = {
  'createApplication(address,address,address)void': void
  'initApplication(uint64,uint64,uint64,uint64)void': void
  'updateAdminAddress(address)void': void
  'setPoolActive()void': void
  'setPoolEnding()void': void
  'updateInjectedASARewards(uint64)void': void
  'updatePaidASARewards(uint64)void': void
  'updateInjectedxUSDRewards(uint64)void': void
  'updateTreasuryAddress(address)void': void
  'updateInjectorAddress(address)void': void
  'updateNumStakers(uint64)void': void
  'updateFreeze(bool)void': void
  'updatePoolEnding(bool)void': void
  'getMBRForPoolCreation()(uint64)': MbrReturn
  'initStorage(pay)void': void
  'injectRewards(axfer,uint64,uint64)void': void
  'injectxUSD(axfer,uint64)void': void
  'deleteApplication()void': void
  'stake(axfer,uint64)void': void
  'accrueRewards()void': void
  'claimRewards()void': void
  'unstake(uint64)void': void
  'setFreeze(bool)void': void
  'gas()void': void
}

/**
 * Defines the types of available calls and state of the PermissionlessInjectedRewardsPool smart contract.
 */
export type PermissionlessInjectedRewardsPoolTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication(address,address,address)void' | 'createApplication', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['createApplication(address,address,address)void']
    }>
    & Record<'initApplication(uint64,uint64,uint64,uint64)void' | 'initApplication', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64,uint64)void']
    }>
    & Record<'updateAdminAddress(address)void' | 'updateAdminAddress', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateAdminAddress(address)void']
    }>
    & Record<'setPoolActive()void' | 'setPoolActive', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']
      returns: PermissionlessInjectedRewardsPoolReturns['setPoolActive()void']
    }>
    & Record<'setPoolEnding()void' | 'setPoolEnding', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']
      returns: PermissionlessInjectedRewardsPoolReturns['setPoolEnding()void']
    }>
    & Record<'updateInjectedASARewards(uint64)void' | 'updateInjectedASARewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateInjectedASARewards(uint64)void']
    }>
    & Record<'updatePaidASARewards(uint64)void' | 'updatePaidASARewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updatePaidASARewards(uint64)void']
    }>
    & Record<'updateInjectedxUSDRewards(uint64)void' | 'updateInjectedxUSDRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateInjectedxUSDRewards(uint64)void']
    }>
    & Record<'updateTreasuryAddress(address)void' | 'updateTreasuryAddress', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateTreasuryAddress(address)void']
    }>
    & Record<'updateInjectorAddress(address)void' | 'updateInjectorAddress', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateInjectorAddress(address)void']
    }>
    & Record<'updateNumStakers(uint64)void' | 'updateNumStakers', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateNumStakers(uint64)void']
    }>
    & Record<'updateFreeze(bool)void' | 'updateFreeze', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateFreeze(bool)void']
    }>
    & Record<'updatePoolEnding(bool)void' | 'updatePoolEnding', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updatePoolEnding(bool)void']
    }>
    & Record<'getMBRForPoolCreation()(uint64)' | 'getMBRForPoolCreation', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']
      returns: PermissionlessInjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)']
    }>
    & Record<'initStorage(pay)void' | 'initStorage', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']
      returns: PermissionlessInjectedRewardsPoolReturns['initStorage(pay)void']
    }>
    & Record<'injectRewards(axfer,uint64,uint64)void' | 'injectRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void']
    }>
    & Record<'injectxUSD(axfer,uint64)void' | 'injectxUSD', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['injectxUSD(axfer,uint64)void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']
      returns: PermissionlessInjectedRewardsPoolReturns['deleteApplication()void']
    }>
    & Record<'stake(axfer,uint64)void' | 'stake', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['stake(axfer,uint64)void']
    }>
    & Record<'accrueRewards()void' | 'accrueRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']
      returns: PermissionlessInjectedRewardsPoolReturns['accrueRewards()void']
    }>
    & Record<'claimRewards()void' | 'claimRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']
      returns: PermissionlessInjectedRewardsPoolReturns['claimRewards()void']
    }>
    & Record<'unstake(uint64)void' | 'unstake', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['unstake(uint64)void']
    }>
    & Record<'setFreeze(bool)void' | 'setFreeze', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']
      returns: PermissionlessInjectedRewardsPoolReturns['setFreeze(bool)void']
    }>
    & Record<'gas()void' | 'gas', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['gas()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']
      returns: PermissionlessInjectedRewardsPoolReturns['gas()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        stakedAssetId: bigint
        rewardAssetId: bigint
        xUsdAssetId: bigint
        totalStaked: bigint
        injectedAsaRewards: bigint
        paidAsaRewards: bigint
        injectedxUsdRewards: bigint
        adminAddress: string
        treasuryAddress: string
        injectorAddress: string
        minimumBalance: bigint
        numStakers: bigint
        freeze: boolean
        poolActive: boolean
        poolEnding: boolean
        lastInjectionTime: bigint
        contractVersion: bigint
        platformFeeBps: bigint
        paidPlatformFees: bigint
      }
      maps: {}
    }
    box: {
      keys: {
        stakers: [[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]]
      }
      maps: {}
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type PermissionlessInjectedRewardsPoolSignatures = keyof PermissionlessInjectedRewardsPoolTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type PermissionlessInjectedRewardsPoolNonVoidMethodSignatures = keyof PermissionlessInjectedRewardsPoolTypes['methods'] extends infer T ? T extends keyof PermissionlessInjectedRewardsPoolTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the PermissionlessInjectedRewardsPool smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends PermissionlessInjectedRewardsPoolSignatures> = PermissionlessInjectedRewardsPoolTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the PermissionlessInjectedRewardsPool smart contract to the method's return type
 */
export type MethodReturn<TSignature extends PermissionlessInjectedRewardsPoolSignatures> = PermissionlessInjectedRewardsPoolTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = PermissionlessInjectedRewardsPoolTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = PermissionlessInjectedRewardsPoolTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type PermissionlessInjectedRewardsPoolCreateCallParams =
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & {method: 'createApplication(address,address,address)void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type PermissionlessInjectedRewardsPoolDeleteCallParams =
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type PermissionlessInjectedRewardsPoolDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: PermissionlessInjectedRewardsPoolCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: PermissionlessInjectedRewardsPoolDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the PermissionlessInjectedRewardsPool smart contract
 */
export abstract class PermissionlessInjectedRewardsPoolParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends PermissionlessInjectedRewardsPoolCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication(address,address,address)void':
            return PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the PermissionlessInjectedRewardsPool smart contract using the createApplication(address,address,address)void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication(address,address,address)void' as const,
          args: Array.isArray(params.args) ? params.args : [params.args.adminAddress, params.args.treasuryAddress, params.args.injectorAddress],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends PermissionlessInjectedRewardsPoolDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the PermissionlessInjectedRewardsPool smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the initApplication(uint64,uint64,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initApplication(uint64,uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakedAsset, params.args.rewardAssetId, params.args.xUsdAssetId, params.args.platformFeeBps],
    }
  }
  /**
   * Constructs a no op call for the updateAdminAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateAdminAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateAdminAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.adminAddress],
    }
  }
  /**
   * Constructs a no op call for the setPoolActive()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setPoolActive(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setPoolActive()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the setPoolEnding()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setPoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setPoolEnding()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the updateInjectedASARewards(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateInjectedAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateInjectedASARewards(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.injectedAsaRewards],
    }
  }
  /**
   * Constructs a no op call for the updatePaidASARewards(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updatePaidAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updatePaidASARewards(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.paidAsaRewards],
    }
  }
  /**
   * Constructs a no op call for the updateInjectedxUSDRewards(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateInjectedxUsdRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateInjectedxUSDRewards(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.injectedxUsdRewards],
    }
  }
  /**
   * Constructs a no op call for the updateTreasuryAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateTreasuryAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateTreasuryAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.treasuryAddress],
    }
  }
  /**
   * Constructs a no op call for the updateInjectorAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateInjectorAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateInjectorAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.injectorAddress],
    }
  }
  /**
   * Constructs a no op call for the updateNumStakers(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateNumStakers(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateNumStakers(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.numStakers],
    }
  }
  /**
   * Constructs a no op call for the updateFreeze(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateFreeze(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.freeze],
    }
  }
  /**
   * Constructs a no op call for the updatePoolEnding(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updatePoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updatePoolEnding(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.poolEnding],
    }
  }
  /**
   * Constructs a no op call for the getMBRForPoolCreation()(uint64) ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getMbrForPoolCreation(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getMBRForPoolCreation()(uint64)' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the initStorage(pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initStorage(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initStorage(pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.mbrPayment],
    }
  }
  /**
   * Constructs a no op call for the injectRewards(axfer,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static injectRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'injectRewards(axfer,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.rewardTxn, params.args.quantity, params.args.rewardAssetId],
    }
  }
  /**
   * Constructs a no op call for the injectxUSD(axfer,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static injectxUsd(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'injectxUSD(axfer,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.xUsdTxn, params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the stake(axfer,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static stake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'stake(axfer,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakeTxn, params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the accrueRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static accrueRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'accrueRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the claimRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static claimRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'claimRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the unstake(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static unstake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'unstake(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the setFreeze(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setFreeze(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.enabled],
    }
  }
  /**
   * Constructs a no op call for the gas()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gas(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gas()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the PermissionlessInjectedRewardsPool smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class PermissionlessInjectedRewardsPoolFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `PermissionlessInjectedRewardsPoolFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClient {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new PermissionlessInjectedRewardsPoolClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new PermissionlessInjectedRewardsPoolClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the PermissionlessInjectedRewardsPool smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: PermissionlessInjectedRewardsPoolDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? PermissionlessInjectedRewardsPoolParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (PermissionlessInjectedRewardsPoolCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? PermissionlessInjectedRewardsPoolParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (PermissionlessInjectedRewardsPoolDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new PermissionlessInjectedRewardsPoolClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the PermissionlessInjectedRewardsPool smart contract using the createApplication(address,address,address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.params.create(PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the PermissionlessInjectedRewardsPool smart contract using the createApplication(address,address,address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.createTransaction.create(PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the PermissionlessInjectedRewardsPool smart contract using an ABI method call using the createApplication(address,address,address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        const result = await this.appFactory.send.create(PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['createApplication(address,address,address)void']) }, appClient: new PermissionlessInjectedRewardsPoolClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the PermissionlessInjectedRewardsPool smart contract
 */
export class PermissionlessInjectedRewardsPoolClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `PermissionlessInjectedRewardsPoolClient`
   *
   * @param appClient An `AppClient` instance which has been created with the PermissionlessInjectedRewardsPool app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `PermissionlessInjectedRewardsPoolClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends PermissionlessInjectedRewardsPoolNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `PermissionlessInjectedRewardsPoolClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<PermissionlessInjectedRewardsPoolClient> {
    return new PermissionlessInjectedRewardsPoolClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `PermissionlessInjectedRewardsPoolClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<PermissionlessInjectedRewardsPoolClient> {
    return new PermissionlessInjectedRewardsPoolClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClient {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateAdminAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolActive()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setPoolActive: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolActive(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolEnding()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setPoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateInjectedAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePaidASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updatePaidAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePaidAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedxUSDRewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateInjectedxUsdRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedxUsdRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateTreasuryAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateTreasuryAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateTreasuryAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectorAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateInjectorAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectorAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateNumStakers(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateNumStakers: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateNumStakers(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePoolEnding(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updatePoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getMbrForPoolCreation: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initStorage: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    injectRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectxUSD(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    injectxUsd: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.injectxUsd(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    stake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    accrueRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    claimRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    unstake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gas: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateAdminAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolActive()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setPoolActive: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolActive(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolEnding()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setPoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateInjectedAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePaidASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updatePaidAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePaidAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedxUSDRewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateInjectedxUsdRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedxUsdRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateTreasuryAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateTreasuryAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateTreasuryAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectorAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateInjectorAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectorAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateNumStakers(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateNumStakers: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateNumStakers(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePoolEnding(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updatePoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getMbrForPoolCreation: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initStorage: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    injectRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectxUSD(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    injectxUsd: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.injectxUsd(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    stake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    accrueRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    claimRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    unstake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gas: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initApplication: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.initApplication(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateAdminAddress: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateAdminAddress(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateAdminAddress(address)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolActive()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setPoolActive: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolActive(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setPoolActive()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolEnding()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setPoolEnding: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolEnding(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setPoolEnding()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateInjectedAsaRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedAsaRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateInjectedASARewards(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePaidASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updatePaidAsaRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePaidAsaRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updatePaidASARewards(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedxUSDRewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateInjectedxUsdRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedxUsdRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateInjectedxUSDRewards(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateTreasuryAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateTreasuryAddress: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateTreasuryAddress(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateTreasuryAddress(address)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectorAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateInjectorAddress: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectorAddress(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateInjectorAddress(address)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateNumStakers(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateNumStakers: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateNumStakers(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateNumStakers(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateFreeze: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateFreeze(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateFreeze(bool)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePoolEnding(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updatePoolEnding: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePoolEnding(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updatePoolEnding(bool)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getMbrForPoolCreation: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initStorage: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.initStorage(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['initStorage(pay)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    injectRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.injectRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectxUSD(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    injectxUsd: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.injectxUsd(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['injectxUSD(axfer,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    stake: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.stake(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['stake(axfer,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    accrueRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.accrueRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['accrueRewards()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    claimRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.claimRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['claimRewards()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    unstake: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.unstake(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['unstake(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setFreeze: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setFreeze(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setFreeze(bool)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gas: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.gas(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['gas()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new PermissionlessInjectedRewardsPoolClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current PermissionlessInjectedRewardsPool app
   */
  state = {
    /**
     * Methods to access global state for the current PermissionlessInjectedRewardsPool app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          stakedAssetId: result.stakedAssetId,
          rewardAssetId: result.rewardAssetId,
          xUsdAssetId: result.xUSDAssetId,
          totalStaked: result.totalStaked,
          injectedAsaRewards: result.injectedASARewards,
          paidAsaRewards: result.paidASARewards,
          injectedxUsdRewards: result.injectedxUSDRewards,
          adminAddress: result.adminAddress,
          treasuryAddress: result.treasuryAddress,
          injectorAddress: result.injectorAddress,
          minimumBalance: result.minimumBalance,
          numStakers: result.numStakers,
          freeze: result.freeze,
          poolActive: result.poolActive,
          poolEnding: result.poolEnding,
          lastInjectionTime: result.lastInjectionTime,
          contractVersion: result.contractVersion,
          platformFeeBps: result.platformFeeBps,
          paidPlatformFees: result.paidPlatformFees,
        }
      },
      /**
       * Get the current value of the stakedAssetId key in global state
       */
      stakedAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("stakedAssetId")) as bigint | undefined },
      /**
       * Get the current value of the rewardAssetId key in global state
       */
      rewardAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("rewardAssetId")) as bigint | undefined },
      /**
       * Get the current value of the xUSDAssetId key in global state
       */
      xUsdAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("xUSDAssetId")) as bigint | undefined },
      /**
       * Get the current value of the totalStaked key in global state
       */
      totalStaked: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("totalStaked")) as bigint | undefined },
      /**
       * Get the current value of the injectedASARewards key in global state
       */
      injectedAsaRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("injectedASARewards")) as bigint | undefined },
      /**
       * Get the current value of the paidASARewards key in global state
       */
      paidAsaRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("paidASARewards")) as bigint | undefined },
      /**
       * Get the current value of the injectedxUSDRewards key in global state
       */
      injectedxUsdRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("injectedxUSDRewards")) as bigint | undefined },
      /**
       * Get the current value of the adminAddress key in global state
       */
      adminAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("adminAddress")) as string | undefined },
      /**
       * Get the current value of the treasuryAddress key in global state
       */
      treasuryAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("treasuryAddress")) as string | undefined },
      /**
       * Get the current value of the injectorAddress key in global state
       */
      injectorAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("injectorAddress")) as string | undefined },
      /**
       * Get the current value of the minimumBalance key in global state
       */
      minimumBalance: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("minimumBalance")) as bigint | undefined },
      /**
       * Get the current value of the numStakers key in global state
       */
      numStakers: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("numStakers")) as bigint | undefined },
      /**
       * Get the current value of the freeze key in global state
       */
      freeze: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("freeze")) as boolean | undefined },
      /**
       * Get the current value of the poolActive key in global state
       */
      poolActive: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("poolActive")) as boolean | undefined },
      /**
       * Get the current value of the poolEnding key in global state
       */
      poolEnding: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("poolEnding")) as boolean | undefined },
      /**
       * Get the current value of the lastInjectionTime key in global state
       */
      lastInjectionTime: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("lastInjectionTime")) as bigint | undefined },
      /**
       * Get the current value of the contractVersion key in global state
       */
      contractVersion: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("contractVersion")) as bigint | undefined },
      /**
       * Get the current value of the platformFeeBps key in global state
       */
      platformFeeBps: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("platformFeeBps")) as bigint | undefined },
      /**
       * Get the current value of the paidPlatformFees key in global state
       */
      paidPlatformFees: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("paidPlatformFees")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current PermissionlessInjectedRewardsPool app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
          stakers: result.stakers,
        }
      },
      /**
       * Get the current value of the stakers key in box state
       */
      stakers: async (): Promise<[[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]] | undefined> => { return (await this.appClient.state.box.getValue("stakers")) as [[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]] | undefined },
    },
  }

  public newGroup(): PermissionlessInjectedRewardsPoolComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a initApplication(uint64,uint64,uint64,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      initApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initApplication(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateAdminAddress(address)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateAdminAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateAdminAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setPoolActive()void method call against the PermissionlessInjectedRewardsPool contract
       */
      setPoolActive(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setPoolActive(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setPoolEnding()void method call against the PermissionlessInjectedRewardsPool contract
       */
      setPoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setPoolEnding(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateInjectedASARewards(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateInjectedAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateInjectedAsaRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updatePaidASARewards(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updatePaidAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updatePaidAsaRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateInjectedxUSDRewards(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateInjectedxUsdRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateInjectedxUsdRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateTreasuryAddress(address)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateTreasuryAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateTreasuryAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateInjectorAddress(address)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateInjectorAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateInjectorAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateNumStakers(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateNumStakers(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateNumStakers(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateFreeze(bool)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateFreeze(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updatePoolEnding(bool)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updatePoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updatePoolEnding(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a getMBRForPoolCreation()(uint64) method call against the PermissionlessInjectedRewardsPool contract
       */
      getMbrForPoolCreation(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getMbrForPoolCreation(params)))
        resultMappers.push((v) => client.decodeReturnValue('getMBRForPoolCreation()(uint64)', v))
        return this
      },
      /**
       * Add a initStorage(pay)void method call against the PermissionlessInjectedRewardsPool contract
       */
      initStorage(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initStorage(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a injectRewards(axfer,uint64,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      injectRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.injectRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a injectxUSD(axfer,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      injectxUsd(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.injectxUsd(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a stake(axfer,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      stake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.stake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a accrueRewards()void method call against the PermissionlessInjectedRewardsPool contract
       */
      accrueRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.accrueRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a claimRewards()void method call against the PermissionlessInjectedRewardsPool contract
       */
      claimRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.claimRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a unstake(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      unstake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.unstake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setFreeze(bool)void method call against the PermissionlessInjectedRewardsPool contract
       */
      setFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setFreeze(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gas()void method call against the PermissionlessInjectedRewardsPool contract
       */
      gas(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gas(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the PermissionlessInjectedRewardsPool contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as PermissionlessInjectedRewardsPoolComposer
  }
}
export type PermissionlessInjectedRewardsPoolComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the initApplication(uint64,uint64,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initApplication(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64,uint64)void'] | undefined]>

  /**
   * Calls the updateAdminAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateAdminAddress(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateAdminAddress(address)void'] | undefined]>

  /**
   * Calls the setPoolActive()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setPoolActive(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setPoolActive()void'] | undefined]>

  /**
   * Calls the setPoolEnding()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setPoolEnding(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setPoolEnding()void'] | undefined]>

  /**
   * Calls the updateInjectedASARewards(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateInjectedAsaRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateInjectedASARewards(uint64)void'] | undefined]>

  /**
   * Calls the updatePaidASARewards(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updatePaidAsaRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updatePaidASARewards(uint64)void'] | undefined]>

  /**
   * Calls the updateInjectedxUSDRewards(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateInjectedxUsdRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateInjectedxUSDRewards(uint64)void'] | undefined]>

  /**
   * Calls the updateTreasuryAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateTreasuryAddress(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateTreasuryAddress(address)void'] | undefined]>

  /**
   * Calls the updateInjectorAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateInjectorAddress(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateInjectorAddress(address)void'] | undefined]>

  /**
   * Calls the updateNumStakers(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateNumStakers(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateNumStakers(uint64)void'] | undefined]>

  /**
   * Calls the updateFreeze(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateFreeze(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateFreeze(bool)void'] | undefined]>

  /**
   * Calls the updatePoolEnding(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updatePoolEnding(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updatePoolEnding(bool)void'] | undefined]>

  /**
   * Calls the getMBRForPoolCreation()(uint64) ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getMbrForPoolCreation(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'] | undefined]>

  /**
   * Calls the initStorage(pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initStorage(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['initStorage(pay)void'] | undefined]>

  /**
   * Calls the injectRewards(axfer,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  injectRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'] | undefined]>

  /**
   * Calls the injectxUSD(axfer,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  injectxUsd(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['injectxUSD(axfer,uint64)void'] | undefined]>

  /**
   * Calls the stake(axfer,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  stake(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['stake(axfer,uint64)void'] | undefined]>

  /**
   * Calls the accrueRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  accrueRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['accrueRewards()void'] | undefined]>

  /**
   * Calls the claimRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  claimRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['claimRewards()void'] | undefined]>

  /**
   * Calls the unstake(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  unstake(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['unstake(uint64)void'] | undefined]>

  /**
   * Calls the setFreeze(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setFreeze(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setFreeze(bool)void'] | undefined]>

  /**
   * Calls the gas()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gas(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['gas()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): PermissionlessInjectedRewardsPoolComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): PermissionlessInjectedRewardsPoolComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns>>
}
export type PermissionlessInjectedRewardsPoolComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

