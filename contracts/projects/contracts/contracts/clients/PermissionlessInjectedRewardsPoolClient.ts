/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"PermissionlessInjectedRewardsPool","desc":"","methods":[{"name":"createApplication","args":[{"name":"adminAddress","type":"address"},{"name":"injectorAddress","type":"address"},{"name":"treasuryAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"initApplication","args":[{"name":"stakedAsset","type":"uint64"},{"name":"rewardAssetId","type":"uint64"},{"name":"xUSDFee","type":"uint64"},{"name":"xUSDAssetID","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateAdminAddress","args":[{"name":"adminAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setPoolActive","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setRewardParams","args":[{"name":"totalRewards","type":"uint64"},{"name":"rewardFrequency","type":"uint64"},{"name":"rewardPerInjection","type":"uint64"},{"name":"injectionType","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateInjectedASARewards","args":[{"name":"injectedASARewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updatePaidASARewards","args":[{"name":"paidASARewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateInjectedxUSDRewards","args":[{"name":"injectedxUSDRewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateTreasuryAddress","args":[{"name":"treasuryAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updatexUSDFee","args":[{"name":"xUSDFee","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateInjectorAddress","args":[{"name":"injectorAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateNumStakers","args":[{"name":"numStakers","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateFreeze","args":[{"name":"freeze","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updatePoolEnding","args":[{"name":"poolEnding","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setFeeWaived","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getMBRForPoolCreation","args":[],"returns":{"type":"(uint64)","struct":"mbrReturn"},"actions":{"create":[],"call":["NoOp"]}},{"name":"initStorage","args":[{"name":"mbrPayment","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"injectRewards","args":[{"name":"rewardTxn","type":"axfer"},{"name":"quantity","type":"uint64"},{"name":"rewardAssetId","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"pickupRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"injectxUSD","args":[{"name":"xUSDTxn","type":"axfer"},{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}},{"name":"stake","args":[{"name":"stakeTxn","type":"axfer"},{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"accrueRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"claimRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"unstake","args":[{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setFreeze","args":[{"name":"enabled","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gas","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{"mbrReturn":[{"name":"mbrPayment","type":"uint64"}]},"state":{"schema":{"global":{"bytes":7,"ints":16},"local":{"bytes":0,"ints":0}},"keys":{"global":{"stakedAssetId":{"key":"c3Rha2VkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"rewardAssetId":{"key":"cmV3YXJkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"xUSDAssetId":{"key":"eFVTREFzc2V0SWQ=","keyType":"AVMBytes","valueType":"uint64"},"totalStaked":{"key":"dG90YWxTdGFrZWQ=","keyType":"AVMBytes","valueType":"uint64"},"injectedASARewards":{"key":"aW5qZWN0ZWRBU0FSZXdhcmRz","keyType":"AVMBytes","valueType":"uint64"},"paidASARewards":{"key":"cGFpZEFTQVJld2FyZHM=","keyType":"AVMBytes","valueType":"uint64"},"injectedxUSDRewards":{"key":"aW5qZWN0ZWR4VVNEUmV3YXJkcw==","keyType":"AVMBytes","valueType":"uint64"},"adminAddress":{"key":"YWRtaW5BZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"injectorAddress":{"key":"aW5qZWN0b3JBZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"treasuryAddress":{"key":"dHJlYXN1cnlBZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"xUSDFee":{"key":"eFVTREZlZQ==","keyType":"AVMBytes","valueType":"uint64"},"feeWaived":{"key":"ZmVlV2FpdmVk","keyType":"AVMBytes","valueType":"bool"},"minimumBalance":{"key":"bWluaW11bUJhbGFuY2U=","keyType":"AVMBytes","valueType":"uint64"},"numStakers":{"key":"bnVtU3Rha2Vycw==","keyType":"AVMBytes","valueType":"uint64"},"freeze":{"key":"ZnJlZXpl","keyType":"AVMBytes","valueType":"bool"},"poolActive":{"key":"cG9vbEFjdGl2ZQ==","keyType":"AVMBytes","valueType":"bool"},"poolEnding":{"key":"cG9vbEVuZGluZw==","keyType":"AVMBytes","valueType":"bool"},"rewardFrequency":{"key":"cmV3YXJkRnJlcXVlbmN5","keyType":"AVMBytes","valueType":"uint64"},"rewardPerInjection":{"key":"cmV3YXJkUGVySW5qZWN0aW9u","keyType":"AVMBytes","valueType":"uint64"},"totalRewards":{"key":"dG90YWxSZXdhcmRz","keyType":"AVMBytes","valueType":"uint64"},"lastInjectionTime":{"key":"bGFzdEluamVjdGlvblRpbWU=","keyType":"AVMBytes","valueType":"uint64"},"contractVersion":{"key":"Y29udHJhY3RWZXJzaW9u","keyType":"AVMBytes","valueType":"uint64"},"injectionType":{"key":"aW5qZWN0aW9uVHlwZQ==","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{"stakers":{"key":"c3Rha2Vycw==","keyType":"AVMBytes","valueType":"(address,uint64,uint64,uint64)[500]"}}},"maps":{"global":{},"local":{},"box":{}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[0]},{"teal":2,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},{"teal":3,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341]},{"teal":15,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[342,343]},{"teal":16,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[344]},{"teal":17,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[345]},{"teal":18,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[346]},{"teal":19,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[347,348]},{"teal":20,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[349]},{"teal":21,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375]},{"teal":25,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[376]},{"teal":30,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[377,378,379]},{"teal":31,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[380]},{"teal":32,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[381]},{"teal":33,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[382,383]},{"teal":34,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[384]},{"teal":37,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","errorMessage":"argument 0 (treasuryAddress) for createApplication must be a address","pc":[385]},{"teal":40,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[386,387,388]},{"teal":41,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[389]},{"teal":42,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[390]},{"teal":43,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[391,392]},{"teal":44,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[393]},{"teal":47,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","errorMessage":"argument 1 (injectorAddress) for createApplication must be a address","pc":[394]},{"teal":50,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[395,396,397]},{"teal":51,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[398]},{"teal":52,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[399]},{"teal":53,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[400,401]},{"teal":54,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[402]},{"teal":57,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","errorMessage":"argument 2 (adminAddress) for createApplication must be a address","pc":[403]},{"teal":60,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[404,405,406]},{"teal":61,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[407]},{"teal":62,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[408]},{"teal":66,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[409,410,411]},{"teal":70,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:78","pc":[412,413]},{"teal":71,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:78","pc":[414,415]},{"teal":72,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:78","pc":[416]},{"teal":76,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[417]},{"teal":77,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[418,419]},{"teal":78,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[420]},{"teal":82,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:80","pc":[421,422]},{"teal":83,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:80","pc":[423,424]},{"teal":84,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:80","pc":[425]},{"teal":88,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:81","pc":[426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442]},{"teal":89,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:81","pc":[443,444,445]},{"teal":90,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:81","pc":[446]},{"teal":91,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[447]},{"teal":96,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[448,449,450]},{"teal":97,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[451]},{"teal":100,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[452,453,454]},{"teal":101,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[455]},{"teal":104,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[456,457,458]},{"teal":105,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[459]},{"teal":108,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[460,461,462]},{"teal":109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[463]},{"teal":112,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[464,465,466]},{"teal":113,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[467]},{"teal":114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[468]},{"teal":118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[469,470,471]},{"teal":122,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[472,473]},{"teal":123,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[474,475]},{"teal":124,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[476]},{"teal":125,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[477]},{"teal":128,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","errorMessage":"Only admin can init application","pc":[478]},{"teal":132,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:87","pc":[479,480]},{"teal":133,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:87","pc":[481,482]},{"teal":134,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:87","pc":[483]},{"teal":138,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:88","pc":[484,485]},{"teal":139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:88","pc":[486,487]},{"teal":140,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:88","pc":[488]},{"teal":144,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:89","pc":[489,490]},{"teal":145,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:89","pc":[491]},{"teal":146,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:89","pc":[492]},{"teal":150,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[493,494]},{"teal":151,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[495]},{"teal":152,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[496,497]},{"teal":153,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[498]},{"teal":154,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[499,500]},{"teal":155,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[501]},{"teal":156,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[502]},{"teal":160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:91","pc":[503,504]},{"teal":161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:91","pc":[505]},{"teal":162,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:91","pc":[506]},{"teal":166,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:92","pc":[507,508]},{"teal":167,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:92","pc":[509]},{"teal":168,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:92","pc":[510]},{"teal":172,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:93","pc":[511,512]},{"teal":173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:93","pc":[513]},{"teal":174,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:93","pc":[514]},{"teal":178,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:94","pc":[515,516]},{"teal":179,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:94","pc":[517,518]},{"teal":180,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:94","pc":[519]},{"teal":184,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[520,521]},{"teal":185,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[522]},{"teal":186,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[523,524]},{"teal":187,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[525]},{"teal":188,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[526,527]},{"teal":189,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[528]},{"teal":190,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[529]},{"teal":194,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[530,531]},{"teal":195,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[532]},{"teal":196,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[533,534]},{"teal":197,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[535]},{"teal":198,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[536,537]},{"teal":199,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[538]},{"teal":200,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[539]},{"teal":204,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[540,541]},{"teal":205,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[542]},{"teal":206,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[543,544]},{"teal":207,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[545]},{"teal":208,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[546,547]},{"teal":209,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[548]},{"teal":210,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[549]},{"teal":214,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:98","pc":[550,551]},{"teal":215,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:98","pc":[552,553]},{"teal":216,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:98","pc":[554]},{"teal":220,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:99","pc":[555,556]},{"teal":221,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:99","pc":[557]},{"teal":222,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:99","pc":[558]},{"teal":226,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[559,560]},{"teal":227,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[561]},{"teal":228,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[562]},{"teal":232,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:101","pc":[563,564]},{"teal":233,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:101","pc":[565]},{"teal":234,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:101","pc":[566]},{"teal":238,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:102","pc":[567,568]},{"teal":239,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:102","pc":[569]},{"teal":240,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:102","pc":[570]},{"teal":244,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:103","pc":[571,572]},{"teal":245,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:103","pc":[573,574]},{"teal":246,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:103","pc":[575]},{"teal":250,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:104","pc":[576,577]},{"teal":251,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:104","pc":[578]},{"teal":252,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:104","pc":[579]},{"teal":260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:106","pc":[580]},{"teal":261,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:106","pc":[581,582]},{"teal":262,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:106","pc":[583,584]},{"teal":266,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:107","pc":[585,586]},{"teal":267,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:107","pc":[587,588]},{"teal":271,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[589,590]},{"teal":272,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[591,592]},{"teal":276,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[593]},{"teal":277,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[594,595]},{"teal":280,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:106","pc":[596]},{"teal":281,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:106","pc":[597,598]},{"teal":284,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:106","pc":[599]},{"teal":292,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:111","pc":[600]},{"teal":293,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:111","pc":[601,602]},{"teal":294,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:111","pc":[603,604]},{"teal":298,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:112","pc":[605,606]},{"teal":299,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:112","pc":[607]},{"teal":300,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:112","pc":[608,609]},{"teal":304,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[610,611]},{"teal":305,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[612,613]},{"teal":309,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[614]},{"teal":310,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[615,616]},{"teal":313,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:111","pc":[617]},{"teal":314,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:111","pc":[618,619]},{"teal":317,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:111","pc":[620]},{"teal":318,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[621]},{"teal":323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[622,623,624]},{"teal":324,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[625]},{"teal":325,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[626]},{"teal":326,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[627,628]},{"teal":327,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[629]},{"teal":330,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","errorMessage":"argument 0 (adminAddress) for updateAdminAddress must be a address","pc":[630]},{"teal":333,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[631,632,633]},{"teal":334,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[634]},{"teal":335,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[635]},{"teal":339,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[636,637,638]},{"teal":343,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[639,640]},{"teal":344,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[641,642]},{"teal":345,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[643]},{"teal":346,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[644]},{"teal":349,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","errorMessage":"Only admin can update admin address","pc":[645]},{"teal":353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[646,647]},{"teal":354,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[648,649]},{"teal":355,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[650]},{"teal":356,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[651]},{"teal":361,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:124","pc":[652,653,654]},{"teal":362,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:124","pc":[655]},{"teal":363,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:124","pc":[656]},{"teal":367,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:124","pc":[657,658,659]},{"teal":371,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:125","pc":[660,661]},{"teal":372,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:125","pc":[662,663]},{"teal":373,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:125","pc":[664]},{"teal":374,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:125","pc":[665]},{"teal":377,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:125","errorMessage":"Only admin can set pool active","pc":[666]},{"teal":382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:126","pc":[667,668]},{"teal":383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:126","pc":[669]},{"teal":384,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:126","pc":[670]},{"teal":385,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:126","pc":[671]},{"teal":386,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:126","pc":[672]},{"teal":387,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:126","pc":[673,674,675]},{"teal":392,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[676,677]},{"teal":393,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[678,679]},{"teal":394,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[680]},{"teal":395,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[681,682]},{"teal":396,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[683]},{"teal":397,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[684,685]},{"teal":398,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[686]},{"teal":399,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[687]},{"teal":402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","errorMessage":"Insufficient balance","pc":[688]},{"teal":408,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:131","pc":[689,690]},{"teal":409,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:131","pc":[691]},{"teal":410,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:131","pc":[692]},{"teal":411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:131","pc":[693]},{"teal":412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:131","pc":[694,695,696]},{"teal":417,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[697,698]},{"teal":418,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[699]},{"teal":419,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[700]},{"teal":420,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[701]},{"teal":423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","errorMessage":"Total rewards not set","pc":[702]},{"teal":427,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[703,704]},{"teal":428,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[705]},{"teal":429,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[706]},{"teal":430,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[707]},{"teal":433,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","errorMessage":"Reward per injection not set","pc":[708]},{"teal":440,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:135","pc":[709]},{"teal":441,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:135","pc":[710]},{"teal":442,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:135","pc":[711,712]},{"teal":443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:135","pc":[713]},{"teal":444,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:135","pc":[714,715]},{"teal":445,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:135","pc":[716]},{"teal":446,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:135","pc":[717,718]},{"teal":447,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:135","pc":[719]},{"teal":448,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:135","pc":[720]},{"teal":451,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:134","errorMessage":"Insufficient rewards","pc":[721]},{"teal":456,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:140","pc":[722,723]},{"teal":457,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:140","pc":[724]},{"teal":458,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:140","pc":[725]},{"teal":459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:140","pc":[726]},{"teal":462,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:140","errorMessage":"Reward frequency not set","pc":[727]},{"teal":466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[728,729]},{"teal":467,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[730]},{"teal":468,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[731,732]},{"teal":469,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[733]},{"teal":470,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[734,735]},{"teal":471,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[736]},{"teal":472,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[737]},{"teal":481,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[738]},{"teal":482,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[739,740]},{"teal":483,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[741,742]},{"teal":487,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:144","pc":[743,744]},{"teal":488,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:144","pc":[745]},{"teal":489,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:144","pc":[746,747]},{"teal":493,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:145","pc":[748,749]},{"teal":494,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:145","pc":[750]},{"teal":495,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:145","pc":[751,752]},{"teal":499,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:146","pc":[753,754]},{"teal":500,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:146","pc":[755]},{"teal":501,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:146","pc":[756,757]},{"teal":505,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[758,759]},{"teal":506,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[760,761]},{"teal":509,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[762]},{"teal":510,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[763,764]},{"teal":513,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[765]},{"teal":514,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:124","pc":[766]},{"teal":519,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:155","pc":[767,768,769]},{"teal":520,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:155","pc":[770]},{"teal":523,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:154","pc":[771,772,773]},{"teal":524,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:154","pc":[774]},{"teal":527,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[775,776,777]},{"teal":528,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[778]},{"teal":531,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[779,780,781]},{"teal":532,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[782]},{"teal":535,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:151","pc":[783,784,785]},{"teal":536,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:151","pc":[786]},{"teal":537,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:151","pc":[787]},{"teal":541,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:151","pc":[788,789,790]},{"teal":545,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[791,792]},{"teal":546,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[793,794]},{"teal":547,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[795]},{"teal":548,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[796]},{"teal":551,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","errorMessage":"Only admin can set reward params","pc":[797]},{"teal":555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[798,799]},{"teal":556,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[800,801]},{"teal":557,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[802]},{"teal":562,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[803,804]},{"teal":563,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[805]},{"teal":564,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[806]},{"teal":565,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[807,808,809]},{"teal":570,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:160","pc":[810,811]},{"teal":571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:160","pc":[812,813]},{"teal":572,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:160","pc":[814]},{"teal":576,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:161","pc":[815,816]},{"teal":577,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:161","pc":[817,818]},{"teal":578,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:161","pc":[819]},{"teal":582,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[820,821]},{"teal":583,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[822,823]},{"teal":584,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[824]},{"teal":585,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[825,826,827]},{"teal":590,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[828,829]},{"teal":591,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[830]},{"teal":592,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[831]},{"teal":596,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:165","pc":[832,833]},{"teal":597,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:165","pc":[834,835]},{"teal":598,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:165","pc":[836]},{"teal":602,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:166","pc":[837,838]},{"teal":603,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:166","pc":[839]},{"teal":604,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:166","pc":[840]},{"teal":607,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:151","pc":[841]},{"teal":612,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:172","pc":[842,843,844]},{"teal":613,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:172","pc":[845]},{"teal":616,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:172","pc":[846,847,848]},{"teal":617,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:172","pc":[849]},{"teal":618,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:172","pc":[850]},{"teal":622,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:172","pc":[851,852,853]},{"teal":626,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:173","pc":[854,855]},{"teal":627,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:173","pc":[856]},{"teal":628,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:173","pc":[857]},{"teal":629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:173","pc":[858]},{"teal":632,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:173","errorMessage":"Only injector can update injected rewards","pc":[859]},{"teal":636,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[860,861]},{"teal":637,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[862,863]},{"teal":638,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[864]},{"teal":639,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:172","pc":[865]},{"teal":644,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[866,867,868]},{"teal":645,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[869]},{"teal":648,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[870,871,872]},{"teal":649,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[873]},{"teal":650,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[874]},{"teal":654,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[875,876,877]},{"teal":658,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:178","pc":[878,879]},{"teal":659,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:178","pc":[880]},{"teal":660,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:178","pc":[881]},{"teal":661,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:178","pc":[882]},{"teal":664,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:178","errorMessage":"Only injector can update paid rewards","pc":[883]},{"teal":668,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:179","pc":[884,885]},{"teal":669,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:179","pc":[886,887]},{"teal":670,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:179","pc":[888]},{"teal":671,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[889]},{"teal":676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[890,891,892]},{"teal":677,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[893]},{"teal":680,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[894,895,896]},{"teal":681,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[897]},{"teal":682,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[898]},{"teal":686,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[899,900,901]},{"teal":690,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:183","pc":[902,903]},{"teal":691,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:183","pc":[904]},{"teal":692,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:183","pc":[905]},{"teal":693,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:183","pc":[906]},{"teal":696,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:183","errorMessage":"Only injector can update injected rewards","pc":[907]},{"teal":700,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:184","pc":[908,909]},{"teal":701,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:184","pc":[910,911]},{"teal":702,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:184","pc":[912]},{"teal":703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[913]},{"teal":708,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[914,915,916]},{"teal":709,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[917]},{"teal":710,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[918]},{"teal":711,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[919,920]},{"teal":712,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[921]},{"teal":715,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","errorMessage":"argument 0 (treasuryAddress) for updateTreasuryAddress must be a address","pc":[922]},{"teal":718,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[923,924,925]},{"teal":719,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[926]},{"teal":720,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[927]},{"teal":724,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[928,929,930]},{"teal":728,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:188","pc":[931,932]},{"teal":729,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:188","pc":[933]},{"teal":730,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:188","pc":[934]},{"teal":731,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:188","pc":[935]},{"teal":734,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:188","errorMessage":"Only injector can update treasury address","pc":[936]},{"teal":738,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:189","pc":[937,938]},{"teal":739,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:189","pc":[939,940]},{"teal":740,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:189","pc":[941]},{"teal":741,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:187","pc":[942]},{"teal":746,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[943,944,945]},{"teal":747,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[946]},{"teal":750,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[947,948,949]},{"teal":751,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[950]},{"teal":752,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[951]},{"teal":756,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[952,953,954]},{"teal":760,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:193","pc":[955,956]},{"teal":761,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:193","pc":[957]},{"teal":762,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:193","pc":[958]},{"teal":763,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:193","pc":[959]},{"teal":766,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:193","errorMessage":"Only injector can update xUSD fee","pc":[960]},{"teal":770,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:194","pc":[961,962]},{"teal":771,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:194","pc":[963,964]},{"teal":772,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:194","pc":[965]},{"teal":773,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[966]},{"teal":778,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[967,968,969]},{"teal":779,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[970]},{"teal":780,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[971]},{"teal":781,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[972,973]},{"teal":782,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[974]},{"teal":785,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","errorMessage":"argument 0 (injectorAddress) for updateInjectorAddress must be a address","pc":[975]},{"teal":788,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[976,977,978]},{"teal":789,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[979]},{"teal":790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[980]},{"teal":794,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[981,982,983]},{"teal":798,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:198","pc":[984,985]},{"teal":799,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:198","pc":[986]},{"teal":800,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:198","pc":[987]},{"teal":801,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:198","pc":[988]},{"teal":804,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:198","errorMessage":"Only injector can update injector address","pc":[989]},{"teal":808,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:199","pc":[990]},{"teal":809,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:199","pc":[991,992]},{"teal":810,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:199","pc":[993]},{"teal":811,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:197","pc":[994]},{"teal":816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[995,996,997]},{"teal":817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[998]},{"teal":820,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[999,1000,1001]},{"teal":821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[1002]},{"teal":822,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[1003]},{"teal":826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[1004,1005,1006]},{"teal":830,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:203","pc":[1007,1008]},{"teal":831,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:203","pc":[1009]},{"teal":832,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:203","pc":[1010]},{"teal":833,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:203","pc":[1011]},{"teal":836,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:203","errorMessage":"Only injector can update num stakers","pc":[1012]},{"teal":840,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:204","pc":[1013,1014]},{"teal":841,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:204","pc":[1015,1016]},{"teal":842,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:204","pc":[1017]},{"teal":843,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[1018]},{"teal":848,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1019,1020,1021]},{"teal":849,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1022]},{"teal":850,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1023]},{"teal":851,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1024]},{"teal":852,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1025]},{"teal":855,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","errorMessage":"argument 0 (freeze) for updateFreeze must be a bool","pc":[1026]},{"teal":856,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1027]},{"teal":857,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1028]},{"teal":860,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1029,1030,1031]},{"teal":861,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1032]},{"teal":862,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1033]},{"teal":866,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1034,1035,1036]},{"teal":870,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:208","pc":[1037,1038]},{"teal":871,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:208","pc":[1039]},{"teal":872,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:208","pc":[1040]},{"teal":873,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:208","pc":[1041]},{"teal":876,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:208","errorMessage":"Only injector can update freeze","pc":[1042]},{"teal":880,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1043,1044]},{"teal":881,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1045,1046]},{"teal":882,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1047,1048]},{"teal":883,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1049]},{"teal":884,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1050,1051]},{"teal":885,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1052]},{"teal":886,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1053]},{"teal":887,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1054]},{"teal":892,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1055,1056,1057]},{"teal":893,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1058]},{"teal":894,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1059]},{"teal":895,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1060]},{"teal":896,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1061]},{"teal":899,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","errorMessage":"argument 0 (poolEnding) for updatePoolEnding must be a bool","pc":[1062]},{"teal":900,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1063]},{"teal":901,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1064]},{"teal":904,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1065,1066,1067]},{"teal":905,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1068]},{"teal":906,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1069]},{"teal":910,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1070,1071,1072]},{"teal":914,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:213","pc":[1073,1074]},{"teal":915,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:213","pc":[1075,1076]},{"teal":916,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:213","pc":[1077]},{"teal":917,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:213","pc":[1078]},{"teal":920,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:213","errorMessage":"Only admins can update pool ending","pc":[1079]},{"teal":924,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1080,1081]},{"teal":925,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1082,1083]},{"teal":926,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1084,1085]},{"teal":927,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1086]},{"teal":928,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1087,1088]},{"teal":929,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1089]},{"teal":930,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1090]},{"teal":931,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1091]},{"teal":936,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:217","pc":[1092,1093,1094]},{"teal":937,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:217","pc":[1095]},{"teal":938,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:217","pc":[1096]},{"teal":942,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:217","pc":[1097,1098,1099]},{"teal":946,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:218","pc":[1100,1101]},{"teal":947,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:218","pc":[1102]},{"teal":948,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:218","pc":[1103]},{"teal":949,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:218","pc":[1104]},{"teal":952,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:218","errorMessage":"Only injector can update fee waive","pc":[1105]},{"teal":956,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:219","pc":[1106,1107]},{"teal":957,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:219","pc":[1108]},{"teal":958,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:219","pc":[1109,1110]},{"teal":959,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:219","pc":[1111]},{"teal":960,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:219","pc":[1112,1113]},{"teal":961,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:219","pc":[1114]},{"teal":962,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:219","pc":[1115]},{"teal":966,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:220","pc":[1116,1117]},{"teal":967,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:220","pc":[1118]},{"teal":968,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:220","pc":[1119]},{"teal":969,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:217","pc":[1120]},{"teal":973,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1121,1122,1123]},{"teal":977,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1124,1125,1126]},{"teal":978,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1127,1128]},{"teal":979,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1129,1130,1131]},{"teal":980,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1132]},{"teal":981,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1133]},{"teal":982,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:223","pc":[1134]},{"teal":987,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1135,1136,1137,1138,1139,1140]},{"teal":990,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1141,1142,1143]},{"teal":991,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1144]},{"teal":992,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1145]},{"teal":993,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1146]},{"teal":994,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1147]},{"teal":998,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1148,1149,1150]},{"teal":1001,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1151]},{"teal":1002,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1152]},{"teal":1006,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1153,1154]},{"teal":1007,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:231","pc":[1155,1156]},{"teal":1012,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1157,1158]},{"teal":1013,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1159]},{"teal":1014,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1160]},{"teal":1015,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1161]},{"teal":1016,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1162,1163,1164]},{"teal":1021,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1165,1166]},{"teal":1022,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1167,1168]},{"teal":1023,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1169]},{"teal":1024,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:233","pc":[1170,1171]},{"teal":1033,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:236","pc":[1172,1173]},{"teal":1034,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:237","pc":[1174,1175]},{"teal":1035,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:236","pc":[1176]},{"teal":1036,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:238","pc":[1177,1178]},{"teal":1037,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:238","pc":[1179,1180,1181]},{"teal":1038,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:237","pc":[1182]},{"teal":1039,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:239","pc":[1183,1184]},{"teal":1040,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:239","pc":[1185,1186,1187]},{"teal":1041,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:238","pc":[1188]},{"teal":1042,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:235","pc":[1189,1190]},{"teal":1048,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:242","pc":[1191,1192]},{"teal":1049,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:242","pc":[1193]},{"teal":1052,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1194,1195]},{"teal":1055,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1196,1197]},{"teal":1056,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:230","pc":[1198]},{"teal":1061,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1199,1200]},{"teal":1062,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1201]},{"teal":1063,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1202]},{"teal":1064,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1203]},{"teal":1065,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1204,1205]},{"teal":1066,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1206]},{"teal":1067,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1207]},{"teal":1070,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","errorMessage":"argument 0 (mbrPayment) for initStorage must be a pay transaction","pc":[1208]},{"teal":1073,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1209,1210,1211]},{"teal":1074,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1212]},{"teal":1075,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1213]},{"teal":1079,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1214,1215,1216]},{"teal":1082,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1217]},{"teal":1083,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1218]},{"teal":1087,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1219]},{"teal":1088,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1220]},{"teal":1089,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1221]},{"teal":1090,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1222]},{"teal":1091,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","pc":[1223]},{"teal":1094,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:247","errorMessage":"staking pool already initialized","pc":[1224]},{"teal":1098,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1225,1226]},{"teal":1099,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1227,1228]},{"teal":1100,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1229]},{"teal":1101,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1230]},{"teal":1104,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","errorMessage":"Only admin can init storage","pc":[1231]},{"teal":1108,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:250","pc":[1232,1233]},{"teal":1109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:250","pc":[1234,1235]},{"teal":1114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1236,1237]},{"teal":1115,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1238]},{"teal":1116,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1239]},{"teal":1117,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1240]},{"teal":1118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1241,1242,1243]},{"teal":1123,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1244,1245]},{"teal":1124,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1246,1247]},{"teal":1125,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1248]},{"teal":1126,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1249,1250]},{"teal":1135,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:255","pc":[1251,1252]},{"teal":1136,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:256","pc":[1253,1254]},{"teal":1137,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:255","pc":[1255]},{"teal":1138,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1256,1257]},{"teal":1139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1258,1259,1260]},{"teal":1140,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:256","pc":[1261]},{"teal":1141,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1262,1263]},{"teal":1142,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1264,1265,1266]},{"teal":1143,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:257","pc":[1267]},{"teal":1144,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1268,1269]},{"teal":1149,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1270,1271]},{"teal":1150,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1272,1273]},{"teal":1151,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1274,1275]},{"teal":1152,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1276]},{"teal":1155,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[1277]},{"teal":1158,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1278,1279]},{"teal":1159,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1280,1281]},{"teal":1160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1282,1283]},{"teal":1161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1284]},{"teal":1164,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"amount\",\"expected\":\"poolMBR\"}","pc":[1285]},{"teal":1168,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:262","pc":[1286]},{"teal":1169,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:262","pc":[1287,1288,1289,1290]},{"teal":1170,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:262","pc":[1291]},{"teal":1171,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:262","pc":[1292]},{"teal":1175,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308]},{"teal":1176,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1309,1310]},{"teal":1177,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1311]},{"teal":1182,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:265","pc":[1312,1313]},{"teal":1183,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:265","pc":[1314]},{"teal":1184,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:265","pc":[1315]},{"teal":1185,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:265","pc":[1316]},{"teal":1186,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:265","pc":[1317,1318,1319]},{"teal":1195,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:267","pc":[1320]},{"teal":1196,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:267","pc":[1321,1322]},{"teal":1197,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:267","pc":[1323,1324]},{"teal":1201,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:268","pc":[1325,1326]},{"teal":1202,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:268","pc":[1327]},{"teal":1203,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:268","pc":[1328,1329]},{"teal":1207,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1330,1331]},{"teal":1208,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:269","pc":[1332,1333]},{"teal":1212,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1334]},{"teal":1213,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1335,1336]},{"teal":1216,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:267","pc":[1337]},{"teal":1217,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:267","pc":[1338,1339]},{"teal":1220,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:267","pc":[1340]},{"teal":1223,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1341]},{"teal":1228,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1342,1343,1344]},{"teal":1229,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1345]},{"teal":1232,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1346,1347,1348]},{"teal":1233,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1349]},{"teal":1236,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1350,1351]},{"teal":1237,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1352]},{"teal":1238,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1353]},{"teal":1239,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1354]},{"teal":1240,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1355,1356]},{"teal":1241,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1357,1358]},{"teal":1242,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1359]},{"teal":1245,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","errorMessage":"argument 2 (rewardTxn) for injectRewards must be a axfer transaction","pc":[1360]},{"teal":1248,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1361,1362,1363]},{"teal":1249,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1364]},{"teal":1250,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1365]},{"teal":1254,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1366,1367,1368]},{"teal":1258,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1369,1370]},{"teal":1259,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1371]},{"teal":1260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1372]},{"teal":1261,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1373]},{"teal":1264,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","errorMessage":"Only injector can inject rewards","pc":[1374]},{"teal":1274,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:281","pc":[1375,1376]},{"teal":1275,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1377,1378]},{"teal":1276,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1379]},{"teal":1277,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1380]},{"teal":1278,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1381]},{"teal":1281,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"sender\",\"expected\":\"this.injectorAddress.value\"}","pc":[1382]},{"teal":1284,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:281","pc":[1383,1384]},{"teal":1285,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1385,1386]},{"teal":1286,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1387,1388]},{"teal":1287,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1389]},{"teal":1290,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1390]},{"teal":1293,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:281","pc":[1391,1392]},{"teal":1294,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:284","pc":[1393,1394]},{"teal":1295,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:284","pc":[1395,1396]},{"teal":1296,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:284","pc":[1397]},{"teal":1299,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:284","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(rewardAssetId)\"}","pc":[1398]},{"teal":1302,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:281","pc":[1399,1400]},{"teal":1303,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1401,1402]},{"teal":1304,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1403,1404]},{"teal":1305,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1405]},{"teal":1306,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1406]},{"teal":1307,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1407]},{"teal":1308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1408,1409,1410]},{"teal":1309,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1411,1412]},{"teal":1310,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1413]},{"teal":1311,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1414,1415,1416]},{"teal":1314,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1417,1418]},{"teal":1317,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1419]},{"teal":1320,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetAmount\",\"expected\":\"this.rewardPerInjection.value > 0 ? this.rewardPerInjection.value : quantity\"}","pc":[1420]},{"teal":1324,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1421,1422]},{"teal":1325,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1423]},{"teal":1326,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1424]},{"teal":1327,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1425,1426]},{"teal":1328,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1427]},{"teal":1329,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:287","pc":[1428]},{"teal":1333,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1429,1430]},{"teal":1334,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1431,1432]},{"teal":1335,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1433]},{"teal":1336,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1434]},{"teal":1341,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:291","pc":[1435,1436,1437]},{"teal":1342,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:291","pc":[1438]},{"teal":1343,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:291","pc":[1439]},{"teal":1347,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:291","pc":[1440,1441,1442]},{"teal":1350,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:291","pc":[1443]},{"teal":1351,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:291","pc":[1444,1445]},{"teal":1355,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1446,1447]},{"teal":1356,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1448]},{"teal":1357,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1449]},{"teal":1358,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1450]},{"teal":1361,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","errorMessage":"Only injector can pickup rewards","pc":[1451]},{"teal":1365,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1452,1453]},{"teal":1366,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1454,1455]},{"teal":1367,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1456]},{"teal":1368,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1457,1458]},{"teal":1369,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1459]},{"teal":1370,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1460,1461]},{"teal":1374,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:295","pc":[1462]},{"teal":1375,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:295","pc":[1463,1464]},{"teal":1380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1465,1466]},{"teal":1381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1467]},{"teal":1382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1468,1469]},{"teal":1383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1470]},{"teal":1384,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1471]},{"teal":1385,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1472,1473,1474]},{"teal":1390,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:297","pc":[1475,1476]},{"teal":1391,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:297","pc":[1477]},{"teal":1392,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:297","pc":[1478,1479]},{"teal":1397,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1480,1481]},{"teal":1398,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1482,1483]},{"teal":1399,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1484]},{"teal":1400,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1485]},{"teal":1401,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1486,1487]},{"teal":1402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1488]},{"teal":1403,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1489,1490]},{"teal":1404,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1491]},{"teal":1405,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1492]},{"teal":1406,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1493,1494]},{"teal":1411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:302","pc":[1495,1496]},{"teal":1412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:302","pc":[1497,1498]},{"teal":1413,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:302","pc":[1499]},{"teal":1414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:302","pc":[1500]},{"teal":1415,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:302","pc":[1501,1502,1503]},{"teal":1420,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1504,1505]},{"teal":1421,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1506]},{"teal":1422,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1507]},{"teal":1423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1508,1509]},{"teal":1424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1510]},{"teal":1425,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1511]},{"teal":1428,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:291","pc":[1512]},{"teal":1433,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1513,1514,1515]},{"teal":1434,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1516]},{"teal":1437,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1517,1518]},{"teal":1438,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1519]},{"teal":1439,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1520]},{"teal":1440,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1521]},{"teal":1441,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1522,1523]},{"teal":1442,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1524,1525]},{"teal":1443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1526]},{"teal":1446,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","errorMessage":"argument 1 (xUSDTxn) for injectxUSD must be a axfer transaction","pc":[1527]},{"teal":1449,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1528,1529,1530]},{"teal":1450,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1531]},{"teal":1451,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1532]},{"teal":1455,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1533,1534,1535]},{"teal":1459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:308","pc":[1536,1537]},{"teal":1460,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:308","pc":[1538]},{"teal":1461,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:308","pc":[1539]},{"teal":1462,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:308","pc":[1540]},{"teal":1465,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:308","errorMessage":"Only injector can inject xUSD","pc":[1541]},{"teal":1475,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:309","pc":[1542,1543]},{"teal":1476,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:310","pc":[1544,1545]},{"teal":1477,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:310","pc":[1546]},{"teal":1478,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:310","pc":[1547]},{"teal":1479,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:310","pc":[1548]},{"teal":1482,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:310","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"sender\",\"expected\":\"this.injectorAddress.value\"}","pc":[1549]},{"teal":1485,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:309","pc":[1550,1551]},{"teal":1486,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1552,1553]},{"teal":1487,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1554,1555]},{"teal":1488,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","pc":[1556]},{"teal":1491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:311","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1557]},{"teal":1494,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:309","pc":[1558,1559]},{"teal":1495,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:312","pc":[1560,1561]},{"teal":1496,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:312","pc":[1562,1563]},{"teal":1497,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:312","pc":[1564]},{"teal":1498,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:312","pc":[1565]},{"teal":1501,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:312","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.xUSDAssetId.value)\"}","pc":[1566]},{"teal":1504,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:309","pc":[1567,1568]},{"teal":1505,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1569,1570]},{"teal":1506,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1571,1572]},{"teal":1507,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1573]},{"teal":1510,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[1574]},{"teal":1514,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1575,1576]},{"teal":1515,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1577]},{"teal":1516,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1578]},{"teal":1517,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1579,1580]},{"teal":1518,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1581]},{"teal":1519,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1582]},{"teal":1520,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1583]},{"teal":1525,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1584,1585,1586]},{"teal":1526,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1587]},{"teal":1527,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1588]},{"teal":1531,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1589,1590,1591]},{"teal":1534,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1592]},{"teal":1535,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1593]},{"teal":1539,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:319","pc":[1594,1595]},{"teal":1540,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:319","pc":[1596,1597]},{"teal":1541,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:319","pc":[1598]},{"teal":1542,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:319","pc":[1599]},{"teal":1545,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:319","errorMessage":"Only admin can delete application","pc":[1600]},{"teal":1549,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1601,1602]},{"teal":1550,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1603]},{"teal":1551,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1604]},{"teal":1552,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1605]},{"teal":1555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","errorMessage":"Staked assets still exist","pc":[1606]},{"teal":1559,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:322","pc":[1607]},{"teal":1560,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:322","pc":[1608]},{"teal":1564,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1609,1610]},{"teal":1565,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1611,1612]},{"teal":1566,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1613]},{"teal":1567,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1614,1615]},{"teal":1568,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1616]},{"teal":1569,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:323","pc":[1617,1618]},{"teal":1574,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:324","pc":[1619,1620]},{"teal":1575,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:324","pc":[1621]},{"teal":1576,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:324","pc":[1622]},{"teal":1577,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:324","pc":[1623,1624,1625]},{"teal":1587,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1626]},{"teal":1588,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1627,1628]},{"teal":1589,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1629,1630]},{"teal":1593,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:326","pc":[1631,1632]},{"teal":1594,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:326","pc":[1633]},{"teal":1595,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:326","pc":[1634,1635]},{"teal":1599,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1636,1637]},{"teal":1600,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1638]},{"teal":1601,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1639,1640]},{"teal":1605,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","pc":[1641,1642]},{"teal":1606,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","pc":[1643,1644]},{"teal":1610,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","pc":[1645,1646]},{"teal":1611,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","pc":[1647]},{"teal":1612,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","pc":[1648,1649]},{"teal":1615,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1650]},{"teal":1616,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1651,1652]},{"teal":1619,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1653]},{"teal":1624,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1654,1655]},{"teal":1625,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1656,1657]},{"teal":1626,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1658]},{"teal":1627,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1659,1660]},{"teal":1628,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1661,1662]},{"teal":1629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1663]},{"teal":1630,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1664]},{"teal":1631,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:332","pc":[1665,1666]},{"teal":1640,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:334","pc":[1667]},{"teal":1641,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:334","pc":[1668]},{"teal":1642,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:334","pc":[1669,1670]},{"teal":1646,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1671,1672]},{"teal":1647,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1673,1674]},{"teal":1651,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:336","pc":[1675,1676]},{"teal":1652,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:336","pc":[1677]},{"teal":1653,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:336","pc":[1678,1679]},{"teal":1657,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[1680,1681]},{"teal":1658,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[1682,1683]},{"teal":1662,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1684,1685,1686]},{"teal":1663,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1687,1688]},{"teal":1666,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:334","pc":[1689]},{"teal":1667,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1690]},{"teal":1672,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1691,1692,1693]},{"teal":1673,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1694]},{"teal":1676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1695,1696]},{"teal":1677,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1697]},{"teal":1678,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1698]},{"teal":1679,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1699]},{"teal":1680,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1700,1701]},{"teal":1681,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1702,1703]},{"teal":1682,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1704]},{"teal":1685,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","errorMessage":"argument 1 (stakeTxn) for stake must be a axfer transaction","pc":[1705]},{"teal":1688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1706,1707,1708]},{"teal":1689,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1709]},{"teal":1690,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1710]},{"teal":1694,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1711,1712,1713]},{"teal":1697,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1714]},{"teal":1698,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[1715,1716]},{"teal":1702,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:343","pc":[1717,1718]},{"teal":1703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:343","pc":[1719]},{"teal":1704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:343","pc":[1720]},{"teal":1707,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:343","errorMessage":"Invalid quantity","pc":[1721]},{"teal":1711,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1722,1723]},{"teal":1712,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1724]},{"teal":1713,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1725]},{"teal":1714,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1726]},{"teal":1717,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","errorMessage":"Pool not active","pc":[1727]},{"teal":1721,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1728,1729]},{"teal":1722,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1730]},{"teal":1723,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1731]},{"teal":1724,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1732]},{"teal":1725,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","pc":[1733]},{"teal":1728,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:345","errorMessage":"Pool ending","pc":[1734]},{"teal":1733,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1735,1736]},{"teal":1734,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1737]},{"teal":1735,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1738]},{"teal":1736,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1739,1740,1741]},{"teal":1741,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1742]},{"teal":1742,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1743]},{"teal":1743,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1744,1745]},{"teal":1744,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1746]},{"teal":1745,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1747,1748]},{"teal":1746,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1749]},{"teal":1747,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1750]},{"teal":1748,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1751,1752]},{"teal":1749,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1753,1754]},{"teal":1750,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1755,1756]},{"teal":1751,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1757,1758]},{"teal":1752,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1759]},{"teal":1763,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:350","pc":[1760,1761]},{"teal":1764,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1762,1763]},{"teal":1765,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1764,1765]},{"teal":1766,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1766]},{"teal":1769,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}","pc":[1767]},{"teal":1772,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:350","pc":[1768,1769]},{"teal":1773,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1770,1771]},{"teal":1774,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1772,1773]},{"teal":1775,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","pc":[1774]},{"teal":1778,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:352","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1775]},{"teal":1781,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:350","pc":[1776,1777]},{"teal":1782,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:353","pc":[1778,1779]},{"teal":1783,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:353","pc":[1780,1781]},{"teal":1784,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:353","pc":[1782]},{"teal":1785,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:353","pc":[1783]},{"teal":1788,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:353","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.stakedAssetId.value)\"}","pc":[1784]},{"teal":1791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:350","pc":[1785,1786]},{"teal":1792,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1787,1788]},{"teal":1793,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1789,1790]},{"teal":1794,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1791]},{"teal":1797,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[1792]},{"teal":1801,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1793]},{"teal":1802,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1794,1795]},{"teal":1807,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:357","pc":[1796,1797]},{"teal":1808,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:357","pc":[1798]},{"teal":1809,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:357","pc":[1799]},{"teal":1810,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:357","pc":[1800,1801,1802]},{"teal":1815,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1803]},{"teal":1816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1804]},{"teal":1817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1805,1806]},{"teal":1818,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1807]},{"teal":1819,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1808,1809]},{"teal":1820,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1810]},{"teal":1821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1811]},{"teal":1822,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1812,1813]},{"teal":1823,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1814,1815]},{"teal":1824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1816,1817]},{"teal":1825,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1818,1819]},{"teal":1826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1820]},{"teal":1831,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1821]},{"teal":1832,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1822,1823]},{"teal":1837,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1824,1825]},{"teal":1838,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1826,1827,1828]},{"teal":1839,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1829]},{"teal":1840,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1830,1831,1832]},{"teal":1845,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:361","pc":[1833,1834]},{"teal":1846,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:361","pc":[1835,1836,1837]},{"teal":1849,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:361","pc":[1838,1839,1840]},{"teal":1855,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1841,1842]},{"teal":1856,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1843,1844]},{"teal":1857,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1845]},{"teal":1858,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1846]},{"teal":1859,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1847]},{"teal":1860,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1848,1849]},{"teal":1861,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1850]},{"teal":1862,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1851,1852]},{"teal":1863,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1853]},{"teal":1864,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1854,1855]},{"teal":1865,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1856]},{"teal":1866,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1857,1858,1859]},{"teal":1872,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1860,1861]},{"teal":1873,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1862]},{"teal":1874,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1863]},{"teal":1875,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1864,1865,1866]},{"teal":1880,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1867]},{"teal":1881,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1868]},{"teal":1882,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1869,1870]},{"teal":1883,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1871]},{"teal":1884,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1872,1873]},{"teal":1885,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1874]},{"teal":1886,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1875]},{"teal":1887,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1876,1877]},{"teal":1888,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1878,1879]},{"teal":1889,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1880,1881]},{"teal":1890,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1882,1883]},{"teal":1891,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1884]},{"teal":1896,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[1885,1886]},{"teal":1897,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[1887,1888]},{"teal":1898,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[1889]},{"teal":1899,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[1890,1891]},{"teal":1900,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[1892]},{"teal":1901,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[1893,1894]},{"teal":1902,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[1895]},{"teal":1903,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[1896,1897]},{"teal":1907,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1898,1899]},{"teal":1908,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1900,1901]},{"teal":1909,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1902,1903]},{"teal":1910,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1904,1905,1906]},{"teal":1911,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1907]},{"teal":1912,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1908,1909]},{"teal":1913,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1910,1911]},{"teal":1914,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1912]},{"teal":1915,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1913]},{"teal":1916,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1914]},{"teal":1917,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[1915,1916]},{"teal":1922,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:373","pc":[1917,1918]},{"teal":1923,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:373","pc":[1919]},{"teal":1924,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:373","pc":[1920]},{"teal":1925,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:373","pc":[1921,1922,1923]},{"teal":1930,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1924]},{"teal":1931,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1925]},{"teal":1932,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1926,1927]},{"teal":1933,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1928]},{"teal":1934,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1929,1930]},{"teal":1935,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1931]},{"teal":1936,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1932]},{"teal":1937,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1933,1934]},{"teal":1938,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1935,1936]},{"teal":1939,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1937,1938]},{"teal":1940,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1939,1940]},{"teal":1941,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[1941]},{"teal":1947,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:376","pc":[1942,1943]},{"teal":1948,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:376","pc":[1944]},{"teal":1949,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:376","pc":[1945]},{"teal":1950,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:376","pc":[1946,1947,1948]},{"teal":1955,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1949]},{"teal":1956,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1950]},{"teal":1957,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1951,1952]},{"teal":1958,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1953]},{"teal":1959,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1954,1955]},{"teal":1960,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1956]},{"teal":1961,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1957]},{"teal":1962,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1958,1959]},{"teal":1963,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1960,1961]},{"teal":1964,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1962,1963]},{"teal":1965,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1964,1965]},{"teal":1966,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[1966]},{"teal":1971,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[1967,1968]},{"teal":1972,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[1969,1970]},{"teal":1973,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[1971]},{"teal":1974,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[1972,1973]},{"teal":1975,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[1974]},{"teal":1976,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[1975,1976]},{"teal":1977,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[1977]},{"teal":1982,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:380","pc":[1978,1979]},{"teal":1983,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:380","pc":[1980]},{"teal":1984,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:380","pc":[1981]},{"teal":1985,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:380","pc":[1982,1983,1984]},{"teal":1990,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1985]},{"teal":1991,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1986]},{"teal":1992,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1987,1988]},{"teal":1993,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1989]},{"teal":1994,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1990,1991]},{"teal":1995,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1992]},{"teal":1996,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1993]},{"teal":1997,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1994,1995]},{"teal":1998,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1996,1997]},{"teal":1999,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[1998,1999]},{"teal":2000,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2000,2001]},{"teal":2001,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2002]},{"teal":2006,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2003,2004]},{"teal":2007,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2005]},{"teal":2008,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2006,2007]},{"teal":2009,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2008,2009]},{"teal":2010,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2010]},{"teal":2011,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2011,2012]},{"teal":2012,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2013]},{"teal":2013,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2014]},{"teal":2017,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:384","pc":[2015]},{"teal":2018,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:384","pc":[2016,2017]},{"teal":2019,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[2018,2019,2020]},{"teal":2024,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2021,2022]},{"teal":2025,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2023,2024]},{"teal":2026,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2025]},{"teal":2027,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2026]},{"teal":2028,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2027]},{"teal":2029,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2028,2029]},{"teal":2030,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2030]},{"teal":2031,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2031,2032]},{"teal":2032,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2033]},{"teal":2033,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2034,2035]},{"teal":2034,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2036]},{"teal":2035,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:385","pc":[2037,2038,2039]},{"teal":2041,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:386","pc":[2040,2041]},{"teal":2042,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:386","pc":[2042]},{"teal":2043,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:386","pc":[2043]},{"teal":2044,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:386","pc":[2044,2045,2046]},{"teal":2049,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2047]},{"teal":2050,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2048]},{"teal":2051,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2049,2050]},{"teal":2052,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2051]},{"teal":2053,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2052,2053]},{"teal":2054,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2054]},{"teal":2055,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2055]},{"teal":2056,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2056,2057]},{"teal":2057,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2058,2059]},{"teal":2058,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2060,2061]},{"teal":2059,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2062,2063]},{"teal":2060,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2064]},{"teal":2065,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:389","pc":[2065,2066]},{"teal":2066,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:389","pc":[2067]},{"teal":2067,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:389","pc":[2068]},{"teal":2068,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:389","pc":[2069,2070]},{"teal":2069,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:389","pc":[2071,2072]},{"teal":2070,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:389","pc":[2073]},{"teal":2071,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:389","pc":[2074]},{"teal":2076,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2075,2076]},{"teal":2077,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2077]},{"teal":2078,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2078]},{"teal":2079,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:390","pc":[2079,2080,2081]},{"teal":2084,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2082]},{"teal":2085,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2083]},{"teal":2086,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2084,2085]},{"teal":2087,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2086]},{"teal":2088,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2087,2088]},{"teal":2089,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2089]},{"teal":2090,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2090]},{"teal":2091,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2091,2092]},{"teal":2092,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2093,2094]},{"teal":2093,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2095,2096]},{"teal":2094,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2097,2098]},{"teal":2095,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:391","pc":[2099]},{"teal":2105,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2100,2101]},{"teal":2106,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2102,2103]},{"teal":2107,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2104]},{"teal":2108,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:394","pc":[2105,2106]},{"teal":2109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2107,2108]},{"teal":2110,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2109,2110]},{"teal":2111,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2111]},{"teal":2112,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2112]},{"teal":2113,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2113,2114]},{"teal":2114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:396","pc":[2115]},{"teal":2115,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:397","pc":[2116,2117]},{"teal":2116,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:397","pc":[2118]},{"teal":2117,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2119]},{"teal":2118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2120,2121]},{"teal":2119,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2122]},{"teal":2124,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2123,2124]},{"teal":2125,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2125]},{"teal":2126,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2126]},{"teal":2127,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:399","pc":[2127,2128,2129]},{"teal":2132,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2130]},{"teal":2133,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2131]},{"teal":2134,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2132,2133]},{"teal":2135,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2134]},{"teal":2136,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2135,2136]},{"teal":2137,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2137]},{"teal":2138,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2138]},{"teal":2139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2139,2140]},{"teal":2140,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2141,2142]},{"teal":2141,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2143,2144]},{"teal":2142,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2145,2146]},{"teal":2143,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:400","pc":[2147]},{"teal":2148,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2148,2149]},{"teal":2149,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2150]},{"teal":2150,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2151]},{"teal":2151,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2152]},{"teal":2152,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2153]},{"teal":2153,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2154]},{"teal":2158,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2155,2156]},{"teal":2159,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2157]},{"teal":2160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2158]},{"teal":2161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2159,2160,2161]},{"teal":2166,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2162]},{"teal":2167,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2163]},{"teal":2168,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2164,2165]},{"teal":2169,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2166]},{"teal":2170,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2167,2168]},{"teal":2171,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2169]},{"teal":2172,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2170]},{"teal":2173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2171,2172]},{"teal":2174,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2173,2174]},{"teal":2175,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2175,2176]},{"teal":2176,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2177,2178]},{"teal":2177,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:404","pc":[2179]},{"teal":2182,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2180]},{"teal":2183,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:406","pc":[2181,2182]},{"teal":2189,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:409","pc":[2183,2184]},{"teal":2190,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:409","pc":[2185]},{"teal":2191,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:409","pc":[2186]},{"teal":2192,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:409","pc":[2187,2188,2189]},{"teal":2197,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2190]},{"teal":2198,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2191]},{"teal":2199,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2192,2193]},{"teal":2200,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2194]},{"teal":2201,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2195,2196]},{"teal":2202,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2197]},{"teal":2203,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2198]},{"teal":2204,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2199,2200]},{"teal":2205,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2201,2202]},{"teal":2206,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2203,2204]},{"teal":2207,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2205,2206]},{"teal":2208,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2207]},{"teal":2215,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[2208,2209]},{"teal":2216,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[2210]},{"teal":2217,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[2211]},{"teal":2218,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[2212,2213]},{"teal":2219,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[2214,2215,2216]},{"teal":2224,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2217,2218]},{"teal":2227,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","errorMessage":"Stake  failed","pc":[2219]},{"teal":2228,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:342","pc":[2220]},{"teal":2233,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2221,2222,2223]},{"teal":2234,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2224]},{"teal":2235,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2225]},{"teal":2239,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2226,2227,2228]},{"teal":2242,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2229]},{"teal":2243,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2230,2231]},{"teal":2248,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2232,2233]},{"teal":2249,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2234]},{"teal":2250,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2235]},{"teal":2251,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2236]},{"teal":2252,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2237]},{"teal":2253,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2238]},{"teal":2254,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2239,2240,2241]},{"teal":2255,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2242,2243]},{"teal":2256,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2244]},{"teal":2257,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2245]},{"teal":2258,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2246]},{"teal":2259,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2247]},{"teal":2260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2248]},{"teal":2263,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2249]},{"teal":2264,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2250,2251,2252]},{"teal":2265,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2253,2254]},{"teal":2266,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2255]},{"teal":2267,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2256]},{"teal":2268,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2257]},{"teal":2269,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2258]},{"teal":2272,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2259,2260,2261]},{"teal":2277,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:418","pc":[2262,2263]},{"teal":2278,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:418","pc":[2264]},{"teal":2279,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:418","pc":[2265,2266]},{"teal":2283,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:419","pc":[2267,2268]},{"teal":2284,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:419","pc":[2269]},{"teal":2285,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:419","pc":[2270,2271]},{"teal":2290,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2272,2273]},{"teal":2291,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2274]},{"teal":2292,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2275]},{"teal":2293,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:421","pc":[2276,2277,2278]},{"teal":2298,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2279]},{"teal":2299,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2280]},{"teal":2300,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2281,2282]},{"teal":2301,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2283]},{"teal":2302,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2284,2285]},{"teal":2303,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2286]},{"teal":2304,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2287]},{"teal":2305,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2288,2289]},{"teal":2306,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2290,2291]},{"teal":2307,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2292,2293]},{"teal":2308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2294,2295]},{"teal":2309,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2296]},{"teal":2314,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2297]},{"teal":2315,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2298,2299]},{"teal":2320,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2300,2301]},{"teal":2321,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2302,2303]},{"teal":2322,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2304]},{"teal":2323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2305]},{"teal":2324,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2306,2307,2308]},{"teal":2329,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2309,2310]},{"teal":2330,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2311]},{"teal":2331,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2312]},{"teal":2332,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:426","pc":[2313,2314,2315]},{"teal":2337,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2316]},{"teal":2338,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2317]},{"teal":2339,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2318,2319]},{"teal":2340,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2320]},{"teal":2341,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2321,2322]},{"teal":2342,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2323]},{"teal":2343,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2324]},{"teal":2344,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2325,2326]},{"teal":2345,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2327,2328]},{"teal":2346,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2329,2330]},{"teal":2347,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2331,2332]},{"teal":2348,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2333]},{"teal":2353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2334,2335]},{"teal":2354,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2336,2337]},{"teal":2355,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2338]},{"teal":2356,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2339,2340]},{"teal":2357,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2341]},{"teal":2358,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2342,2343]},{"teal":2359,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2344]},{"teal":2360,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2345,2346]},{"teal":2361,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2347]},{"teal":2362,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2348]},{"teal":2363,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:429","pc":[2349,2350]},{"teal":2368,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:431","pc":[2351,2352]},{"teal":2369,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:431","pc":[2353]},{"teal":2370,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:431","pc":[2354]},{"teal":2371,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:431","pc":[2355,2356,2357]},{"teal":2376,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2358,2359]},{"teal":2377,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2360,2361]},{"teal":2378,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2362]},{"teal":2379,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2363,2364]},{"teal":2380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2365]},{"teal":2381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2366,2367]},{"teal":2382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2368]},{"teal":2383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:432","pc":[2369,2370]},{"teal":2387,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2371,2372]},{"teal":2388,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2373,2374]},{"teal":2389,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2375]},{"teal":2390,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2376]},{"teal":2391,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2377,2378]},{"teal":2392,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2379]},{"teal":2393,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2380]},{"teal":2394,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2381]},{"teal":2395,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2382]},{"teal":2396,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2383]},{"teal":2397,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2384]},{"teal":2400,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","errorMessage":"wideRatio failed","pc":[2385]},{"teal":2401,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2386,2387]},{"teal":2406,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:436","pc":[2388,2389]},{"teal":2407,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:436","pc":[2390]},{"teal":2408,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:436","pc":[2391]},{"teal":2409,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:436","pc":[2392,2393,2394]},{"teal":2414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2395]},{"teal":2415,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2396]},{"teal":2416,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2397,2398]},{"teal":2417,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2399]},{"teal":2418,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2400,2401]},{"teal":2419,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2402]},{"teal":2420,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2403]},{"teal":2421,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2404,2405]},{"teal":2422,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2406,2407]},{"teal":2423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2408,2409]},{"teal":2424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2410,2411]},{"teal":2425,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:437","pc":[2412]},{"teal":2431,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2413,2414]},{"teal":2432,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2415,2416]},{"teal":2433,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2417]},{"teal":2434,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2418]},{"teal":2435,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2419,2420,2421]},{"teal":2440,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2422,2423]},{"teal":2441,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2424,2425]},{"teal":2442,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2426]},{"teal":2443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2427]},{"teal":2444,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2428,2429]},{"teal":2445,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2430]},{"teal":2446,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2431]},{"teal":2447,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2432]},{"teal":2448,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2433]},{"teal":2449,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2434]},{"teal":2452,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","errorMessage":"wideRatio failed","pc":[2435]},{"teal":2453,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:441","pc":[2436,2437]},{"teal":2458,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2438,2439]},{"teal":2459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2440]},{"teal":2460,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2441]},{"teal":2461,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:442","pc":[2442,2443,2444]},{"teal":2466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2445]},{"teal":2467,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2446,2447]},{"teal":2472,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2448,2449]},{"teal":2473,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2450]},{"teal":2474,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2451]},{"teal":2475,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2452,2453]},{"teal":2476,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2454]},{"teal":2477,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2455]},{"teal":2481,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2456,2457]},{"teal":2482,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2458]},{"teal":2483,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2459]},{"teal":2484,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2460,2461]},{"teal":2485,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2462]},{"teal":2486,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:447","pc":[2463]},{"teal":2491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:448","pc":[2464,2465]},{"teal":2492,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:448","pc":[2466]},{"teal":2493,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:448","pc":[2467,2468]},{"teal":2494,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:448","pc":[2469]},{"teal":2495,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:448","pc":[2470]},{"teal":2496,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:448","pc":[2471,2472,2473]},{"teal":2501,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2474,2475]},{"teal":2502,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2476,2477]},{"teal":2503,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2478,2479]},{"teal":2504,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2480,2481,2482]},{"teal":2505,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2483]},{"teal":2506,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2484,2485]},{"teal":2507,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2486]},{"teal":2508,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2487]},{"teal":2509,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2488]},{"teal":2510,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:451","pc":[2489,2490]},{"teal":2514,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2491,2492]},{"teal":2515,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2493]},{"teal":2516,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2494]},{"teal":2517,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2495,2496]},{"teal":2518,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2497]},{"teal":2519,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2498]},{"teal":2520,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:448","pc":[2499,2500,2501]},{"teal":2525,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2502,2503]},{"teal":2526,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2504,2505]},{"teal":2527,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2506,2507]},{"teal":2528,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2508,2509,2510]},{"teal":2529,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2511]},{"teal":2530,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2512,2513]},{"teal":2531,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2514]},{"teal":2532,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2515]},{"teal":2533,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2516]},{"teal":2534,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:454","pc":[2517,2518]},{"teal":2542,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:457","pc":[2519,2520]},{"teal":2543,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:457","pc":[2521]},{"teal":2544,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:457","pc":[2522]},{"teal":2545,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:457","pc":[2523,2524,2525]},{"teal":2550,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2526,2527]},{"teal":2551,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2528,2529]},{"teal":2552,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2530]},{"teal":2553,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2531]},{"teal":2554,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2532,2533]},{"teal":2555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2534]},{"teal":2556,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2535]},{"teal":2557,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2536]},{"teal":2558,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2537]},{"teal":2559,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2538]},{"teal":2562,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","errorMessage":"wideRatio failed","pc":[2539]},{"teal":2563,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2540,2541]},{"teal":2568,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:459","pc":[2542,2543]},{"teal":2569,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:459","pc":[2544]},{"teal":2570,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:459","pc":[2545]},{"teal":2571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:459","pc":[2546,2547,2548]},{"teal":2576,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:460","pc":[2549]},{"teal":2577,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:460","pc":[2550,2551]},{"teal":2582,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2552,2553]},{"teal":2583,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2554]},{"teal":2584,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2555]},{"teal":2585,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2556,2557]},{"teal":2586,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2558]},{"teal":2587,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:463","pc":[2559]},{"teal":2592,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2560,2561]},{"teal":2593,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2562]},{"teal":2594,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2563,2564]},{"teal":2595,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2565]},{"teal":2596,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2566]},{"teal":2597,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2567,2568,2569]},{"teal":2602,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2570,2571]},{"teal":2603,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2572,2573]},{"teal":2604,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2574,2575]},{"teal":2605,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2576,2577,2578]},{"teal":2606,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2579]},{"teal":2607,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2580,2581]},{"teal":2608,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2582]},{"teal":2609,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2583]},{"teal":2610,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2584]},{"teal":2611,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:467","pc":[2585,2586]},{"teal":2615,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:468","pc":[2587,2588]},{"teal":2616,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:468","pc":[2589]},{"teal":2617,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:468","pc":[2590]},{"teal":2618,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:468","pc":[2591,2592]},{"teal":2619,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:468","pc":[2593]},{"teal":2620,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:468","pc":[2594]},{"teal":2621,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:464","pc":[2595,2596,2597]},{"teal":2626,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2598,2599]},{"teal":2627,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2600,2601]},{"teal":2628,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2602,2603]},{"teal":2629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2604,2605,2606]},{"teal":2630,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2607]},{"teal":2631,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2608,2609]},{"teal":2632,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2610]},{"teal":2633,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2611]},{"teal":2634,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2612]},{"teal":2635,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2613,2614]},{"teal":2642,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:473","pc":[2615,2616]},{"teal":2643,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:473","pc":[2617,2618]},{"teal":2644,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:473","pc":[2619]},{"teal":2645,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:473","pc":[2620,2621]},{"teal":2646,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:473","pc":[2622]},{"teal":2647,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:473","pc":[2623,2624]},{"teal":2648,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:473","pc":[2625]},{"teal":2655,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2626,2627]},{"teal":2656,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2628]},{"teal":2657,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2629]},{"teal":2658,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2630,2631]},{"teal":2659,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:425","pc":[2632,2633,2634]},{"teal":2665,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:476","pc":[2635,2636]},{"teal":2666,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:476","pc":[2637]},{"teal":2667,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:476","pc":[2638]},{"teal":2668,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:476","pc":[2639,2640,2641]},{"teal":2673,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2642]},{"teal":2674,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2643]},{"teal":2675,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2644,2645]},{"teal":2676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2646]},{"teal":2677,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2647,2648]},{"teal":2678,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2649]},{"teal":2679,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2650]},{"teal":2680,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2651,2652]},{"teal":2681,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2653,2654]},{"teal":2682,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2655,2656]},{"teal":2683,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2657,2658]},{"teal":2684,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:477","pc":[2659]},{"teal":2690,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2660,2661]},{"teal":2691,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2662]},{"teal":2692,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2663]},{"teal":2693,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2664]},{"teal":2694,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2665,2666,2667]},{"teal":2704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:490","pc":[2668]},{"teal":2705,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:490","pc":[2669,2670]},{"teal":2706,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:490","pc":[2671,2672]},{"teal":2710,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:491","pc":[2673,2674]},{"teal":2711,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:491","pc":[2675]},{"teal":2712,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:491","pc":[2676,2677]},{"teal":2716,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:492","pc":[2678]},{"teal":2717,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:492","pc":[2679]},{"teal":2718,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:492","pc":[2680,2681]},{"teal":2722,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2682,2683]},{"teal":2723,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2684,2685]},{"teal":2727,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:494","pc":[2686,2687]},{"teal":2728,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:494","pc":[2688]},{"teal":2729,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:494","pc":[2689,2690]},{"teal":2732,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:490","pc":[2691]},{"teal":2733,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:490","pc":[2692,2693]},{"teal":2736,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:490","pc":[2694]},{"teal":2741,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:498","pc":[2695,2696]},{"teal":2742,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:498","pc":[2697]},{"teal":2743,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:498","pc":[2698]},{"teal":2746,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2699]},{"teal":2750,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2700,2701,2702]},{"teal":2753,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2703]},{"teal":2757,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2704]},{"teal":2758,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2705,2706]},{"teal":2763,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2707,2708]},{"teal":2764,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2709,2710]},{"teal":2765,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2711]},{"teal":2766,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2712]},{"teal":2767,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2713,2714,2715]},{"teal":2772,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2716,2717]},{"teal":2773,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2718]},{"teal":2774,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2719]},{"teal":2775,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:504","pc":[2720,2721,2722]},{"teal":2780,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2723]},{"teal":2781,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2724]},{"teal":2782,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2725,2726]},{"teal":2783,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2727]},{"teal":2784,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2728,2729]},{"teal":2785,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2730]},{"teal":2786,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2731]},{"teal":2787,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2732,2733]},{"teal":2788,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2734,2735]},{"teal":2789,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2736,2737]},{"teal":2790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2738,2739]},{"teal":2791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2740]},{"teal":2797,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2741,2742]},{"teal":2798,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2743,2744]},{"teal":2799,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2745]},{"teal":2800,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2746]},{"teal":2801,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2747]},{"teal":2802,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2748,2749]},{"teal":2803,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2750]},{"teal":2804,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2751,2752]},{"teal":2805,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2753]},{"teal":2806,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2754,2755]},{"teal":2807,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2756]},{"teal":2808,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:507","pc":[2757,2758,2759]},{"teal":2813,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2760,2761]},{"teal":2814,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2762,2763]},{"teal":2815,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2764]},{"teal":2816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2765,2766]},{"teal":2817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2767]},{"teal":2818,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2768,2769]},{"teal":2819,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2770]},{"teal":2820,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2771,2772,2773]},{"teal":2827,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2774,2775]},{"teal":2828,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2776]},{"teal":2829,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2777]},{"teal":2830,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2778,2779]},{"teal":2831,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2780,2781,2782]},{"teal":2841,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:512","pc":[2783,2784]},{"teal":2842,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:513","pc":[2785,2786]},{"teal":2843,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:513","pc":[2787]},{"teal":2844,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2788,2789]},{"teal":2845,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2790]},{"teal":2846,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:515","pc":[2791,2792]},{"teal":2847,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:515","pc":[2793]},{"teal":2851,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2794,2795]},{"teal":2852,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2796]},{"teal":2857,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2797,2798,2799]},{"teal":2858,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2800]},{"teal":2859,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2801]},{"teal":2863,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2802,2803,2804]},{"teal":2866,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2805]},{"teal":2871,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:520","pc":[2806,2807]},{"teal":2872,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:520","pc":[2808]},{"teal":2873,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:520","pc":[2809]},{"teal":2874,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:520","pc":[2810,2811,2812]},{"teal":2879,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2813]},{"teal":2880,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2814]},{"teal":2881,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2815,2816]},{"teal":2882,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2817]},{"teal":2883,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2818,2819]},{"teal":2884,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2820]},{"teal":2885,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2821]},{"teal":2886,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2822,2823]},{"teal":2887,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2824,2825]},{"teal":2888,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2826,2827]},{"teal":2889,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2828,2829]},{"teal":2890,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2830]},{"teal":2895,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:523","pc":[2831,2832]},{"teal":2896,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:523","pc":[2833,2834,2835]},{"teal":2897,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:523","pc":[2836,2837]},{"teal":2902,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2838,2839]},{"teal":2903,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2840,2841,2842]},{"teal":2904,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2843]},{"teal":2905,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2844]},{"teal":2906,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2845]},{"teal":2907,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2846,2847,2848]},{"teal":2917,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2849]},{"teal":2918,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2850,2851]},{"teal":2919,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2852,2853]},{"teal":2923,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:527","pc":[2854,2855]},{"teal":2924,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:527","pc":[2856]},{"teal":2925,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:527","pc":[2857,2858]},{"teal":2929,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2859,2860]},{"teal":2930,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2861,2862]},{"teal":2934,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:529","pc":[2863,2864]},{"teal":2935,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:529","pc":[2865,2866]},{"teal":2939,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2867,2868]},{"teal":2940,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2869,2870,2871]},{"teal":2941,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2872]},{"teal":2942,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2873,2874]},{"teal":2945,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2875]},{"teal":2946,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2876,2877]},{"teal":2949,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2878]},{"teal":2953,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2879,2880]},{"teal":2954,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2881]},{"teal":2955,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2882]},{"teal":2956,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2883,2884]},{"teal":2957,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2885,2886,2887]},{"teal":2958,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2888]},{"teal":2959,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2889]},{"teal":2960,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2890]},{"teal":2964,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2891,2892]},{"teal":2965,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2893,2894]},{"teal":2966,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2895,2896]},{"teal":2967,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2897,2898]},{"teal":2973,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[2899,2900]},{"teal":2974,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[2901,2902,2903]},{"teal":2975,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[2904]},{"teal":2976,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[2905]},{"teal":2977,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[2906]},{"teal":2978,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[2907,2908,2909]},{"teal":2988,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2910]},{"teal":2989,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2911,2912]},{"teal":2990,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2913,2914]},{"teal":2994,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[2915,2916]},{"teal":2995,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[2917]},{"teal":2996,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[2918,2919]},{"teal":3000,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[2920,2921]},{"teal":3001,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[2922,2923]},{"teal":3005,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:539","pc":[2924,2925]},{"teal":3006,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:539","pc":[2926,2927]},{"teal":3010,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[2928,2929]},{"teal":3011,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[2930,2931,2932]},{"teal":3012,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[2933]},{"teal":3013,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[2934,2935]},{"teal":3016,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2936]},{"teal":3017,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2937,2938]},{"teal":3020,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[2939]},{"teal":3024,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[2940,2941]},{"teal":3025,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[2942,2943]},{"teal":3026,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[2944,2945]},{"teal":3027,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[2946,2947]},{"teal":3032,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:545","pc":[2948,2949]},{"teal":3033,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:545","pc":[2950,2951]},{"teal":3034,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:545","pc":[2952,2953,2954]},{"teal":3035,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:545","pc":[2955,2956,2957]},{"teal":3040,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:546","pc":[2958,2959]},{"teal":3041,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:546","pc":[2960]},{"teal":3042,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:546","pc":[2961]},{"teal":3043,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:546","pc":[2962,2963,2964]},{"teal":3048,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2965]},{"teal":3049,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2966]},{"teal":3050,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2967,2968]},{"teal":3051,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2969]},{"teal":3052,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2970,2971]},{"teal":3053,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2972]},{"teal":3054,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2973]},{"teal":3055,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2974,2975]},{"teal":3056,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2976,2977]},{"teal":3057,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2978,2979]},{"teal":3058,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2980,2981]},{"teal":3059,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:547","pc":[2982]},{"teal":3062,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2983]},{"teal":3067,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[2984,2985,2986]},{"teal":3068,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[2987]},{"teal":3071,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[2988,2989,2990]},{"teal":3072,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[2991]},{"teal":3073,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[2992]},{"teal":3077,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[2993,2994,2995]},{"teal":3080,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[2996]},{"teal":3081,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[2997,2998]},{"teal":3085,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[2999]},{"teal":3086,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3000,3001]},{"teal":3091,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3002,3003]},{"teal":3092,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3004,3005]},{"teal":3093,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3006]},{"teal":3094,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3007]},{"teal":3095,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3008,3009,3010]},{"teal":3100,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3011,3012]},{"teal":3101,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3013]},{"teal":3102,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3014]},{"teal":3103,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3015,3016,3017]},{"teal":3108,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3018]},{"teal":3109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3019]},{"teal":3110,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3020,3021]},{"teal":3111,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3022]},{"teal":3112,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3023,3024]},{"teal":3113,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3025]},{"teal":3114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3026]},{"teal":3115,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3027,3028]},{"teal":3116,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3029,3030]},{"teal":3117,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3031,3032]},{"teal":3118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3033,3034]},{"teal":3119,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3035]},{"teal":3124,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3036,3037]},{"teal":3125,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3038,3039]},{"teal":3126,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3040]},{"teal":3127,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3041,3042]},{"teal":3128,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3043]},{"teal":3129,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3044,3045]},{"teal":3130,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3046]},{"teal":3131,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:556","pc":[3047,3048]},{"teal":3136,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3049,3050]},{"teal":3137,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3051,3052,3053]},{"teal":3138,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3054,3055]},{"teal":3139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3056]},{"teal":3140,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3057,3058,3059]},{"teal":3146,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:558","pc":[3060,3061]},{"teal":3147,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:558","pc":[3062,3063,3064]},{"teal":3148,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:558","pc":[3065]},{"teal":3149,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:558","pc":[3066]},{"teal":3150,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:558","pc":[3067]},{"teal":3151,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:558","pc":[3068,3069,3070]},{"teal":3161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3071]},{"teal":3162,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3072,3073]},{"teal":3163,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3074,3075]},{"teal":3167,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:560","pc":[3076,3077]},{"teal":3168,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:560","pc":[3078]},{"teal":3169,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:560","pc":[3079,3080]},{"teal":3173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:561","pc":[3081,3082]},{"teal":3174,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:561","pc":[3083,3084]},{"teal":3178,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:562","pc":[3085,3086]},{"teal":3179,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:562","pc":[3087,3088]},{"teal":3183,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3089,3090]},{"teal":3184,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3091]},{"teal":3185,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3092]},{"teal":3186,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3093,3094,3095]},{"teal":3187,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3096,3097]},{"teal":3188,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3098,3099,3100]},{"teal":3189,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3101]},{"teal":3190,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3102,3103,3104]},{"teal":3193,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3105,3106]},{"teal":3196,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3107,3108]},{"teal":3199,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3109]},{"teal":3200,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3110,3111]},{"teal":3203,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:559","pc":[3112]},{"teal":3209,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3113,3114]},{"teal":3210,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3115,3116,3117]},{"teal":3211,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3118]},{"teal":3212,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3119]},{"teal":3213,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3120]},{"teal":3214,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:568","pc":[3121,3122,3123]},{"teal":3224,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3124]},{"teal":3225,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3125,3126]},{"teal":3226,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3127,3128]},{"teal":3230,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:570","pc":[3129,3130]},{"teal":3231,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:570","pc":[3131]},{"teal":3232,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:570","pc":[3132,3133]},{"teal":3236,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:571","pc":[3134,3135]},{"teal":3237,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:571","pc":[3136,3137]},{"teal":3241,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:572","pc":[3138,3139]},{"teal":3242,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:572","pc":[3140,3141]},{"teal":3246,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3142,3143]},{"teal":3247,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3144,3145,3146]},{"teal":3248,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3147]},{"teal":3249,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3148,3149]},{"teal":3252,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3150]},{"teal":3253,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3151,3152]},{"teal":3256,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3153]},{"teal":3260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:575","pc":[3154,3155]},{"teal":3261,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:575","pc":[3156,3157]},{"teal":3262,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:575","pc":[3158,3159]},{"teal":3263,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:575","pc":[3160,3161]},{"teal":3269,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3162,3163]},{"teal":3270,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3164,3165,3166]},{"teal":3271,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3167]},{"teal":3272,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3168]},{"teal":3273,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3169]},{"teal":3274,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3170,3171,3172]},{"teal":3284,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3173]},{"teal":3285,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3174,3175]},{"teal":3286,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3176,3177]},{"teal":3290,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:581","pc":[3178,3179]},{"teal":3291,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:581","pc":[3180]},{"teal":3292,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:581","pc":[3181,3182]},{"teal":3296,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:582","pc":[3183,3184]},{"teal":3297,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:582","pc":[3185,3186]},{"teal":3301,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:583","pc":[3187,3188]},{"teal":3302,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:583","pc":[3189,3190]},{"teal":3306,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:584","pc":[3191,3192]},{"teal":3307,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:584","pc":[3193,3194,3195]},{"teal":3308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:584","pc":[3196]},{"teal":3309,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:584","pc":[3197,3198]},{"teal":3312,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3199]},{"teal":3313,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3200,3201]},{"teal":3316,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3202]},{"teal":3320,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:586","pc":[3203,3204]},{"teal":3321,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:586","pc":[3205,3206]},{"teal":3322,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:586","pc":[3207,3208]},{"teal":3323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:586","pc":[3209,3210]},{"teal":3328,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3211,3212]},{"teal":3329,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3213]},{"teal":3330,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3214]},{"teal":3331,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3215,3216]},{"teal":3332,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3217]},{"teal":3333,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3218]},{"teal":3334,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3219,3220,3221]},{"teal":3335,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3222,3223]},{"teal":3336,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3224,3225,3226]},{"teal":3337,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3227]},{"teal":3338,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3228,3229,3230]},{"teal":3341,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3231,3232]},{"teal":3344,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3233]},{"teal":3345,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3234]},{"teal":3350,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3235,3236]},{"teal":3351,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3237]},{"teal":3352,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3238]},{"teal":3353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3239,3240,3241]},{"teal":3358,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3242]},{"teal":3359,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3243]},{"teal":3360,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3244,3245]},{"teal":3361,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3246]},{"teal":3362,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3247,3248]},{"teal":3363,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3249]},{"teal":3364,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3250]},{"teal":3365,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3251,3252]},{"teal":3366,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3253,3254]},{"teal":3367,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3255,3256]},{"teal":3368,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3257,3258]},{"teal":3369,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3259]},{"teal":3375,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:596","pc":[3260,3261]},{"teal":3376,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:596","pc":[3262]},{"teal":3377,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:596","pc":[3263]},{"teal":3378,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:596","pc":[3264,3265,3266]},{"teal":3388,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:598","pc":[3267,3268]},{"teal":3389,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3269,3270]},{"teal":3390,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3271]},{"teal":3391,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3272,3273]},{"teal":3392,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3274]},{"teal":3393,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:600","pc":[3275,3276]},{"teal":3394,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:600","pc":[3277]},{"teal":3395,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:597","pc":[3278,3279]},{"teal":3399,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:603","pc":[3280,3281]},{"teal":3400,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:603","pc":[3282,3283]},{"teal":3401,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:603","pc":[3284,3285,3286]},{"teal":3402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:603","pc":[3287,3288,3289]},{"teal":3406,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3290,3291]},{"teal":3407,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3292]},{"teal":3408,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3293]},{"teal":3409,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3294]},{"teal":3410,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3295,3296]},{"teal":3411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3297]},{"teal":3412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3298]},{"teal":3413,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3299]},{"teal":3414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3300,3301]},{"teal":3415,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3302]},{"teal":3416,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3303,3304]},{"teal":3417,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3305]},{"teal":3418,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3306,3307,3308]},{"teal":3419,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:607","pc":[3309,3310]},{"teal":3423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3311,3312]},{"teal":3424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3313]},{"teal":3425,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3314]},{"teal":3426,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3315]},{"teal":3427,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3316,3317]},{"teal":3428,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3318]},{"teal":3429,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3319]},{"teal":3430,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3320]},{"teal":3431,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3321,3322]},{"teal":3432,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3323]},{"teal":3433,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3324,3325]},{"teal":3434,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3326]},{"teal":3435,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3327,3328,3329]},{"teal":3436,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:608","pc":[3330,3331]},{"teal":3441,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:609","pc":[3332,3333]},{"teal":3442,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:609","pc":[3334]},{"teal":3443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:609","pc":[3335]},{"teal":3444,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:609","pc":[3336,3337,3338]},{"teal":3449,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3339]},{"teal":3450,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3340]},{"teal":3451,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3341,3342]},{"teal":3452,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3343]},{"teal":3453,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3344,3345]},{"teal":3454,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3346]},{"teal":3455,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3347]},{"teal":3456,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3348,3349]},{"teal":3457,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3350,3351]},{"teal":3458,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3352,3353]},{"teal":3459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3354,3355]},{"teal":3460,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3356]},{"teal":3465,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3357,3358]},{"teal":3466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3359,3360]},{"teal":3467,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3361,3362,3363]},{"teal":3471,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3364,3365]},{"teal":3472,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3366,3367]},{"teal":3473,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3368,3369,3370]},{"teal":3477,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:616","pc":[3371,3372]},{"teal":3478,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:616","pc":[3373]},{"teal":3479,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:616","pc":[3374]},{"teal":3480,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:616","pc":[3375]},{"teal":3481,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:616","pc":[3376]},{"teal":3482,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:616","pc":[3377]},{"teal":3483,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:596","pc":[3378,3379,3380]},{"teal":3488,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3381,3382]},{"teal":3489,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3383,3384]},{"teal":3490,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3385,3386]},{"teal":3491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3387,3388,3389]},{"teal":3492,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3390]},{"teal":3493,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3391,3392]},{"teal":3494,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3393]},{"teal":3495,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3394]},{"teal":3496,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3395]},{"teal":3497,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3396,3397]},{"teal":3501,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:619","pc":[3398,3399]},{"teal":3502,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:619","pc":[3400,3401]},{"teal":3503,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:619","pc":[3402,3403]},{"teal":3504,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:619","pc":[3404,3405]},{"teal":3509,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:621","pc":[3406,3407]},{"teal":3510,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:621","pc":[3408,3409]},{"teal":3511,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:621","pc":[3410,3411,3412]},{"teal":3512,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:621","pc":[3413,3414,3415]},{"teal":3519,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3416,3417]},{"teal":3520,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3418]},{"teal":3521,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3419]},{"teal":3522,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3420,3421]},{"teal":3523,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3422,3423,3424]},{"teal":3526,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[3425]},{"teal":3530,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3426,3427,3428]},{"teal":3533,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3429]},{"teal":3537,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3430]},{"teal":3538,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3431,3432]},{"teal":3543,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3433,3434]},{"teal":3544,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3435,3436]},{"teal":3545,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3437]},{"teal":3546,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3438]},{"teal":3547,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3439,3440,3441]},{"teal":3552,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3442,3443]},{"teal":3553,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3444]},{"teal":3554,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3445]},{"teal":3555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3446,3447,3448]},{"teal":3560,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3449]},{"teal":3561,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3450]},{"teal":3562,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3451,3452]},{"teal":3563,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3453]},{"teal":3564,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3454,3455]},{"teal":3565,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3456]},{"teal":3566,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3457]},{"teal":3567,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3458,3459]},{"teal":3568,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3460,3461]},{"teal":3569,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3462,3463]},{"teal":3570,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3464,3465]},{"teal":3571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:629","pc":[3466]},{"teal":3577,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3467,3468]},{"teal":3578,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3469,3470]},{"teal":3579,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3471]},{"teal":3580,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3472]},{"teal":3581,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3473]},{"teal":3582,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3474,3475]},{"teal":3583,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3476]},{"teal":3584,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3477,3478]},{"teal":3585,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3479]},{"teal":3586,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3480,3481]},{"teal":3587,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3482]},{"teal":3588,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3483,3484,3485]},{"teal":3593,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3486,3487]},{"teal":3594,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3488,3489,3490]},{"teal":3601,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3491,3492]},{"teal":3602,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3493]},{"teal":3603,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3494]},{"teal":3604,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3495,3496]},{"teal":3605,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3497,3498,3499]},{"teal":3610,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:635","pc":[3500]},{"teal":3614,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3501,3502]},{"teal":3615,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3503]},{"teal":3619,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3504,3505,3506]},{"teal":3622,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3507]},{"teal":3626,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3508]},{"teal":3627,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3509,3510]},{"teal":3632,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3511,3512]},{"teal":3633,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3513,3514]},{"teal":3634,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3515]},{"teal":3635,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3516]},{"teal":3636,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3517,3518,3519]},{"teal":3641,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:640","pc":[3520,3521]},{"teal":3642,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:640","pc":[3522]},{"teal":3643,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:640","pc":[3523]},{"teal":3644,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:640","pc":[3524,3525,3526]},{"teal":3649,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3527]},{"teal":3650,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3528]},{"teal":3651,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3529,3530]},{"teal":3652,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3531]},{"teal":3653,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3532,3533]},{"teal":3654,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3534]},{"teal":3655,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3535]},{"teal":3656,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3536,3537]},{"teal":3657,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3538,3539]},{"teal":3658,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3540,3541]},{"teal":3659,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3542,3543]},{"teal":3660,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3544]},{"teal":3666,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3545,3546]},{"teal":3667,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3547,3548]},{"teal":3668,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3549]},{"teal":3669,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3550]},{"teal":3670,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3551]},{"teal":3671,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3552,3553]},{"teal":3672,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3554]},{"teal":3673,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3555,3556]},{"teal":3674,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3557]},{"teal":3675,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3558,3559]},{"teal":3676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3560]},{"teal":3677,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3561,3562,3563]},{"teal":3682,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3564,3565]},{"teal":3683,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3566,3567]},{"teal":3684,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3568]},{"teal":3685,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3569,3570]},{"teal":3686,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3571]},{"teal":3687,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3572,3573]},{"teal":3688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:644","pc":[3574]},{"teal":3692,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:645","pc":[3575]},{"teal":3693,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3576,3577,3578]},{"teal":3698,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3579,3580]},{"teal":3699,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3581,3582]},{"teal":3700,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3583]},{"teal":3701,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3584]},{"teal":3702,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3585]},{"teal":3703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3586,3587]},{"teal":3704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3588]},{"teal":3705,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3589,3590]},{"teal":3706,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3591]},{"teal":3707,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3592,3593]},{"teal":3708,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3594]},{"teal":3709,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:647","pc":[3595,3596,3597]},{"teal":3714,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:648","pc":[3598,3599]},{"teal":3715,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:648","pc":[3600,3601]},{"teal":3716,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:648","pc":[3602]},{"teal":3717,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:648","pc":[3603,3604]},{"teal":3718,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:648","pc":[3605]},{"teal":3719,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:648","pc":[3606,3607]},{"teal":3720,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:648","pc":[3608]},{"teal":3724,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:649","pc":[3609]},{"teal":3731,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3610,3611]},{"teal":3732,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3612]},{"teal":3733,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3613]},{"teal":3734,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3614,3615]},{"teal":3735,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:639","pc":[3616,3617,3618]},{"teal":3738,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3619]},{"teal":3742,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:654","pc":[3620,3621,3622]},{"teal":3746,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:655","pc":[3623,3624]},{"teal":3747,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:655","pc":[3625,3626]},{"teal":3748,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:655","pc":[3627]},{"teal":3749,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:655","pc":[3628,3629]},{"teal":3750,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:655","pc":[3630]},{"teal":3751,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:655","pc":[3631,3632]},{"teal":3752,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:655","pc":[3633]},{"teal":3753,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:654","pc":[3634]},{"teal":3758,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3635,3636,3637]},{"teal":3759,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3638]},{"teal":3760,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3639]},{"teal":3761,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3640]},{"teal":3762,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3641]},{"teal":3765,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","errorMessage":"argument 0 (enabled) for setFreeze must be a bool","pc":[3642]},{"teal":3766,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3643]},{"teal":3767,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3644]},{"teal":3770,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3645,3646,3647]},{"teal":3771,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3648]},{"teal":3772,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3649]},{"teal":3776,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3650,3651,3652]},{"teal":3780,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:659","pc":[3653,3654]},{"teal":3781,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:659","pc":[3655]},{"teal":3782,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:659","pc":[3656]},{"teal":3783,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:659","pc":[3657]},{"teal":3786,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:659","errorMessage":"Only injector can freeze payouts","pc":[3658]},{"teal":3790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:660","pc":[3659,3660]},{"teal":3791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:660","pc":[3661,3662]},{"teal":3792,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:660","pc":[3663,3664]},{"teal":3793,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:660","pc":[3665]},{"teal":3794,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:660","pc":[3666,3667]},{"teal":3795,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:660","pc":[3668]},{"teal":3796,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:660","pc":[3669]},{"teal":3797,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:658","pc":[3670]},{"teal":3802,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:663","pc":[3671,3672,3673]},{"teal":3803,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:663","pc":[3674]},{"teal":3804,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:663","pc":[3675]},{"teal":3808,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:663","pc":[3676,3677,3678]},{"teal":3809,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:663","pc":[3679]},{"teal":3812,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3680,3681,3682,3683,3684,3685]},{"teal":3813,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3686,3687,3688]},{"teal":3814,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3689,3690,3691,3692]},{"teal":3817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[3693]},{"teal":3820,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3694,3695,3696,3697,3698,3699]},{"teal":3821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3700,3701,3702,3703,3704,3705]},{"teal":3822,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3706,3707,3708,3709,3710,3711]},{"teal":3823,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3712,3713,3714,3715,3716,3717]},{"teal":3824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3718,3719,3720,3721,3722,3723]},{"teal":3825,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3724,3725,3726,3727,3728,3729]},{"teal":3826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3730,3731,3732,3733,3734,3735]},{"teal":3827,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3736,3737,3738,3739,3740,3741]},{"teal":3828,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3742,3743,3744,3745,3746,3747]},{"teal":3829,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3748,3749,3750,3751,3752,3753]},{"teal":3830,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3754,3755,3756,3757,3758,3759]},{"teal":3831,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3760,3761,3762,3763,3764,3765]},{"teal":3832,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3766,3767,3768,3769,3770,3771]},{"teal":3833,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3772,3773,3774,3775,3776,3777]},{"teal":3834,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3778,3779,3780,3781,3782,3783]},{"teal":3835,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3784,3785,3786,3787,3788,3789]},{"teal":3836,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3790,3791,3792,3793,3794,3795]},{"teal":3837,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3796,3797,3798,3799,3800,3801]},{"teal":3838,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3802,3803,3804,3805,3806,3807]},{"teal":3839,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3808,3809,3810,3811,3812,3813]},{"teal":3840,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3814,3815,3816,3817,3818,3819]},{"teal":3841,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3820,3821,3822,3823,3824,3825]},{"teal":3842,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3826,3827,3828,3829,3830,3831]},{"teal":3843,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3832,3833,3834,3835,3836,3837]},{"teal":3844,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3838,3839,3840,3841,3842,3843]},{"teal":3845,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3844,3845,3846]},{"teal":3846,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3847,3848,3849,3850,3851,3852,3853,3854,3855,3856,3857,3858,3859,3860,3861,3862,3863,3864,3865,3866,3867,3868,3869,3870,3871,3872,3873,3874,3875,3876,3877,3878,3879,3880,3881,3882,3883,3884,3885,3886,3887,3888,3889,3890,3891,3892,3893,3894,3895,3896,3897,3898]},{"teal":3849,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[3899]},{"teal":3852,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3900,3901,3902,3903,3904,3905]},{"teal":3853,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3906,3907,3908]},{"teal":3854,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3909,3910,3911,3912]},{"teal":3857,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[3913]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"I3ByYWdtYSB2ZXJzaW9uIDExCmludGNibG9jayAwIDEgNiAzMDAgNSA1NiAzMiA0IDEwMDAwMCAxMDAwMDAwMDAwMDAwMDAwIDI4MDA3IDEyNwpieXRlY2Jsb2NrIDB4MGE4MTAxIDB4IDB4NzM3NDYxNmI2NTcyNzMgMHg2OTZlNmE2NTYzNzQ2ZjcyNDE2NDY0NzI2NTczNzMgMHg2ZTc1NmQ1Mzc0NjE2YjY1NzI3MyAweDc0NmY3NDYxNmM1Mzc0NjE2YjY1NjQgMHg3MjY1Nzc2MTcyNjQ0MTczNzM2NTc0NDk2NCAweDAwMDAwMDAwMDAwMDAwMDAgMHg2MTY0NmQ2OTZlNDE2NDY0NzI2NTczNzMgMHg2OTZlNmE2NTYzNzQ2NTY0Nzg1NTUzNDQ1MjY1Nzc2MTcyNjQ3MyAweDY5NmU2YTY1NjM3NDY1NjQ0MTUzNDE1MjY1Nzc2MTcyNjQ3MyAweDc4NTU1MzQ0NDE3MzczNjU3NDQ5NjQgMHgwMCAweDcwNjE2OTY0NDE1MzQxNTI2NTc3NjE3MjY0NzMgMHg3MjY1Nzc2MTcyNjQ1MDY1NzI0OTZlNmE2NTYzNzQ2OTZmNmUgMHg3Mzc0NjE2YjY1NjQ0MTczNzM2NTc0NDk2NCAweDc0NmY3NDYxNmM1MjY1Nzc2MTcyNjQ3MyAweDc4NTU1MzQ0NDY2NTY1IDB4NzI2NTc3NjE3MjY0NDY3MjY1NzE3NTY1NmU2Mzc5IDB4NzA2ZjZmNmM0MTYzNzQ2OTc2NjUgMHg3MDZmNmY2YzQ1NmU2NDY5NmU2NyAweDY2NzI2NTY1N2E2NSAweDc0NzI2NTYxNzM3NTcyNzk0MTY0NjQ3MjY1NzM3MyAweDY5NmU2YTY1NjM3NDY5NmY2ZTU0Nzk3MDY1IDB4NjY2NTY1NTc2MTY5NzY2NTY0IDB4NmM2MTczNzQ0OTZlNmE2NTYzNzQ2OTZmNmU1NDY5NmQ2NQoKLy8gVGhpcyBURUFMIHdhcyBnZW5lcmF0ZWQgYnkgVEVBTFNjcmlwdCB2MC4xMDYuMwovLyBodHRwczovL2dpdGh1Yi5jb20vYWxnb3JhbmRmb3VuZGF0aW9uL1RFQUxTY3JpcHQKCi8vIFRoaXMgY29udHJhY3QgaXMgY29tcGxpYW50IHdpdGggYW5kL29yIGltcGxlbWVudHMgdGhlIGZvbGxvd2luZyBBUkNzOiBbIEFSQzQgXQoKLy8gVGhlIGZvbGxvd2luZyB0ZW4gbGluZXMgb2YgVEVBTCBoYW5kbGUgaW5pdGlhbCBwcm9ncmFtIGZsb3cKLy8gVGhpcyBwYXR0ZXJuIGlzIHVzZWQgdG8gbWFrZSBpdCBlYXN5IGZvciBhbnlvbmUgdG8gcGFyc2UgdGhlIHN0YXJ0IG9mIHRoZSBwcm9ncmFtIGFuZCBkZXRlcm1pbmUgaWYgYSBzcGVjaWZpYyBhY3Rpb24gaXMgYWxsb3dlZAovLyBIZXJlLCBhY3Rpb24gcmVmZXJzIHRvIHRoZSBPbkNvbXBsZXRlIGluIGNvbWJpbmF0aW9uIHdpdGggd2hldGhlciB0aGUgYXBwIGlzIGJlaW5nIGNyZWF0ZWQgb3IgY2FsbGVkCi8vIEV2ZXJ5IHBvc3NpYmxlIGFjdGlvbiBmb3IgdGhpcyBjb250cmFjdCBpcyByZXByZXNlbnRlZCBpbiB0aGUgc3dpdGNoIHN0YXRlbWVudAovLyBJZiB0aGUgYWN0aW9uIGlzIG5vdCBpbXBsZW1lbnRlZCBpbiB0aGUgY29udHJhY3QsIGl0cyByZXNwZWN0aXZlIGJyYW5jaCB3aWxsIGJlICIqTk9UX0lNUExFTUVOVEVEIiB3aGljaCBqdXN0IGNvbnRhaW5zICJlcnIiCnR4biBBcHBsaWNhdGlvbklECiEKaW50YyAyIC8vIDYKKgp0eG4gT25Db21wbGV0aW9uCisKc3dpdGNoICpjYWxsX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY2FsbF9EZWxldGVBcHBsaWNhdGlvbiAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGNyZWF0ZUFwcGxpY2F0aW9uKGFkZHJlc3MsYWRkcmVzcyxhZGRyZXNzKXZvaWQKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCS8vIHRyZWFzdXJ5QWRkcmVzczogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMwoJZHVwCglsZW4KCWludGMgNiAvLyAzMgoJPT0KCgkvLyBhcmd1bWVudCAwICh0cmVhc3VyeUFkZHJlc3MpIGZvciBjcmVhdGVBcHBsaWNhdGlvbiBtdXN0IGJlIGEgYWRkcmVzcwoJYXNzZXJ0CgoJLy8gaW5qZWN0b3JBZGRyZXNzOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglkdXAKCWxlbgoJaW50YyA2IC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDEgKGluamVjdG9yQWRkcmVzcykgZm9yIGNyZWF0ZUFwcGxpY2F0aW9uIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBhZG1pbkFkZHJlc3M6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnRjIDYgLy8gMzIKCT09CgoJLy8gYXJndW1lbnQgMiAoYWRtaW5BZGRyZXNzKSBmb3IgY3JlYXRlQXBwbGljYXRpb24gbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIGV4ZWN1dGUgY3JlYXRlQXBwbGljYXRpb24oYWRkcmVzcyxhZGRyZXNzLGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiBjcmVhdGVBcHBsaWNhdGlvbgoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gY3JlYXRlQXBwbGljYXRpb24oYWRtaW5BZGRyZXNzOiBBZGRyZXNzLCBpbmplY3RvckFkZHJlc3M6IEFkZHJlc3MsIHRyZWFzdXJ5QWRkcmVzczogQWRkcmVzcyk6IHZvaWQKY3JlYXRlQXBwbGljYXRpb246Cglwcm90byAzIDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NzgKCS8vIHRoaXMuYWRtaW5BZGRyZXNzLnZhbHVlID0gYWRtaW5BZGRyZXNzCglieXRlYyA4IC8vICAiYWRtaW5BZGRyZXNzIgoJZnJhbWVfZGlnIC0xIC8vIGFkbWluQWRkcmVzczogQWRkcmVzcwoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NzkKCS8vIHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlID0gaW5qZWN0b3JBZGRyZXNzCglieXRlYyAzIC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJZnJhbWVfZGlnIC0yIC8vIGluamVjdG9yQWRkcmVzczogQWRkcmVzcwoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6ODAKCS8vIHRoaXMudHJlYXN1cnlBZGRyZXNzLnZhbHVlID0gdHJlYXN1cnlBZGRyZXNzCglieXRlYyAyMiAvLyAgInRyZWFzdXJ5QWRkcmVzcyIKCWZyYW1lX2RpZyAtMyAvLyB0cmVhc3VyeUFkZHJlc3M6IEFkZHJlc3MKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjgxCgkvLyB0aGlzLmNvbnRyYWN0VmVyc2lvbi52YWx1ZSA9IFZFUlNJT04KCXB1c2hieXRlcyAweDYzNmY2ZTc0NzI2MTYzNzQ1NjY1NzI3MzY5NmY2ZSAvLyAiY29udHJhY3RWZXJzaW9uIgoJcHVzaGludCAxMTAxCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBpbml0QXBwbGljYXRpb24odWludDY0LHVpbnQ2NCx1aW50NjQsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9pbml0QXBwbGljYXRpb246CgkvLyB4VVNEQXNzZXRJRDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyA0CglidG9pCgoJLy8geFVTREZlZTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAzCglidG9pCgoJLy8gcmV3YXJkQXNzZXRJZDogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAyCglidG9pCgoJLy8gc3Rha2VkQXNzZXQ6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgaW5pdEFwcGxpY2F0aW9uKHVpbnQ2NCx1aW50NjQsdWludDY0LHVpbnQ2NCl2b2lkCgljYWxsc3ViIGluaXRBcHBsaWNhdGlvbgoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gaW5pdEFwcGxpY2F0aW9uKHN0YWtlZEFzc2V0OiB1aW50NjQsIHJld2FyZEFzc2V0SWQ6IHVpbnQ2NCwgeFVTREZlZTogdWludDY0LCB4VVNEQXNzZXRJRDogdWludDY0KTogdm9pZAppbml0QXBwbGljYXRpb246Cglwcm90byA0IDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6ODUKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuYWRtaW5BZGRyZXNzLnZhbHVlLCAnT25seSBhZG1pbiBjYW4gaW5pdCBhcHBsaWNhdGlvbicpCgl0eG4gU2VuZGVyCglieXRlYyA4IC8vICAiYWRtaW5BZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBhZG1pbiBjYW4gaW5pdCBhcHBsaWNhdGlvbgoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjg3CgkvLyB0aGlzLnN0YWtlZEFzc2V0SWQudmFsdWUgPSBzdGFrZWRBc3NldAoJYnl0ZWMgMTUgLy8gICJzdGFrZWRBc3NldElkIgoJZnJhbWVfZGlnIC0xIC8vIHN0YWtlZEFzc2V0OiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjg4CgkvLyB0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUgPSByZXdhcmRBc3NldElkCglieXRlYyA2IC8vICAicmV3YXJkQXNzZXRJZCIKCWZyYW1lX2RpZyAtMiAvLyByZXdhcmRBc3NldElkOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjg5CgkvLyB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlID0gMAoJYnl0ZWMgNSAvLyAgInRvdGFsU3Rha2VkIgoJaW50YyAwIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjkwCgkvLyB0aGlzLmZyZWV6ZS52YWx1ZSA9IGZhbHNlCglieXRlYyAyMSAvLyAgImZyZWV6ZSIKCWludGMgMCAvLyAwCglieXRlYyAxMiAvLyAweDAwCglpbnRjIDAgLy8gMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjkxCgkvLyB0aGlzLmluamVjdGVkQVNBUmV3YXJkcy52YWx1ZSA9IDAKCWJ5dGVjIDEwIC8vICAiaW5qZWN0ZWRBU0FSZXdhcmRzIgoJaW50YyAwIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjkyCgkvLyB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgPSAwCglieXRlYyA5IC8vICAiaW5qZWN0ZWR4VVNEUmV3YXJkcyIKCWludGMgMCAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo5MwoJLy8gdGhpcy5udW1TdGFrZXJzLnZhbHVlID0gMAoJYnl0ZWMgNCAvLyAgIm51bVN0YWtlcnMiCglpbnRjIDAgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6OTQKCS8vIHRoaXMueFVTREZlZS52YWx1ZSA9IHhVU0RGZWUKCWJ5dGVjIDE3IC8vICAieFVTREZlZSIKCWZyYW1lX2RpZyAtMyAvLyB4VVNERmVlOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjk1CgkvLyB0aGlzLmZlZVdhaXZlZC52YWx1ZSA9IGZhbHNlCglieXRlYyAyNCAvLyAgImZlZVdhaXZlZCIKCWludGMgMCAvLyAwCglieXRlYyAxMiAvLyAweDAwCglpbnRjIDAgLy8gMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjk2CgkvLyB0aGlzLnBvb2xBY3RpdmUudmFsdWUgPSBmYWxzZQoJYnl0ZWMgMTkgLy8gICJwb29sQWN0aXZlIgoJaW50YyAwIC8vIDAKCWJ5dGVjIDEyIC8vIDB4MDAKCWludGMgMCAvLyAwCgl1bmNvdmVyIDIKCXNldGJpdAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6OTcKCS8vIHRoaXMucG9vbEVuZGluZy52YWx1ZSA9IGZhbHNlCglieXRlYyAyMCAvLyAgInBvb2xFbmRpbmciCglpbnRjIDAgLy8gMAoJYnl0ZWMgMTIgLy8gMHgwMAoJaW50YyAwIC8vIDAKCXVuY292ZXIgMgoJc2V0Yml0CglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo5OAoJLy8gdGhpcy54VVNEQXNzZXRJZC52YWx1ZSA9IHhVU0RBc3NldElECglieXRlYyAxMSAvLyAgInhVU0RBc3NldElkIgoJZnJhbWVfZGlnIC00IC8vIHhVU0RBc3NldElEOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjk5CgkvLyB0aGlzLnRvdGFsUmV3YXJkcy52YWx1ZSA9IDAKCWJ5dGVjIDE2IC8vICAidG90YWxSZXdhcmRzIgoJaW50YyAwIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEwMAoJLy8gdGhpcy5yZXdhcmRGcmVxdWVuY3kudmFsdWUgPSAwCglieXRlYyAxOCAvLyAgInJld2FyZEZyZXF1ZW5jeSIKCWludGMgMCAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMDEKCS8vIHRoaXMucmV3YXJkUGVySW5qZWN0aW9uLnZhbHVlID0gMAoJYnl0ZWMgMTQgLy8gICJyZXdhcmRQZXJJbmplY3Rpb24iCglpbnRjIDAgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTAyCgkvLyB0aGlzLmluamVjdGlvblR5cGUudmFsdWUgPSAwCglieXRlYyAyMyAvLyAgImluamVjdGlvblR5cGUiCglpbnRjIDAgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTAzCgkvLyB0aGlzLmxhc3RJbmplY3Rpb25UaW1lLnZhbHVlID0gZ2xvYmFscy5sYXRlc3RUaW1lc3RhbXAKCWJ5dGVjIDI1IC8vICAibGFzdEluamVjdGlvblRpbWUiCglnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMDQKCS8vIHRoaXMucGFpZEFTQVJld2FyZHMudmFsdWUgPSAwCglieXRlYyAxMyAvLyAgInBhaWRBU0FSZXdhcmRzIgoJaW50YyAwIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEwNgoJLy8gc2VuZEFzc2V0VHJhbnNmZXIoewoJLy8gICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQoc3Rha2VkQXNzZXQpLAoJLy8gICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgIGFzc2V0QW1vdW50OiAwLAoJLy8gICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDcgLy8gIGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEwNwoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQoc3Rha2VkQXNzZXQpCglmcmFtZV9kaWcgLTEgLy8gc3Rha2VkQXNzZXQ6IHVpbnQ2NAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTA4CgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEwOQoJLy8gYXNzZXRBbW91bnQ6IDAKCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMTEKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMueFVTREFzc2V0SWQudmFsdWUpLAoJLy8gICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgIGFzc2V0QW1vdW50OiAwLAoJLy8gICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDcgLy8gIGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjExMgoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDExIC8vICAieFVTREFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTEzCgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjExNAoJLy8gYXNzZXRBbW91bnQ6IDAKCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoJcmV0c3ViCgovLyB1cGRhdGVBZG1pbkFkZHJlc3MoYWRkcmVzcyl2b2lkCiphYmlfcm91dGVfdXBkYXRlQWRtaW5BZGRyZXNzOgoJLy8gYWRtaW5BZGRyZXNzOiBhZGRyZXNzCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglkdXAKCWxlbgoJaW50YyA2IC8vIDMyCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGFkbWluQWRkcmVzcykgZm9yIHVwZGF0ZUFkbWluQWRkcmVzcyBtdXN0IGJlIGEgYWRkcmVzcwoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSB1cGRhdGVBZG1pbkFkZHJlc3MoYWRkcmVzcyl2b2lkCgljYWxsc3ViIHVwZGF0ZUFkbWluQWRkcmVzcwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gdXBkYXRlQWRtaW5BZGRyZXNzKGFkbWluQWRkcmVzczogQWRkcmVzcyk6IHZvaWQKdXBkYXRlQWRtaW5BZGRyZXNzOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEyMAoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUsICdPbmx5IGFkbWluIGNhbiB1cGRhdGUgYWRtaW4gYWRkcmVzcycpCgl0eG4gU2VuZGVyCglieXRlYyA4IC8vICAiYWRtaW5BZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBhZG1pbiBjYW4gdXBkYXRlIGFkbWluIGFkZHJlc3MKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMjEKCS8vIHRoaXMuYWRtaW5BZGRyZXNzLnZhbHVlID0gYWRtaW5BZGRyZXNzCglieXRlYyA4IC8vICAiYWRtaW5BZGRyZXNzIgoJZnJhbWVfZGlnIC0xIC8vIGFkbWluQWRkcmVzczogQWRkcmVzcwoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gc2V0UG9vbEFjdGl2ZSgpdm9pZAoqYWJpX3JvdXRlX3NldFBvb2xBY3RpdmU6CgkvLyBleGVjdXRlIHNldFBvb2xBY3RpdmUoKXZvaWQKCWNhbGxzdWIgc2V0UG9vbEFjdGl2ZQoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gc2V0UG9vbEFjdGl2ZSgpOiB2b2lkCnNldFBvb2xBY3RpdmU6Cglwcm90byAwIDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTI1CgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09PSB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZSwgJ09ubHkgYWRtaW4gY2FuIHNldCBwb29sIGFjdGl2ZScpCgl0eG4gU2VuZGVyCglieXRlYyA4IC8vICAiYWRtaW5BZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBhZG1pbiBjYW4gc2V0IHBvb2wgYWN0aXZlCglhc3NlcnQKCgkvLyAqaWYwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEyNgoJLy8gIXRoaXMuZmVlV2FpdmVkLnZhbHVlCglieXRlYyAyNCAvLyAgImZlZVdhaXZlZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJZ2V0Yml0CgkhCglieiAqaWYwX2VuZAoKCS8vICppZjBfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjEyNwoJLy8gYXNzZXJ0KHRoaXMuYXBwLmFkZHJlc3MuYXNzZXRCYWxhbmNlKHRoaXMueFVTREFzc2V0SWQudmFsdWUpID49IHRoaXMueFVTREZlZS52YWx1ZSwgJ0luc3VmZmljaWVudCBiYWxhbmNlJykKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglieXRlYyAxMSAvLyAgInhVU0RBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQoJcG9wCglieXRlYyAxNyAvLyAgInhVU0RGZWUiCglhcHBfZ2xvYmFsX2dldAoJPj0KCgkvLyBJbnN1ZmZpY2llbnQgYmFsYW5jZQoJYXNzZXJ0CgoqaWYwX2VuZDoKCS8vICppZjFfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTMxCgkvLyB0aGlzLmluamVjdGlvblR5cGUudmFsdWUgPT09IDAKCWJ5dGVjIDIzIC8vICAiaW5qZWN0aW9uVHlwZSIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJPT0KCWJ6ICppZjFfZW5kCgoJLy8gKmlmMV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTMyCgkvLyBhc3NlcnQodGhpcy50b3RhbFJld2FyZHMudmFsdWUgPiAwLCAnVG90YWwgcmV3YXJkcyBub3Qgc2V0JykKCWJ5dGVjIDE2IC8vICAidG90YWxSZXdhcmRzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAwCgk+CgoJLy8gVG90YWwgcmV3YXJkcyBub3Qgc2V0Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTMzCgkvLyBhc3NlcnQodGhpcy5yZXdhcmRQZXJJbmplY3Rpb24udmFsdWUgPiAwLCAnUmV3YXJkIHBlciBpbmplY3Rpb24gbm90IHNldCcpCglieXRlYyAxNCAvLyAgInJld2FyZFBlckluamVjdGlvbiIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJPgoKCS8vIFJld2FyZCBwZXIgaW5qZWN0aW9uIG5vdCBzZXQKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxMzQKCS8vIGFzc2VydCgKCS8vICAgICAgICAgdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUuYXNzZXRCYWxhbmNlKHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSkgPj0gdGhpcy50b3RhbFJld2FyZHMudmFsdWUsCgkvLyAgICAgICAgICdJbnN1ZmZpY2llbnQgcmV3YXJkcycKCS8vICAgICAgICkKCWJ5dGVjIDMgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgNiAvLyAgInJld2FyZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglwb3AKCWJ5dGVjIDE2IC8vICAidG90YWxSZXdhcmRzIgoJYXBwX2dsb2JhbF9nZXQKCT49CgoJLy8gSW5zdWZmaWNpZW50IHJld2FyZHMKCWFzc2VydAoKKmlmMV9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTQwCgkvLyBhc3NlcnQodGhpcy5yZXdhcmRGcmVxdWVuY3kudmFsdWUgPiAwLCAnUmV3YXJkIGZyZXF1ZW5jeSBub3Qgc2V0JykKCWJ5dGVjIDE4IC8vICAicmV3YXJkRnJlcXVlbmN5IgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAwCgk+CgoJLy8gUmV3YXJkIGZyZXF1ZW5jeSBub3Qgc2V0Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTQyCgkvLyB0aGlzLnBvb2xBY3RpdmUudmFsdWUgPSB0cnVlCglieXRlYyAxOSAvLyAgInBvb2xBY3RpdmUiCglpbnRjIDEgLy8gMQoJYnl0ZWMgMTIgLy8gMHgwMAoJaW50YyAwIC8vIDAKCXVuY292ZXIgMgoJc2V0Yml0CglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNDMKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMueFVTREFzc2V0SWQudmFsdWUpLAoJLy8gICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy50cmVhc3VyeUFkZHJlc3MudmFsdWUsCgkvLyAgICAgICBhc3NldEFtb3VudDogdGhpcy54VVNERmVlLnZhbHVlLAoJLy8gICAgICAgc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDcgLy8gIGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE0NAoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDExIC8vICAieFVTREFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTQ1CgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLnRyZWFzdXJ5QWRkcmVzcy52YWx1ZQoJYnl0ZWMgMjIgLy8gICJ0cmVhc3VyeUFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE0NgoJLy8gYXNzZXRBbW91bnQ6IHRoaXMueFVTREZlZS52YWx1ZQoJYnl0ZWMgMTcgLy8gICJ4VVNERmVlIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTQ3CgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCXJldHN1YgoKLy8gc2V0UmV3YXJkUGFyYW1zKHVpbnQ2NCx1aW50NjQsdWludDY0LHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfc2V0UmV3YXJkUGFyYW1zOgoJLy8gaW5qZWN0aW9uVHlwZTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyA0CglidG9pCgoJLy8gcmV3YXJkUGVySW5qZWN0aW9uOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDMKCWJ0b2kKCgkvLyByZXdhcmRGcmVxdWVuY3k6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJYnRvaQoKCS8vIHRvdGFsUmV3YXJkczogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSBzZXRSZXdhcmRQYXJhbXModWludDY0LHVpbnQ2NCx1aW50NjQsdWludDY0KXZvaWQKCWNhbGxzdWIgc2V0UmV3YXJkUGFyYW1zCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBzZXRSZXdhcmRQYXJhbXModG90YWxSZXdhcmRzOiB1aW50NjQsIHJld2FyZEZyZXF1ZW5jeTogdWludDY0LCByZXdhcmRQZXJJbmplY3Rpb246IHVpbnQ2NCwgaW5qZWN0aW9uVHlwZTogdWludDY0KTogdm9pZApzZXRSZXdhcmRQYXJhbXM6Cglwcm90byA0IDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTU3CgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09PSB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZSwgJ09ubHkgYWRtaW4gY2FuIHNldCByZXdhcmQgcGFyYW1zJykKCXR4biBTZW5kZXIKCWJ5dGVjIDggLy8gICJhZG1pbkFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGFkbWluIGNhbiBzZXQgcmV3YXJkIHBhcmFtcwoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE1OAoJLy8gdGhpcy5pbmplY3Rpb25UeXBlLnZhbHVlID0gaW5qZWN0aW9uVHlwZQoJYnl0ZWMgMjMgLy8gICJpbmplY3Rpb25UeXBlIgoJZnJhbWVfZGlnIC00IC8vIGluamVjdGlvblR5cGU6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCgkvLyAqaWYyX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE1OQoJLy8gaW5qZWN0aW9uVHlwZSA9PT0gMAoJZnJhbWVfZGlnIC00IC8vIGluamVjdGlvblR5cGU6IHVpbnQ2NAoJaW50YyAwIC8vIDAKCT09CglieiAqaWYyX2Vsc2UKCgkvLyAqaWYyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNjAKCS8vIHRoaXMudG90YWxSZXdhcmRzLnZhbHVlID0gdG90YWxSZXdhcmRzCglieXRlYyAxNiAvLyAgInRvdGFsUmV3YXJkcyIKCWZyYW1lX2RpZyAtMSAvLyB0b3RhbFJld2FyZHM6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTYxCgkvLyB0aGlzLnJld2FyZEZyZXF1ZW5jeS52YWx1ZSA9IHJld2FyZEZyZXF1ZW5jeQoJYnl0ZWMgMTggLy8gICJyZXdhcmRGcmVxdWVuY3kiCglmcmFtZV9kaWcgLTIgLy8gcmV3YXJkRnJlcXVlbmN5OiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE2MgoJLy8gdGhpcy5yZXdhcmRQZXJJbmplY3Rpb24udmFsdWUgPSByZXdhcmRQZXJJbmplY3Rpb24KCWJ5dGVjIDE0IC8vICAicmV3YXJkUGVySW5qZWN0aW9uIgoJZnJhbWVfZGlnIC0zIC8vIHJld2FyZFBlckluamVjdGlvbjogdWludDY0CglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYyX2VuZAoKKmlmMl9lbHNlOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE2NAoJLy8gdGhpcy50b3RhbFJld2FyZHMudmFsdWUgPSAwCglieXRlYyAxNiAvLyAgInRvdGFsUmV3YXJkcyIKCWludGMgMCAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNjUKCS8vIHRoaXMucmV3YXJkRnJlcXVlbmN5LnZhbHVlID0gcmV3YXJkRnJlcXVlbmN5CglieXRlYyAxOCAvLyAgInJld2FyZEZyZXF1ZW5jeSIKCWZyYW1lX2RpZyAtMiAvLyByZXdhcmRGcmVxdWVuY3k6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTY2CgkvLyB0aGlzLnJld2FyZFBlckluamVjdGlvbi52YWx1ZSA9IDAKCWJ5dGVjIDE0IC8vICAicmV3YXJkUGVySW5qZWN0aW9uIgoJaW50YyAwIC8vIDAKCWFwcF9nbG9iYWxfcHV0CgoqaWYyX2VuZDoKCXJldHN1YgoKLy8gdXBkYXRlSW5qZWN0ZWRBU0FSZXdhcmRzKHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfdXBkYXRlSW5qZWN0ZWRBU0FSZXdhcmRzOgoJLy8gaW5qZWN0ZWRBU0FSZXdhcmRzOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIHVwZGF0ZUluamVjdGVkQVNBUmV3YXJkcyh1aW50NjQpdm9pZAoJY2FsbHN1YiB1cGRhdGVJbmplY3RlZEFTQVJld2FyZHMKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHVwZGF0ZUluamVjdGVkQVNBUmV3YXJkcyhpbmplY3RlZEFTQVJld2FyZHM6IHVpbnQ2NCk6IHZvaWQKdXBkYXRlSW5qZWN0ZWRBU0FSZXdhcmRzOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE3MwoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsICdPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgaW5qZWN0ZWQgcmV3YXJkcycpCgl0eG4gU2VuZGVyCglieXRlYyAzIC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBpbmplY3RvciBjYW4gdXBkYXRlIGluamVjdGVkIHJld2FyZHMKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNzQKCS8vIHRoaXMuaW5qZWN0ZWRBU0FSZXdhcmRzLnZhbHVlID0gaW5qZWN0ZWRBU0FSZXdhcmRzCglieXRlYyAxMCAvLyAgImluamVjdGVkQVNBUmV3YXJkcyIKCWZyYW1lX2RpZyAtMSAvLyBpbmplY3RlZEFTQVJld2FyZHM6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gdXBkYXRlUGFpZEFTQVJld2FyZHModWludDY0KXZvaWQKKmFiaV9yb3V0ZV91cGRhdGVQYWlkQVNBUmV3YXJkczoKCS8vIHBhaWRBU0FSZXdhcmRzOiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyBleGVjdXRlIHVwZGF0ZVBhaWRBU0FSZXdhcmRzKHVpbnQ2NCl2b2lkCgljYWxsc3ViIHVwZGF0ZVBhaWRBU0FSZXdhcmRzCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyB1cGRhdGVQYWlkQVNBUmV3YXJkcyhwYWlkQVNBUmV3YXJkczogdWludDY0KTogdm9pZAp1cGRhdGVQYWlkQVNBUmV3YXJkczoKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxNzgKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlLCAnT25seSBpbmplY3RvciBjYW4gdXBkYXRlIHBhaWQgcmV3YXJkcycpCgl0eG4gU2VuZGVyCglieXRlYyAzIC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBpbmplY3RvciBjYW4gdXBkYXRlIHBhaWQgcmV3YXJkcwoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE3OQoJLy8gdGhpcy5wYWlkQVNBUmV3YXJkcy52YWx1ZSA9IHBhaWRBU0FSZXdhcmRzCglieXRlYyAxMyAvLyAgInBhaWRBU0FSZXdhcmRzIgoJZnJhbWVfZGlnIC0xIC8vIHBhaWRBU0FSZXdhcmRzOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIHVwZGF0ZUluamVjdGVkeFVTRFJld2FyZHModWludDY0KXZvaWQKKmFiaV9yb3V0ZV91cGRhdGVJbmplY3RlZHhVU0RSZXdhcmRzOgoJLy8gaW5qZWN0ZWR4VVNEUmV3YXJkczogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSB1cGRhdGVJbmplY3RlZHhVU0RSZXdhcmRzKHVpbnQ2NCl2b2lkCgljYWxsc3ViIHVwZGF0ZUluamVjdGVkeFVTRFJld2FyZHMKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHVwZGF0ZUluamVjdGVkeFVTRFJld2FyZHMoaW5qZWN0ZWR4VVNEUmV3YXJkczogdWludDY0KTogdm9pZAp1cGRhdGVJbmplY3RlZHhVU0RSZXdhcmRzOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE4MwoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsICdPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgaW5qZWN0ZWQgcmV3YXJkcycpCgl0eG4gU2VuZGVyCglieXRlYyAzIC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBpbmplY3RvciBjYW4gdXBkYXRlIGluamVjdGVkIHJld2FyZHMKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxODQKCS8vIHRoaXMuaW5qZWN0ZWR4VVNEUmV3YXJkcy52YWx1ZSA9IGluamVjdGVkeFVTRFJld2FyZHMKCWJ5dGVjIDkgLy8gICJpbmplY3RlZHhVU0RSZXdhcmRzIgoJZnJhbWVfZGlnIC0xIC8vIGluamVjdGVkeFVTRFJld2FyZHM6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gdXBkYXRlVHJlYXN1cnlBZGRyZXNzKGFkZHJlc3Mpdm9pZAoqYWJpX3JvdXRlX3VwZGF0ZVRyZWFzdXJ5QWRkcmVzczoKCS8vIHRyZWFzdXJ5QWRkcmVzczogYWRkcmVzcwoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludGMgNiAvLyAzMgoJPT0KCgkvLyBhcmd1bWVudCAwICh0cmVhc3VyeUFkZHJlc3MpIGZvciB1cGRhdGVUcmVhc3VyeUFkZHJlc3MgbXVzdCBiZSBhIGFkZHJlc3MKCWFzc2VydAoKCS8vIGV4ZWN1dGUgdXBkYXRlVHJlYXN1cnlBZGRyZXNzKGFkZHJlc3Mpdm9pZAoJY2FsbHN1YiB1cGRhdGVUcmVhc3VyeUFkZHJlc3MKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHVwZGF0ZVRyZWFzdXJ5QWRkcmVzcyh0cmVhc3VyeUFkZHJlc3M6IEFkZHJlc3MpOiB2b2lkCnVwZGF0ZVRyZWFzdXJ5QWRkcmVzczoKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxODgKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlLCAnT25seSBpbmplY3RvciBjYW4gdXBkYXRlIHRyZWFzdXJ5IGFkZHJlc3MnKQoJdHhuIFNlbmRlcgoJYnl0ZWMgMyAvLyAgImluamVjdG9yQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIE9ubHkgaW5qZWN0b3IgY2FuIHVwZGF0ZSB0cmVhc3VyeSBhZGRyZXNzCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTg5CgkvLyB0aGlzLnRyZWFzdXJ5QWRkcmVzcy52YWx1ZSA9IHRyZWFzdXJ5QWRkcmVzcwoJYnl0ZWMgMjIgLy8gICJ0cmVhc3VyeUFkZHJlc3MiCglmcmFtZV9kaWcgLTEgLy8gdHJlYXN1cnlBZGRyZXNzOiBBZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyB1cGRhdGV4VVNERmVlKHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfdXBkYXRleFVTREZlZToKCS8vIHhVU0RGZWU6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgdXBkYXRleFVTREZlZSh1aW50NjQpdm9pZAoJY2FsbHN1YiB1cGRhdGV4VVNERmVlCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyB1cGRhdGV4VVNERmVlKHhVU0RGZWU6IHVpbnQ2NCk6IHZvaWQKdXBkYXRleFVTREZlZToKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxOTMKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlLCAnT25seSBpbmplY3RvciBjYW4gdXBkYXRlIHhVU0QgZmVlJykKCXR4biBTZW5kZXIKCWJ5dGVjIDMgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgeFVTRCBmZWUKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoxOTQKCS8vIHRoaXMueFVTREZlZS52YWx1ZSA9IHhVU0RGZWUKCWJ5dGVjIDE3IC8vICAieFVTREZlZSIKCWZyYW1lX2RpZyAtMSAvLyB4VVNERmVlOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIHVwZGF0ZUluamVjdG9yQWRkcmVzcyhhZGRyZXNzKXZvaWQKKmFiaV9yb3V0ZV91cGRhdGVJbmplY3RvckFkZHJlc3M6CgkvLyBpbmplY3RvckFkZHJlc3M6IGFkZHJlc3MKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnRjIDYgLy8gMzIKCT09CgoJLy8gYXJndW1lbnQgMCAoaW5qZWN0b3JBZGRyZXNzKSBmb3IgdXBkYXRlSW5qZWN0b3JBZGRyZXNzIG11c3QgYmUgYSBhZGRyZXNzCglhc3NlcnQKCgkvLyBleGVjdXRlIHVwZGF0ZUluamVjdG9yQWRkcmVzcyhhZGRyZXNzKXZvaWQKCWNhbGxzdWIgdXBkYXRlSW5qZWN0b3JBZGRyZXNzCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyB1cGRhdGVJbmplY3RvckFkZHJlc3MoaW5qZWN0b3JBZGRyZXNzOiBBZGRyZXNzKTogdm9pZAp1cGRhdGVJbmplY3RvckFkZHJlc3M6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MTk4CgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09PSB0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZSwgJ09ubHkgaW5qZWN0b3IgY2FuIHVwZGF0ZSBpbmplY3RvciBhZGRyZXNzJykKCXR4biBTZW5kZXIKCWJ5dGVjIDMgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgaW5qZWN0b3IgYWRkcmVzcwoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjE5OQoJLy8gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUgPSBpbmplY3RvckFkZHJlc3MKCWJ5dGVjIDMgLy8gICJpbmplY3RvckFkZHJlc3MiCglmcmFtZV9kaWcgLTEgLy8gaW5qZWN0b3JBZGRyZXNzOiBBZGRyZXNzCglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyB1cGRhdGVOdW1TdGFrZXJzKHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfdXBkYXRlTnVtU3Rha2VyczoKCS8vIG51bVN0YWtlcnM6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIGV4ZWN1dGUgdXBkYXRlTnVtU3Rha2Vycyh1aW50NjQpdm9pZAoJY2FsbHN1YiB1cGRhdGVOdW1TdGFrZXJzCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyB1cGRhdGVOdW1TdGFrZXJzKG51bVN0YWtlcnM6IHVpbnQ2NCk6IHZvaWQKdXBkYXRlTnVtU3Rha2VyczoKCXByb3RvIDEgMAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyMDMKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlLCAnT25seSBpbmplY3RvciBjYW4gdXBkYXRlIG51bSBzdGFrZXJzJykKCXR4biBTZW5kZXIKCWJ5dGVjIDMgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgbnVtIHN0YWtlcnMKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyMDQKCS8vIHRoaXMubnVtU3Rha2Vycy52YWx1ZSA9IG51bVN0YWtlcnMKCWJ5dGVjIDQgLy8gICJudW1TdGFrZXJzIgoJZnJhbWVfZGlnIC0xIC8vIG51bVN0YWtlcnM6IHVpbnQ2NAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gdXBkYXRlRnJlZXplKGJvb2wpdm9pZAoqYWJpX3JvdXRlX3VwZGF0ZUZyZWV6ZToKCS8vIGZyZWV6ZTogYm9vbAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludGMgMSAvLyAxCgk9PQoKCS8vIGFyZ3VtZW50IDAgKGZyZWV6ZSkgZm9yIHVwZGF0ZUZyZWV6ZSBtdXN0IGJlIGEgYm9vbAoJYXNzZXJ0CglpbnRjIDAgLy8gMAoJZ2V0Yml0CgoJLy8gZXhlY3V0ZSB1cGRhdGVGcmVlemUoYm9vbCl2b2lkCgljYWxsc3ViIHVwZGF0ZUZyZWV6ZQoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gdXBkYXRlRnJlZXplKGZyZWV6ZTogYm9vbGVhbik6IHZvaWQKdXBkYXRlRnJlZXplOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjIwOAoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsICdPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgZnJlZXplJykKCXR4biBTZW5kZXIKCWJ5dGVjIDMgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgZnJlZXplCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjA5CgkvLyB0aGlzLmZyZWV6ZS52YWx1ZSA9IGZyZWV6ZQoJYnl0ZWMgMjEgLy8gICJmcmVlemUiCglmcmFtZV9kaWcgLTEgLy8gZnJlZXplOiBib29sZWFuCglieXRlYyAxMiAvLyAweDAwCglpbnRjIDAgLy8gMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIHVwZGF0ZVBvb2xFbmRpbmcoYm9vbCl2b2lkCiphYmlfcm91dGVfdXBkYXRlUG9vbEVuZGluZzoKCS8vIHBvb2xFbmRpbmc6IGJvb2wKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnRjIDEgLy8gMQoJPT0KCgkvLyBhcmd1bWVudCAwIChwb29sRW5kaW5nKSBmb3IgdXBkYXRlUG9vbEVuZGluZyBtdXN0IGJlIGEgYm9vbAoJYXNzZXJ0CglpbnRjIDAgLy8gMAoJZ2V0Yml0CgoJLy8gZXhlY3V0ZSB1cGRhdGVQb29sRW5kaW5nKGJvb2wpdm9pZAoJY2FsbHN1YiB1cGRhdGVQb29sRW5kaW5nCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyB1cGRhdGVQb29sRW5kaW5nKHBvb2xFbmRpbmc6IGJvb2xlYW4pOiB2b2lkCnVwZGF0ZVBvb2xFbmRpbmc6Cglwcm90byAxIDAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjEzCgkvLyBhc3NlcnQodGhpcy50eG4uc2VuZGVyID09PSB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZSwgJ09ubHkgYWRtaW5zIGNhbiB1cGRhdGUgcG9vbCBlbmRpbmcnKQoJdHhuIFNlbmRlcgoJYnl0ZWMgOCAvLyAgImFkbWluQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIE9ubHkgYWRtaW5zIGNhbiB1cGRhdGUgcG9vbCBlbmRpbmcKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyMTQKCS8vIHRoaXMucG9vbEVuZGluZy52YWx1ZSA9IHBvb2xFbmRpbmcKCWJ5dGVjIDIwIC8vICAicG9vbEVuZGluZyIKCWZyYW1lX2RpZyAtMSAvLyBwb29sRW5kaW5nOiBib29sZWFuCglieXRlYyAxMiAvLyAweDAwCglpbnRjIDAgLy8gMAoJdW5jb3ZlciAyCglzZXRiaXQKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIHNldEZlZVdhaXZlZCgpdm9pZAoqYWJpX3JvdXRlX3NldEZlZVdhaXZlZDoKCS8vIGV4ZWN1dGUgc2V0RmVlV2FpdmVkKCl2b2lkCgljYWxsc3ViIHNldEZlZVdhaXZlZAoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gc2V0RmVlV2FpdmVkKCk6IHZvaWQKc2V0RmVlV2FpdmVkOgoJcHJvdG8gMCAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjIxOAoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsICdPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgZmVlIHdhaXZlJykKCXR4biBTZW5kZXIKCWJ5dGVjIDMgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGluamVjdG9yIGNhbiB1cGRhdGUgZmVlIHdhaXZlCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjE5CgkvLyB0aGlzLmZlZVdhaXZlZC52YWx1ZSA9IHRydWUKCWJ5dGVjIDI0IC8vICAiZmVlV2FpdmVkIgoJaW50YyAxIC8vIDEKCWJ5dGVjIDEyIC8vIDB4MDAKCWludGMgMCAvLyAwCgl1bmNvdmVyIDIKCXNldGJpdAoJYXBwX2dsb2JhbF9wdXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjIwCgkvLyB0aGlzLnhVU0RGZWUudmFsdWUgPSAwCglieXRlYyAxNyAvLyAgInhVU0RGZWUiCglpbnRjIDAgLy8gMAoJYXBwX2dsb2JhbF9wdXQKCXJldHN1YgoKLy8gY29zdEZvckJveFN0b3JhZ2UodG90YWxOdW1CeXRlczogdWludDY0KTogdWludDY0CmNvc3RGb3JCb3hTdG9yYWdlOgoJcHJvdG8gMSAxCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjIyNwoJLy8gcmV0dXJuIFNDQk9YX1BFUkJPWCArIHRvdGFsTnVtQnl0ZXMgKiBTQ0JPWF9QRVJCWVRFOwoJcHVzaGludCAyNTAwCglmcmFtZV9kaWcgLTEgLy8gdG90YWxOdW1CeXRlczogdWludDY0CglwdXNoaW50IDQwMAoJKgoJKwoJcmV0c3ViCgovLyBnZXRNQlJGb3JQb29sQ3JlYXRpb24oKSh1aW50NjQpCiphYmlfcm91dGVfZ2V0TUJSRm9yUG9vbENyZWF0aW9uOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglwdXNoYnl0ZXMgMHgxNTFmN2M3NQoKCS8vIGV4ZWN1dGUgZ2V0TUJSRm9yUG9vbENyZWF0aW9uKCkodWludDY0KQoJY2FsbHN1YiBnZXRNQlJGb3JQb29sQ3JlYXRpb24KCWNvbmNhdAoJbG9nCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBnZXRNQlJGb3JQb29sQ3JlYXRpb24oKTogbWJyUmV0dXJuCmdldE1CUkZvclBvb2xDcmVhdGlvbjoKCXByb3RvIDAgMQoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAxIC8vIDB4CglkdXAKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjMxCgkvLyBub25BbGdvUmV3YXJkTUJSID0gQVNTRVRfSE9MRElOR19GRUUKCWludGMgOCAvLyAxMDAwMDAKCWZyYW1lX2J1cnkgMCAvLyBub25BbGdvUmV3YXJkTUJSOiB1aW50NjQKCgkvLyAqaWYzX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjIzMgoJLy8gdGhpcy5yZXdhcmRBc3NldElkLnZhbHVlICE9PSAwCglieXRlYyA2IC8vICAicmV3YXJkQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJIT0KCWJ6ICppZjNfZW5kCgoJLy8gKmlmM19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjMzCgkvLyBub25BbGdvUmV3YXJkTUJSICs9IEFTU0VUX0hPTERJTkdfRkVFCglmcmFtZV9kaWcgMCAvLyBub25BbGdvUmV3YXJkTUJSOiB1aW50NjQKCWludGMgOCAvLyAxMDAwMDAKCSsKCWZyYW1lX2J1cnkgMCAvLyBub25BbGdvUmV3YXJkTUJSOiB1aW50NjQKCippZjNfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjIzNQoJLy8gbWJyID0KCS8vICAgICAgIEFMR09SQU5EX0FDQ09VTlRfTUlOX0JBTEFOQ0UgKwoJLy8gICAgICAgbm9uQWxnb1Jld2FyZE1CUiArCgkvLyAgICAgICB0aGlzLmNvc3RGb3JCb3hTdG9yYWdlKDcgKyBsZW48U3Rha2VJbmZvPigpICogTUFYX1NUQUtFUlNfUEVSX1BPT0wpICsKCS8vICAgICAgIHRoaXMuY29zdEZvckJveFN0b3JhZ2UoNyArIGxlbjx1aW50NjQ+KCkgKiAxNSkKCWludGMgOCAvLyAxMDAwMDAKCWZyYW1lX2RpZyAwIC8vIG5vbkFsZ29SZXdhcmRNQlI6IHVpbnQ2NAoJKwoJaW50YyAxMCAvLyAyODAwNwoJY2FsbHN1YiBjb3N0Rm9yQm94U3RvcmFnZQoJKwoJaW50YyAxMSAvLyAxMjcKCWNhbGxzdWIgY29zdEZvckJveFN0b3JhZ2UKCSsKCWZyYW1lX2J1cnkgMSAvLyBtYnI6IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNDEKCS8vIHJldHVybiB7CgkvLyAgICAgICBtYnJQYXltZW50OiBtYnIsCgkvLyAgICAgfTsKCWZyYW1lX2RpZyAxIC8vIG1icjogdWludDY0CglpdG9iCgoJLy8gc2V0IHRoZSBzdWJyb3V0aW5lIHJldHVybiB2YWx1ZQoJZnJhbWVfYnVyeSAwCgoJLy8gcG9wIGFsbCBsb2NhbCB2YXJpYWJsZXMgZnJvbSB0aGUgc3RhY2sKCXBvcG4gMQoJcmV0c3ViCgovLyBpbml0U3RvcmFnZShwYXkpdm9pZAoqYWJpX3JvdXRlX2luaXRTdG9yYWdlOgoJLy8gbWJyUGF5bWVudDogcGF5Cgl0eG4gR3JvdXBJbmRleAoJaW50YyAxIC8vIDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgMSAvLyAgcGF5Cgk9PQoKCS8vIGFyZ3VtZW50IDAgKG1iclBheW1lbnQpIGZvciBpbml0U3RvcmFnZSBtdXN0IGJlIGEgcGF5IHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyBleGVjdXRlIGluaXRTdG9yYWdlKHBheSl2b2lkCgljYWxsc3ViIGluaXRTdG9yYWdlCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBpbml0U3RvcmFnZShtYnJQYXltZW50OiBQYXlUeG4pOiB2b2lkCmluaXRTdG9yYWdlOgoJcHJvdG8gMSAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDEgLy8gMHgKCWR1cAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNDcKCS8vIGFzc2VydCghdGhpcy5zdGFrZXJzLmV4aXN0cywgJ3N0YWtpbmcgcG9vbCBhbHJlYWR5IGluaXRpYWxpemVkJykKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJYm94X2xlbgoJc3dhcAoJcG9wCgkhCgoJLy8gc3Rha2luZyBwb29sIGFscmVhZHkgaW5pdGlhbGl6ZWQKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNDgKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuYWRtaW5BZGRyZXNzLnZhbHVlLCAnT25seSBhZG1pbiBjYW4gaW5pdCBzdG9yYWdlJykKCXR4biBTZW5kZXIKCWJ5dGVjIDggLy8gICJhZG1pbkFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGFkbWluIGNhbiBpbml0IHN0b3JhZ2UKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNTAKCS8vIG5vbkFsZ29SZXdhcmRNQlIgPSBBU1NFVF9IT0xESU5HX0ZFRQoJaW50YyA4IC8vIDEwMDAwMAoJZnJhbWVfYnVyeSAwIC8vIG5vbkFsZ29SZXdhcmRNQlI6IHVpbnQ2NAoKCS8vICppZjRfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjUxCgkvLyB0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUgIT09IDAKCWJ5dGVjIDYgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAwCgkhPQoJYnogKmlmNF9lbmQKCgkvLyAqaWY0X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNTIKCS8vIG5vbkFsZ29SZXdhcmRNQlIgKz0gQVNTRVRfSE9MRElOR19GRUUKCWZyYW1lX2RpZyAwIC8vIG5vbkFsZ29SZXdhcmRNQlI6IHVpbnQ2NAoJaW50YyA4IC8vIDEwMDAwMAoJKwoJZnJhbWVfYnVyeSAwIC8vIG5vbkFsZ29SZXdhcmRNQlI6IHVpbnQ2NAoKKmlmNF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjU0CgkvLyBwb29sTUJSID0KCS8vICAgICAgIEFMR09SQU5EX0FDQ09VTlRfTUlOX0JBTEFOQ0UgKwoJLy8gICAgICAgbm9uQWxnb1Jld2FyZE1CUiArCgkvLyAgICAgICB0aGlzLmNvc3RGb3JCb3hTdG9yYWdlKDcgKyBsZW48U3Rha2VJbmZvPigpICogTUFYX1NUQUtFUlNfUEVSX1BPT0wpICsKCS8vICAgICAgIHRoaXMuY29zdEZvckJveFN0b3JhZ2UoNyArIGxlbjx1aW50NjQ+KCkgKiAxNSkKCWludGMgOCAvLyAxMDAwMDAKCWZyYW1lX2RpZyAwIC8vIG5vbkFsZ29SZXdhcmRNQlI6IHVpbnQ2NAoJKwoJaW50YyAxMCAvLyAyODAwNwoJY2FsbHN1YiBjb3N0Rm9yQm94U3RvcmFnZQoJKwoJaW50YyAxMSAvLyAxMjcKCWNhbGxzdWIgY29zdEZvckJveFN0b3JhZ2UKCSsKCWZyYW1lX2J1cnkgMSAvLyBwb29sTUJSOiB1aW50NjQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjYxCgkvLyB2ZXJpZnlQYXlUeG4obWJyUGF5bWVudCwgeyByZWNlaXZlcjogdGhpcy5hcHAuYWRkcmVzcywgYW1vdW50OiBwb29sTUJSIH0pCgkvLyB2ZXJpZnkgcmVjZWl2ZXIKCWZyYW1lX2RpZyAtMSAvLyBtYnJQYXltZW50OiBQYXlUeG4KCWd0eG5zIFJlY2VpdmVyCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6Im1iclBheW1lbnQiLCJmaWVsZCI6InJlY2VpdmVyIiwiZXhwZWN0ZWQiOiJ0aGlzLmFwcC5hZGRyZXNzIn0KCWFzc2VydAoKCS8vIHZlcmlmeSBhbW91bnQKCWZyYW1lX2RpZyAtMSAvLyBtYnJQYXltZW50OiBQYXlUeG4KCWd0eG5zIEFtb3VudAoJZnJhbWVfZGlnIDEgLy8gcG9vbE1CUjogdWludDY0Cgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoibWJyUGF5bWVudCIsImZpZWxkIjoiYW1vdW50IiwiZXhwZWN0ZWQiOiJwb29sTUJSIn0KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNjIKCS8vIHRoaXMuc3Rha2Vycy5jcmVhdGUoKQoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCglwdXNoaW50IDI4MDAwCglib3hfY3JlYXRlCglwb3AKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjYzCgkvLyB0aGlzLm1pbmltdW1CYWxhbmNlLnZhbHVlID0gcG9vbE1CUgoJcHVzaGJ5dGVzIDB4NmQ2OTZlNjk2ZDc1NmQ0MjYxNmM2MTZlNjM2NSAvLyAibWluaW11bUJhbGFuY2UiCglmcmFtZV9kaWcgMSAvLyBwb29sTUJSOiB1aW50NjQKCWFwcF9nbG9iYWxfcHV0CgoJLy8gKmlmNV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNjUKCS8vIHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSAhPT0gMAoJYnl0ZWMgNiAvLyAgInJld2FyZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAwIC8vIDAKCSE9CglieiAqaWY1X2VuZAoKCS8vICppZjVfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI2NwoJLy8gc2VuZEFzc2V0VHJhbnNmZXIoewoJLy8gICAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUpLAoJLy8gICAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgICBhc3NldEFtb3VudDogMCwKCS8vICAgICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDcgLy8gIGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI2OAoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5yZXdhcmRBc3NldElkLnZhbHVlKQoJYnl0ZWMgNiAvLyAgInJld2FyZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjY5CgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI3MAoJLy8gYXNzZXRBbW91bnQ6IDAKCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKKmlmNV9lbmQ6CglyZXRzdWIKCi8vIGluamVjdFJld2FyZHMoYXhmZXIsdWludDY0LHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfaW5qZWN0UmV3YXJkczoKCS8vIHJld2FyZEFzc2V0SWQ6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgoJYnRvaQoKCS8vIHF1YW50aXR5OiB1aW50NjQKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWJ0b2kKCgkvLyByZXdhcmRUeG46IGF4ZmVyCgl0eG4gR3JvdXBJbmRleAoJaW50YyAxIC8vIDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgNyAvLyAgYXhmZXIKCT09CgoJLy8gYXJndW1lbnQgMiAocmV3YXJkVHhuKSBmb3IgaW5qZWN0UmV3YXJkcyBtdXN0IGJlIGEgYXhmZXIgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGV4ZWN1dGUgaW5qZWN0UmV3YXJkcyhheGZlcix1aW50NjQsdWludDY0KXZvaWQKCWNhbGxzdWIgaW5qZWN0UmV3YXJkcwoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gaW5qZWN0UmV3YXJkcyhyZXdhcmRUeG46IEFzc2V0VHJhbnNmZXJUeG4sIHF1YW50aXR5OiB1aW50NjQsIHJld2FyZEFzc2V0SWQ6IHVpbnQ2NCk6IHZvaWQKaW5qZWN0UmV3YXJkczoKCXByb3RvIDMgMAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyNzkKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlLCAnT25seSBpbmplY3RvciBjYW4gaW5qZWN0IHJld2FyZHMnKQoJdHhuIFNlbmRlcgoJYnl0ZWMgMyAvLyAgImluamVjdG9yQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIE9ubHkgaW5qZWN0b3IgY2FuIGluamVjdCByZXdhcmRzCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MjgxCgkvLyB2ZXJpZnlBc3NldFRyYW5zZmVyVHhuKHJld2FyZFR4biwgewoJLy8gICAgICAgc2VuZGVyOiB0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZSwKCS8vICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NChyZXdhcmRBc3NldElkKSwKCS8vICAgICAgIGFzc2V0QW1vdW50OiB0aGlzLnJld2FyZFBlckluamVjdGlvbi52YWx1ZSA+IDAgPyB0aGlzLnJld2FyZFBlckluamVjdGlvbi52YWx1ZSA6IHF1YW50aXR5LAoJLy8gICAgIH0pCgkvLyB2ZXJpZnkgc2VuZGVyCglmcmFtZV9kaWcgLTEgLy8gcmV3YXJkVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBTZW5kZXIKCWJ5dGVjIDMgLy8gICJpbmplY3RvckFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InJld2FyZFR4biIsImZpZWxkIjoic2VuZGVyIiwiZXhwZWN0ZWQiOiJ0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZSJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgYXNzZXRSZWNlaXZlcgoJZnJhbWVfZGlnIC0xIC8vIHJld2FyZFR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgQXNzZXRSZWNlaXZlcgoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJyZXdhcmRUeG4iLCJmaWVsZCI6ImFzc2V0UmVjZWl2ZXIiLCJleHBlY3RlZCI6InRoaXMuYXBwLmFkZHJlc3MifQoJYXNzZXJ0CgoJLy8gdmVyaWZ5IHhmZXJBc3NldAoJZnJhbWVfZGlnIC0xIC8vIHJld2FyZFR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgWGZlckFzc2V0CglmcmFtZV9kaWcgLTMgLy8gcmV3YXJkQXNzZXRJZDogdWludDY0Cgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoicmV3YXJkVHhuIiwiZmllbGQiOiJ4ZmVyQXNzZXQiLCJleHBlY3RlZCI6IkFzc2V0SUQuZnJvbVVpbnQ2NChyZXdhcmRBc3NldElkKSJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgYXNzZXRBbW91bnQKCWZyYW1lX2RpZyAtMSAvLyByZXdhcmRUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIEFzc2V0QW1vdW50CglieXRlYyAxNCAvLyAgInJld2FyZFBlckluamVjdGlvbiIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJPgoJYnogKnRlcm5hcnkwX2ZhbHNlCglieXRlYyAxNCAvLyAgInJld2FyZFBlckluamVjdGlvbiIKCWFwcF9nbG9iYWxfZ2V0CgliICp0ZXJuYXJ5MF9lbmQKCip0ZXJuYXJ5MF9mYWxzZToKCWZyYW1lX2RpZyAtMiAvLyBxdWFudGl0eTogdWludDY0CgoqdGVybmFyeTBfZW5kOgoJPT0KCgkvLyB0cmFuc2FjdGlvbiB2ZXJpZmljYXRpb24gZmFpbGVkOiB7InR4biI6InJld2FyZFR4biIsImZpZWxkIjoiYXNzZXRBbW91bnQiLCJleHBlY3RlZCI6InRoaXMucmV3YXJkUGVySW5qZWN0aW9uLnZhbHVlID4gMCA/IHRoaXMucmV3YXJkUGVySW5qZWN0aW9uLnZhbHVlIDogcXVhbnRpdHkifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI4NwoJLy8gdGhpcy5pbmplY3RlZEFTQVJld2FyZHMudmFsdWUgPSB0aGlzLmluamVjdGVkQVNBUmV3YXJkcy52YWx1ZSArIHF1YW50aXR5CglieXRlYyAxMCAvLyAgImluamVjdGVkQVNBUmV3YXJkcyIKCWR1cAoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAtMiAvLyBxdWFudGl0eTogdWludDY0CgkrCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyODgKCS8vIHRoaXMubGFzdEluamVjdGlvblRpbWUudmFsdWUgPSBnbG9iYWxzLmxhdGVzdFRpbWVzdGFtcAoJYnl0ZWMgMjUgLy8gICJsYXN0SW5qZWN0aW9uVGltZSIKCWdsb2JhbCBMYXRlc3RUaW1lc3RhbXAKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIHBpY2t1cFJld2FyZHMoKXZvaWQKKmFiaV9yb3V0ZV9waWNrdXBSZXdhcmRzOgoJLy8gZXhlY3V0ZSBwaWNrdXBSZXdhcmRzKCl2b2lkCgljYWxsc3ViIHBpY2t1cFJld2FyZHMKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHBpY2t1cFJld2FyZHMoKTogdm9pZApwaWNrdXBSZXdhcmRzOgoJcHJvdG8gMCAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDEgLy8gMHgKCWR1cG4gMgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyOTIKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuaW5qZWN0b3JBZGRyZXNzLnZhbHVlLCAnT25seSBpbmplY3RvciBjYW4gcGlja3VwIHJld2FyZHMnKQoJdHhuIFNlbmRlcgoJYnl0ZWMgMyAvLyAgImluamVjdG9yQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIE9ubHkgaW5qZWN0b3IgY2FuIHBpY2t1cCByZXdhcmRzCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mjk0CgkvLyBhcHBBc3NldEJhbGFuY2UgPSB0aGlzLmFwcC5hZGRyZXNzLmFzc2V0QmFsYW5jZSh0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUpCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJYnl0ZWMgNiAvLyAgInJld2FyZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJYXNzZXRfaG9sZGluZ19nZXQgQXNzZXRCYWxhbmNlCglwb3AKCWZyYW1lX2J1cnkgMCAvLyBhcHBBc3NldEJhbGFuY2U6IHVpbnQ2NAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czoyOTUKCS8vIHN0YWtlVG9rZW5BbW91bnQgPSAwCglpbnRjIDAgLy8gMAoJZnJhbWVfYnVyeSAxIC8vIHN0YWtlVG9rZW5BbW91bnQ6IHVpbnQ2NAoKCS8vICppZjZfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mjk2CgkvLyB0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUgPT09IHRoaXMuc3Rha2VkQXNzZXRJZC52YWx1ZQoJYnl0ZWMgNiAvLyAgInJld2FyZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJYnl0ZWMgMTUgLy8gICJzdGFrZWRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCT09CglieiAqaWY2X2VuZAoKCS8vICppZjZfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjI5NwoJLy8gc3Rha2VUb2tlbkFtb3VudCA9IHRoaXMudG90YWxTdGFrZWQudmFsdWUKCWJ5dGVjIDUgLy8gICJ0b3RhbFN0YWtlZCIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9idXJ5IDEgLy8gc3Rha2VUb2tlbkFtb3VudDogdWludDY0CgoqaWY2X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMDAKCS8vIGFtb3VudCA9IGFwcEFzc2V0QmFsYW5jZSAtIHRoaXMucGFpZEFTQVJld2FyZHMudmFsdWUgLSBzdGFrZVRva2VuQW1vdW50IC0gdGhpcy5pbmplY3RlZEFTQVJld2FyZHMudmFsdWUKCWZyYW1lX2RpZyAwIC8vIGFwcEFzc2V0QmFsYW5jZTogdWludDY0CglieXRlYyAxMyAvLyAgInBhaWRBU0FSZXdhcmRzIgoJYXBwX2dsb2JhbF9nZXQKCS0KCWZyYW1lX2RpZyAxIC8vIHN0YWtlVG9rZW5BbW91bnQ6IHVpbnQ2NAoJLQoJYnl0ZWMgMTAgLy8gICJpbmplY3RlZEFTQVJld2FyZHMiCglhcHBfZ2xvYmFsX2dldAoJLQoJZnJhbWVfYnVyeSAyIC8vIGFtb3VudDogdWludDY0CgoJLy8gKmlmN19jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMDIKCS8vIGFtb3VudCA+IHRoaXMubnVtU3Rha2Vycy52YWx1ZQoJZnJhbWVfZGlnIDIgLy8gYW1vdW50OiB1aW50NjQKCWJ5dGVjIDQgLy8gICJudW1TdGFrZXJzIgoJYXBwX2dsb2JhbF9nZXQKCT4KCWJ6ICppZjdfZW5kCgoJLy8gKmlmN19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzAzCgkvLyB0aGlzLmluamVjdGVkQVNBUmV3YXJkcy52YWx1ZSA9IHRoaXMuaW5qZWN0ZWRBU0FSZXdhcmRzLnZhbHVlICsgYW1vdW50CglieXRlYyAxMCAvLyAgImluamVjdGVkQVNBUmV3YXJkcyIKCWR1cAoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyAyIC8vIGFtb3VudDogdWludDY0CgkrCglhcHBfZ2xvYmFsX3B1dAoKKmlmN19lbmQ6CglyZXRzdWIKCi8vIGluamVjdHhVU0QoYXhmZXIsdWludDY0KXZvaWQKKmFiaV9yb3V0ZV9pbmplY3R4VVNEOgoJLy8gcXVhbnRpdHk6IHVpbnQ2NAoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJYnRvaQoKCS8vIHhVU0RUeG46IGF4ZmVyCgl0eG4gR3JvdXBJbmRleAoJaW50YyAxIC8vIDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgNyAvLyAgYXhmZXIKCT09CgoJLy8gYXJndW1lbnQgMSAoeFVTRFR4bikgZm9yIGluamVjdHhVU0QgbXVzdCBiZSBhIGF4ZmVyIHRyYW5zYWN0aW9uCglhc3NlcnQKCgkvLyBleGVjdXRlIGluamVjdHhVU0QoYXhmZXIsdWludDY0KXZvaWQKCWNhbGxzdWIgaW5qZWN0eFVTRAoJaW50YyAxIC8vIDEKCXJldHVybgoKLy8gaW5qZWN0eFVTRCh4VVNEVHhuOiBBc3NldFRyYW5zZmVyVHhuLCBxdWFudGl0eTogdWludDY0KTogdm9pZAppbmplY3R4VVNEOgoJcHJvdG8gMiAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMwOAoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsICdPbmx5IGluamVjdG9yIGNhbiBpbmplY3QgeFVTRCcpCgl0eG4gU2VuZGVyCglieXRlYyAzIC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBpbmplY3RvciBjYW4gaW5qZWN0IHhVU0QKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMDkKCS8vIHZlcmlmeUFzc2V0VHJhbnNmZXJUeG4oeFVTRFR4biwgewoJLy8gICAgICAgc2VuZGVyOiB0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZSwKCS8vICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnhVU0RBc3NldElkLnZhbHVlKSwKCS8vICAgICAgIGFzc2V0QW1vdW50OiBxdWFudGl0eSwKCS8vICAgICB9KQoJLy8gdmVyaWZ5IHNlbmRlcgoJZnJhbWVfZGlnIC0xIC8vIHhVU0RUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIFNlbmRlcgoJYnl0ZWMgMyAvLyAgImluamVjdG9yQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoieFVTRFR4biIsImZpZWxkIjoic2VuZGVyIiwiZXhwZWN0ZWQiOiJ0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZSJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgYXNzZXRSZWNlaXZlcgoJZnJhbWVfZGlnIC0xIC8vIHhVU0RUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIEFzc2V0UmVjZWl2ZXIKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoieFVTRFR4biIsImZpZWxkIjoiYXNzZXRSZWNlaXZlciIsImV4cGVjdGVkIjoidGhpcy5hcHAuYWRkcmVzcyJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgeGZlckFzc2V0CglmcmFtZV9kaWcgLTEgLy8geFVTRFR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgWGZlckFzc2V0CglieXRlYyAxMSAvLyAgInhVU0RBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJ4VVNEVHhuIiwiZmllbGQiOiJ4ZmVyQXNzZXQiLCJleHBlY3RlZCI6IkFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnhVU0RBc3NldElkLnZhbHVlKSJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgYXNzZXRBbW91bnQKCWZyYW1lX2RpZyAtMSAvLyB4VVNEVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBBc3NldEFtb3VudAoJZnJhbWVfZGlnIC0yIC8vIHF1YW50aXR5OiB1aW50NjQKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJ4VVNEVHhuIiwiZmllbGQiOiJhc3NldEFtb3VudCIsImV4cGVjdGVkIjoicXVhbnRpdHkifQoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMxNQoJLy8gdGhpcy5pbmplY3RlZHhVU0RSZXdhcmRzLnZhbHVlID0gdGhpcy5pbmplY3RlZHhVU0RSZXdhcmRzLnZhbHVlICsgcXVhbnRpdHkKCWJ5dGVjIDkgLy8gICJpbmplY3RlZHhVU0RSZXdhcmRzIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIC0yIC8vIHF1YW50aXR5OiB1aW50NjQKCSsKCWFwcF9nbG9iYWxfcHV0CglyZXRzdWIKCi8vIGRlbGV0ZUFwcGxpY2F0aW9uKCl2b2lkCiphYmlfcm91dGVfZGVsZXRlQXBwbGljYXRpb246CgkvLyBleGVjdXRlIGRlbGV0ZUFwcGxpY2F0aW9uKCl2b2lkCgljYWxsc3ViIGRlbGV0ZUFwcGxpY2F0aW9uCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBkZWxldGVBcHBsaWNhdGlvbigpOiB2b2lkCmRlbGV0ZUFwcGxpY2F0aW9uOgoJcHJvdG8gMCAwCgoJLy8gUHVzaCBlbXB0eSBieXRlcyBhZnRlciB0aGUgZnJhbWUgcG9pbnRlciB0byByZXNlcnZlIHNwYWNlIGZvciBsb2NhbCB2YXJpYWJsZXMKCWJ5dGVjIDEgLy8gMHgKCWR1cAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMTkKCS8vIGFzc2VydCh0aGlzLnR4bi5zZW5kZXIgPT09IHRoaXMuYWRtaW5BZGRyZXNzLnZhbHVlLCAnT25seSBhZG1pbiBjYW4gZGVsZXRlIGFwcGxpY2F0aW9uJykKCXR4biBTZW5kZXIKCWJ5dGVjIDggLy8gICJhZG1pbkFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJPT0KCgkvLyBPbmx5IGFkbWluIGNhbiBkZWxldGUgYXBwbGljYXRpb24KCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMjAKCS8vIGFzc2VydCh0aGlzLnRvdGFsU3Rha2VkLnZhbHVlID09PSAwLCAnU3Rha2VkIGFzc2V0cyBzdGlsbCBleGlzdCcpCglieXRlYyA1IC8vICAidG90YWxTdGFrZWQiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAwIC8vIDAKCT09CgoJLy8gU3Rha2VkIGFzc2V0cyBzdGlsbCBleGlzdAoJYXNzZXJ0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMyMgoJLy8gdGhpcy5zdGFrZXJzLmRlbGV0ZSgpCglieXRlYyAyIC8vICAic3Rha2VycyIKCWJveF9kZWwKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzIzCgkvLyByZXdhcmRCYWxhbmNlID0gdGhpcy5hcHAuYWRkcmVzcy5hc3NldEJhbGFuY2UodGhpcy5yZXdhcmRBc3NldElkLnZhbHVlKQoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWJ5dGVjIDYgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQoJcG9wCglmcmFtZV9idXJ5IDAgLy8gcmV3YXJkQmFsYW5jZTogdWludDY0CgoJLy8gKmlmOF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMjQKCS8vIHJld2FyZEJhbGFuY2UgPiAwCglmcmFtZV9kaWcgMCAvLyByZXdhcmRCYWxhbmNlOiB1aW50NjQKCWludGMgMCAvLyAwCgk+CglieiAqaWY4X2VuZAoKCS8vICppZjhfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMyNQoJLy8gc2VuZEFzc2V0VHJhbnNmZXIoewoJLy8gICAgICAgICB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUpLAoJLy8gICAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLmFkbWluQWRkcmVzcy52YWx1ZSwKCS8vICAgICAgICAgYXNzZXRBbW91bnQ6IHJld2FyZEJhbGFuY2UsCgkvLyAgICAgICAgIGFzc2V0Q2xvc2VUbzogdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUsCgkvLyAgICAgICB9KQoJaXR4bl9iZWdpbgoJaW50YyA3IC8vICBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMjYKCS8vIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDYgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMyNwoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUKCWJ5dGVjIDggLy8gICJhZG1pbkFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMyOAoJLy8gYXNzZXRBbW91bnQ6IHJld2FyZEJhbGFuY2UKCWZyYW1lX2RpZyAwIC8vIHJld2FyZEJhbGFuY2U6IHVpbnQ2NAoJaXR4bl9maWVsZCBBc3NldEFtb3VudAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMjkKCS8vIGFzc2V0Q2xvc2VUbzogdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUKCWJ5dGVjIDggLy8gICJhZG1pbkFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBBc3NldENsb3NlVG8KCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoqaWY4X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMzIKCS8vIHBheW1lbnRBbW91bnQgPSB0aGlzLmFwcC5hZGRyZXNzLmJhbGFuY2UgLSB0aGlzLmFwcC5hZGRyZXNzLm1pbkJhbGFuY2UKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglhY2N0X3BhcmFtc19nZXQgQWNjdEJhbGFuY2UKCXBvcAoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWFjY3RfcGFyYW1zX2dldCBBY2N0TWluQmFsYW5jZQoJcG9wCgktCglmcmFtZV9idXJ5IDEgLy8gcGF5bWVudEFtb3VudDogdWludDY0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMzNAoJLy8gc2VuZFBheW1lbnQoewoJLy8gICAgICAgYW1vdW50OiBwYXltZW50QW1vdW50LAoJLy8gICAgICAgcmVjZWl2ZXI6IHRoaXMuYWRtaW5BZGRyZXNzLnZhbHVlLAoJLy8gICAgICAgc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgZmVlOiAxXzAwMCwKCS8vICAgICB9KQoJaXR4bl9iZWdpbgoJaW50YyAxIC8vICBwYXkKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzM1CgkvLyBhbW91bnQ6IHBheW1lbnRBbW91bnQKCWZyYW1lX2RpZyAxIC8vIHBheW1lbnRBbW91bnQ6IHVpbnQ2NAoJaXR4bl9maWVsZCBBbW91bnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzM2CgkvLyByZWNlaXZlcjogdGhpcy5hZG1pbkFkZHJlc3MudmFsdWUKCWJ5dGVjIDggLy8gICJhZG1pbkFkZHJlc3MiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozMzcKCS8vIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgU2VuZGVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjMzOAoJLy8gZmVlOiAxXzAwMAoJcHVzaGludCAxXzAwMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CglyZXRzdWIKCi8vIHN0YWtlKGF4ZmVyLHVpbnQ2NCl2b2lkCiphYmlfcm91dGVfc3Rha2U6CgkvLyBxdWFudGl0eTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gc3Rha2VUeG46IGF4ZmVyCgl0eG4gR3JvdXBJbmRleAoJaW50YyAxIC8vIDEKCS0KCWR1cAoJZ3R4bnMgVHlwZUVudW0KCWludGMgNyAvLyAgYXhmZXIKCT09CgoJLy8gYXJndW1lbnQgMSAoc3Rha2VUeG4pIGZvciBzdGFrZSBtdXN0IGJlIGEgYXhmZXIgdHJhbnNhY3Rpb24KCWFzc2VydAoKCS8vIGV4ZWN1dGUgc3Rha2UoYXhmZXIsdWludDY0KXZvaWQKCWNhbGxzdWIgc3Rha2UKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHN0YWtlKHN0YWtlVHhuOiBBc3NldFRyYW5zZmVyVHhuLCBxdWFudGl0eTogdWludDY0KTogdm9pZApzdGFrZToKCXByb3RvIDIgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAxIC8vIDB4CglkdXBuIDIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzQzCgkvLyBhc3NlcnQocXVhbnRpdHkgPiAwLCAnSW52YWxpZCBxdWFudGl0eScpCglmcmFtZV9kaWcgLTIgLy8gcXVhbnRpdHk6IHVpbnQ2NAoJaW50YyAwIC8vIDAKCT4KCgkvLyBJbnZhbGlkIHF1YW50aXR5Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzQ0CgkvLyBhc3NlcnQodGhpcy5wb29sQWN0aXZlLnZhbHVlLCAnUG9vbCBub3QgYWN0aXZlJykKCWJ5dGVjIDE5IC8vICAicG9vbEFjdGl2ZSIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJZ2V0Yml0CgoJLy8gUG9vbCBub3QgYWN0aXZlCglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzQ1CgkvLyBhc3NlcnQoIXRoaXMucG9vbEVuZGluZy52YWx1ZSwgJ1Bvb2wgZW5kaW5nJykKCWJ5dGVjIDIwIC8vICAicG9vbEVuZGluZyIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJZ2V0Yml0CgkhCgoJLy8gUG9vbCBlbmRpbmcKCWFzc2VydAoKCS8vICppZjlfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzQ3CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmOV9lbmQKCgkvLyAqaWY5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNDgKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjlfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM1MAoJLy8gdmVyaWZ5QXNzZXRUcmFuc2ZlclR4bihzdGFrZVR4biwgewoJLy8gICAgICAgc2VuZGVyOiB0aGlzLnR4bi5zZW5kZXIsCgkvLyAgICAgICBhc3NldFJlY2VpdmVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5zdGFrZWRBc3NldElkLnZhbHVlKSwKCS8vICAgICAgIGFzc2V0QW1vdW50OiBxdWFudGl0eSwKCS8vICAgICB9KQoJLy8gdmVyaWZ5IHNlbmRlcgoJZnJhbWVfZGlnIC0xIC8vIHN0YWtlVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBTZW5kZXIKCXR4biBTZW5kZXIKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJzdGFrZVR4biIsImZpZWxkIjoic2VuZGVyIiwiZXhwZWN0ZWQiOiJ0aGlzLnR4bi5zZW5kZXIifQoJYXNzZXJ0CgoJLy8gdmVyaWZ5IGFzc2V0UmVjZWl2ZXIKCWZyYW1lX2RpZyAtMSAvLyBzdGFrZVR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgQXNzZXRSZWNlaXZlcgoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJzdGFrZVR4biIsImZpZWxkIjoiYXNzZXRSZWNlaXZlciIsImV4cGVjdGVkIjoidGhpcy5hcHAuYWRkcmVzcyJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgeGZlckFzc2V0CglmcmFtZV9kaWcgLTEgLy8gc3Rha2VUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIFhmZXJBc3NldAoJYnl0ZWMgMTUgLy8gICJzdGFrZWRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gdHJhbnNhY3Rpb24gdmVyaWZpY2F0aW9uIGZhaWxlZDogeyJ0eG4iOiJzdGFrZVR4biIsImZpZWxkIjoieGZlckFzc2V0IiwiZXhwZWN0ZWQiOiJBc3NldElELmZyb21VaW50NjQodGhpcy5zdGFrZWRBc3NldElkLnZhbHVlKSJ9Cglhc3NlcnQKCgkvLyB2ZXJpZnkgYXNzZXRBbW91bnQKCWZyYW1lX2RpZyAtMSAvLyBzdGFrZVR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgQXNzZXRBbW91bnQKCWZyYW1lX2RpZyAtMiAvLyBxdWFudGl0eTogdWludDY0Cgk9PQoKCS8vIHRyYW5zYWN0aW9uIHZlcmlmaWNhdGlvbiBmYWlsZWQ6IHsidHhuIjoic3Rha2VUeG4iLCJmaWVsZCI6ImFzc2V0QW1vdW50IiwiZXhwZWN0ZWQiOiJxdWFudGl0eSJ9Cglhc3NlcnQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzU2CgkvLyBhY3Rpb25Db21wbGV0ZTogYm9vbGVhbiA9IGZhbHNlCglpbnRjIDAgLy8gMAoJZnJhbWVfYnVyeSAwIC8vIGFjdGlvbkNvbXBsZXRlOiBib29sZWFuCgoJLy8gKmlmMTBfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzU3CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMTBfZW5kCgoJLy8gKmlmMTBfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM1OAoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMTBfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM2MAoJLy8gZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnN0YWtlcnMudmFsdWUubGVuZ3RoOyBpICs9IDEpCglpbnRjIDAgLy8gMAoJZnJhbWVfYnVyeSAxIC8vIGk6IHVpbnQ2NAoKKmZvcl8wOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM2MAoJLy8gaSA8IHRoaXMuc3Rha2Vycy52YWx1ZS5sZW5ndGgKCWZyYW1lX2RpZyAxIC8vIGk6IHVpbnQ2NAoJcHVzaGludCA1MDAKCTwKCWJ6ICpmb3JfMF9lbmQKCgkvLyAqaWYxMV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNjEKCS8vIGFjdGlvbkNvbXBsZXRlCglmcmFtZV9kaWcgMCAvLyBhY3Rpb25Db21wbGV0ZTogYm9vbGVhbgoJYnogKmlmMTFfZW5kCgoJLy8gKmlmMTFfY29uc2VxdWVudAoJYiAqZm9yXzBfZW5kCgoqaWYxMV9lbmQ6CgkvLyAqaWYxMl9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNjMKCS8vIHRoaXMuc3Rha2Vycy52YWx1ZVtpXS5hY2NvdW50ID09PSB0aGlzLnR4bi5zZW5kZXIKCWZyYW1lX2RpZyAxIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgMCAvLyAwCgkrCglpbnRjIDYgLy8gMzIKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCXR4biBTZW5kZXIKCT09CglieiAqaWYxMl9lbHNlaWYxX2NvbmRpdGlvbgoKCS8vICppZjEyX2NvbnNlcXVlbnQKCS8vICppZjEzX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM2NgoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjEzX2VuZAoKCS8vICppZjEzX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNjcKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjEzX2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozNzAKCS8vIHN0YWtlciA9IGNsb25lKHRoaXMuc3Rha2Vycy52YWx1ZVtpXSkKCWZyYW1lX2RpZyAxIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgNSAvLyA1NgoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfZXh0cmFjdAoJZnJhbWVfYnVyeSAyIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM3MQoJLy8gc3Rha2VyLnN0YWtlICs9IHN0YWtlVHhuLmFzc2V0QW1vdW50CglmcmFtZV9kaWcgMiAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJaW50YyA2IC8vICBoZWFkT2Zmc2V0CglmcmFtZV9kaWcgMiAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCAzMiA4CglidG9pCglmcmFtZV9kaWcgLTEgLy8gc3Rha2VUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIEFzc2V0QW1vdW50CgkrCglpdG9iCglyZXBsYWNlMwoJZnJhbWVfYnVyeSAyIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCgoJLy8gKmlmMTRfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzczCgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMTRfZW5kCgoJLy8gKmlmMTRfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM3NAoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMTRfZW5kOgoJLy8gKmlmMTVfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mzc2CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMTVfZW5kCgoJLy8gKmlmMTVfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM3NwoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMTVfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM3OQoJLy8gdGhpcy5zdGFrZXJzLnZhbHVlW2ldID0gc3Rha2VyCglmcmFtZV9kaWcgMSAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglmcmFtZV9kaWcgMiAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfcmVwbGFjZQoKCS8vICppZjE2X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM4MAoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjE2X2VuZAoKCS8vICppZjE2X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozODEKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjE2X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozODMKCS8vIHRoaXMudG90YWxTdGFrZWQudmFsdWUgKz0gc3Rha2VUeG4uYXNzZXRBbW91bnQKCWJ5dGVjIDUgLy8gICJ0b3RhbFN0YWtlZCIKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgLTEgLy8gc3Rha2VUeG46IEFzc2V0VHJhbnNmZXJUeG4KCWd0eG5zIEFzc2V0QW1vdW50CgkrCglieXRlYyA1IC8vICAidG90YWxTdGFrZWQiCglzd2FwCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozODQKCS8vIGFjdGlvbkNvbXBsZXRlID0gdHJ1ZQoJaW50YyAxIC8vIDEKCWZyYW1lX2J1cnkgMCAvLyBhY3Rpb25Db21wbGV0ZTogYm9vbGVhbgoJYiAqaWYxMl9lbmQKCippZjEyX2Vsc2VpZjFfY29uZGl0aW9uOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM4NQoJLy8gdGhpcy5zdGFrZXJzLnZhbHVlW2ldLmFjY291bnQgPT09IGdsb2JhbHMuemVyb0FkZHJlc3MKCWZyYW1lX2RpZyAxIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgMCAvLyAwCgkrCglpbnRjIDYgLy8gMzIKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWdsb2JhbCBaZXJvQWRkcmVzcwoJPT0KCWJ6ICppZjEyX2VuZAoKCS8vICppZjEyX2Vsc2VpZjFfY29uc2VxdWVudAoJLy8gKmlmMTdfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6Mzg2CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMTdfZW5kCgoJLy8gKmlmMTdfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM4NwoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMTdfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM4OQoJLy8gdGhpcy50b3RhbFN0YWtlZC52YWx1ZSA9IHRoaXMudG90YWxTdGFrZWQudmFsdWUgKyBzdGFrZVR4bi5hc3NldEFtb3VudAoJYnl0ZWMgNSAvLyAgInRvdGFsU3Rha2VkIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIC0xIC8vIHN0YWtlVHhuOiBBc3NldFRyYW5zZmVyVHhuCglndHhucyBBc3NldEFtb3VudAoJKwoJYXBwX2dsb2JhbF9wdXQKCgkvLyAqaWYxOF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czozOTAKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWYxOF9lbmQKCgkvLyAqaWYxOF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzkxCgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWYxOF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzkzCgkvLyB0aGlzLnN0YWtlcnMudmFsdWVbaV0gPSB7CgkvLyAgICAgICAgICAgYWNjb3VudDogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgICAgIHN0YWtlOiBzdGFrZVR4bi5hc3NldEFtb3VudCwKCS8vICAgICAgICAgICBhY2NydWVkQVNBUmV3YXJkczogMCwKCS8vICAgICAgICAgICBhY2NydWVkeFVTRFJld2FyZHM6IDAsCgkvLyAgICAgICAgIH0KCWZyYW1lX2RpZyAxIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCXR4biBTZW5kZXIKCWZyYW1lX2RpZyAtMSAvLyBzdGFrZVR4bjogQXNzZXRUcmFuc2ZlclR4bgoJZ3R4bnMgQXNzZXRBbW91bnQKCWl0b2IKCWNvbmNhdAoJYnl0ZWMgNyAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCWNvbmNhdAoJYnl0ZWMgNyAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCWNvbmNhdAoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfcmVwbGFjZQoKCS8vICppZjE5X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjM5OQoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjE5X2VuZAoKCS8vICppZjE5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MDAKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjE5X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MDIKCS8vIHRoaXMubnVtU3Rha2Vycy52YWx1ZSA9IHRoaXMubnVtU3Rha2Vycy52YWx1ZSArIDEKCWJ5dGVjIDQgLy8gICJudW1TdGFrZXJzIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJaW50YyAxIC8vIDEKCSsKCWFwcF9nbG9iYWxfcHV0CgoJLy8gKmlmMjBfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDAzCgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMjBfZW5kCgoJLy8gKmlmMjBfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQwNAoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMjBfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQwNgoJLy8gYWN0aW9uQ29tcGxldGUgPSB0cnVlCglpbnRjIDEgLy8gMQoJZnJhbWVfYnVyeSAwIC8vIGFjdGlvbkNvbXBsZXRlOiBib29sZWFuCgoqaWYxMl9lbmQ6CgkvLyAqaWYyMV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MDkKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWYyMV9lbmQKCgkvLyAqaWYyMV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDEwCgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWYyMV9lbmQ6CgoqZm9yXzBfY29udGludWU6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6MzYwCgkvLyBpICs9IDEKCWZyYW1lX2RpZyAxIC8vIGk6IHVpbnQ2NAoJaW50YyAxIC8vIDEKCSsKCWZyYW1lX2J1cnkgMSAvLyBpOiB1aW50NjQKCWIgKmZvcl8wCgoqZm9yXzBfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQxMwoJLy8gYXNzZXJ0KGFjdGlvbkNvbXBsZXRlLCAnU3Rha2UgIGZhaWxlZCcpCglmcmFtZV9kaWcgMCAvLyBhY3Rpb25Db21wbGV0ZTogYm9vbGVhbgoKCS8vIFN0YWtlICBmYWlsZWQKCWFzc2VydAoJcmV0c3ViCgovLyBhY2NydWVSZXdhcmRzKCl2b2lkCiphYmlfcm91dGVfYWNjcnVlUmV3YXJkczoKCS8vIGV4ZWN1dGUgYWNjcnVlUmV3YXJkcygpdm9pZAoJY2FsbHN1YiBhY2NydWVSZXdhcmRzCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBhY2NydWVSZXdhcmRzKCk6IHZvaWQKYWNjcnVlUmV3YXJkczoKCXByb3RvIDAgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAxIC8vIDB4CglkdXBuIDcKCgkvLyAqaWYyMl9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MTcKCS8vICF0aGlzLmZyZWV6ZS52YWx1ZSAmJiAhdGhpcy5wb29sRW5kaW5nLnZhbHVlICYmIHRoaXMucG9vbEFjdGl2ZS52YWx1ZQoJYnl0ZWMgMjEgLy8gICJmcmVlemUiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAwIC8vIDAKCWdldGJpdAoJIQoJZHVwCglieiAqc2tpcF9hbmQwCglieXRlYyAyMCAvLyAgInBvb2xFbmRpbmciCglhcHBfZ2xvYmFsX2dldAoJaW50YyAwIC8vIDAKCWdldGJpdAoJIQoJJiYKCipza2lwX2FuZDA6CglkdXAKCWJ6ICpza2lwX2FuZDEKCWJ5dGVjIDE5IC8vICAicG9vbEFjdGl2ZSIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDAgLy8gMAoJZ2V0Yml0CgkmJgoKKnNraXBfYW5kMToKCWJ6ICppZjIyX2VuZAoKCS8vICppZjIyX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MTgKCS8vIGFkZGl0aW9uYWxBU0FSZXdhcmRzID0gdGhpcy5pbmplY3RlZEFTQVJld2FyZHMudmFsdWUKCWJ5dGVjIDEwIC8vICAiaW5qZWN0ZWRBU0FSZXdhcmRzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2J1cnkgMCAvLyBhZGRpdGlvbmFsQVNBUmV3YXJkczogdWludDY0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQxOQoJLy8geFVTRFJld2FyZHMgPSB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUKCWJ5dGVjIDkgLy8gICJpbmplY3RlZHhVU0RSZXdhcmRzIgoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2J1cnkgMSAvLyB4VVNEUmV3YXJkczogdWludDY0CgoJLy8gKmlmMjNfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDIxCgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMjNfZW5kCgoJLy8gKmlmMjNfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQyMgoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMjNfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQyNQoJLy8gZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm51bVN0YWtlcnMudmFsdWU7IGkgKz0gMSkKCWludGMgMCAvLyAwCglmcmFtZV9idXJ5IDIgLy8gaTogdWludDY0CgoqZm9yXzE6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDI1CgkvLyBpIDwgdGhpcy5udW1TdGFrZXJzLnZhbHVlCglmcmFtZV9kaWcgMiAvLyBpOiB1aW50NjQKCWJ5dGVjIDQgLy8gICJudW1TdGFrZXJzIgoJYXBwX2dsb2JhbF9nZXQKCTwKCWJ6ICpmb3JfMV9lbmQKCgkvLyAqaWYyNF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MjYKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWYyNF9lbmQKCgkvLyAqaWYyNF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDI3CgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWYyNF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDI5CgkvLyBzdGFrZSA9IHRoaXMuc3Rha2Vycy52YWx1ZVtpXS5zdGFrZQoJZnJhbWVfZGlnIDIgLy8gaTogdWludDY0CglpbnRjIDUgLy8gNTYKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJaW50YyA2IC8vICBoZWFkT2Zmc2V0CgkrCglwdXNoaW50IDgKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWJ0b2kKCWZyYW1lX2J1cnkgMyAvLyBzdGFrZTogdWludDY0CgoJLy8gKmlmMjVfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDMxCgkvLyBzdGFrZSA+IDAKCWZyYW1lX2RpZyAzIC8vIHN0YWtlOiB1aW50NjQKCWludGMgMCAvLyAwCgk+CglieiAqaWYyNV9lbmQKCgkvLyAqaWYyNV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDMyCgkvLyBzdGFrZXIgPSBjbG9uZSh0aGlzLnN0YWtlcnMudmFsdWVbaV0pCglmcmFtZV9kaWcgMiAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglpbnRjIDUgLy8gNTYKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWZyYW1lX2J1cnkgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MzQKCS8vIHN0YWtlclNoYXJlID0gd2lkZVJhdGlvKFtzdGFrZSwgUFJFQ0lTSU9OXSwgW3RoaXMudG90YWxTdGFrZWQudmFsdWVdKQoJZnJhbWVfZGlnIDMgLy8gc3Rha2U6IHVpbnQ2NAoJaW50YyA5IC8vIDEwMDAwMDAwMDAwMDAwMDAKCW11bHcKCWludGMgMCAvLyAwCglieXRlYyA1IC8vICAidG90YWxTdGFrZWQiCglhcHBfZ2xvYmFsX2dldAoJZGl2bW9kdwoJcG9wCglwb3AKCXN3YXAKCSEKCgkvLyB3aWRlUmF0aW8gZmFpbGVkCglhc3NlcnQKCWZyYW1lX2J1cnkgNSAvLyBzdGFrZXJTaGFyZTogdWludDY0CgoJLy8gKmlmMjZfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDM2CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMjZfZW5kCgoJLy8gKmlmMjZfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQzNwoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMjZfZW5kOgoJLy8gKmlmMjdfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDQwCgkvLyBhZGRpdGlvbmFsQVNBUmV3YXJkcyA+IHRoaXMubnVtU3Rha2Vycy52YWx1ZQoJZnJhbWVfZGlnIDAgLy8gYWRkaXRpb25hbEFTQVJld2FyZHM6IHVpbnQ2NAoJYnl0ZWMgNCAvLyAgIm51bVN0YWtlcnMiCglhcHBfZ2xvYmFsX2dldAoJPgoJYnogKmlmMjdfZW5kCgoJLy8gKmlmMjdfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ0MQoJLy8gcmV3YXJkUmF0ZSA9IHdpZGVSYXRpbyhbYWRkaXRpb25hbEFTQVJld2FyZHMsIHN0YWtlclNoYXJlXSwgW1BSRUNJU0lPTl0pCglmcmFtZV9kaWcgMCAvLyBhZGRpdGlvbmFsQVNBUmV3YXJkczogdWludDY0CglmcmFtZV9kaWcgNSAvLyBzdGFrZXJTaGFyZTogdWludDY0CgltdWx3CglpbnRjIDAgLy8gMAoJaW50YyA5IC8vIDEwMDAwMDAwMDAwMDAwMDAKCWRpdm1vZHcKCXBvcAoJcG9wCglzd2FwCgkhCgoJLy8gd2lkZVJhdGlvIGZhaWxlZAoJYXNzZXJ0CglmcmFtZV9idXJ5IDYgLy8gcmV3YXJkUmF0ZTogdWludDY0CgoJLy8gKmlmMjhfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDQyCgkvLyByZXdhcmRSYXRlID09PSAwCglmcmFtZV9kaWcgNiAvLyByZXdhcmRSYXRlOiB1aW50NjQKCWludGMgMCAvLyAwCgk9PQoJYnogKmlmMjhfZW5kCgoJLy8gKmlmMjhfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ0MwoJLy8gcmV3YXJkUmF0ZSA9IDEKCWludGMgMSAvLyAxCglmcmFtZV9idXJ5IDYgLy8gcmV3YXJkUmF0ZTogdWludDY0CgoqaWYyOF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDQ2CgkvLyB0aGlzLmluamVjdGVkQVNBUmV3YXJkcy52YWx1ZSA9IHRoaXMuaW5qZWN0ZWRBU0FSZXdhcmRzLnZhbHVlIC0gcmV3YXJkUmF0ZQoJYnl0ZWMgMTAgLy8gICJpbmplY3RlZEFTQVJld2FyZHMiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgNiAvLyByZXdhcmRSYXRlOiB1aW50NjQKCS0KCWFwcF9nbG9iYWxfcHV0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ0NwoJLy8gdGhpcy5wYWlkQVNBUmV3YXJkcy52YWx1ZSA9IHRoaXMucGFpZEFTQVJld2FyZHMudmFsdWUgKyByZXdhcmRSYXRlCglieXRlYyAxMyAvLyAgInBhaWRBU0FSZXdhcmRzIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIDYgLy8gcmV3YXJkUmF0ZTogdWludDY0CgkrCglhcHBfZ2xvYmFsX3B1dAoKCS8vICppZjI5X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ0OAoJLy8gdGhpcy5yZXdhcmRBc3NldElkLnZhbHVlID09PSB0aGlzLnN0YWtlZEFzc2V0SWQudmFsdWUKCWJ5dGVjIDYgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWJ5dGVjIDE1IC8vICAic3Rha2VkQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0Cgk9PQoJYnogKmlmMjlfZWxzZQoKCS8vICppZjI5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NTEKCS8vIHN0YWtlci5zdGFrZSA9IHN0YWtlci5zdGFrZSArIHJld2FyZFJhdGUKCWZyYW1lX2RpZyA0IC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglpbnRjIDYgLy8gIGhlYWRPZmZzZXQKCWZyYW1lX2RpZyA0IC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDMyIDgKCWJ0b2kKCWZyYW1lX2RpZyA2IC8vIHJld2FyZFJhdGU6IHVpbnQ2NAoJKwoJaXRvYgoJcmVwbGFjZTMKCWZyYW1lX2J1cnkgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NTIKCS8vIHRoaXMudG90YWxTdGFrZWQudmFsdWUgPSB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlICsgcmV3YXJkUmF0ZQoJYnl0ZWMgNSAvLyAgInRvdGFsU3Rha2VkIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIDYgLy8gcmV3YXJkUmF0ZTogdWludDY0CgkrCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWYyOV9lbmQKCippZjI5X2Vsc2U6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDU0CgkvLyBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMgPSBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMgKyByZXdhcmRSYXRlCglmcmFtZV9kaWcgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJcHVzaGludCA0MCAvLyBoZWFkT2Zmc2V0CglmcmFtZV9kaWcgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCA0MCA4CglidG9pCglmcmFtZV9kaWcgNiAvLyByZXdhcmRSYXRlOiB1aW50NjQKCSsKCWl0b2IKCXJlcGxhY2UzCglmcmFtZV9idXJ5IDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCippZjI5X2VuZDoKCippZjI3X2VuZDoKCS8vICppZjMwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ1NwoJLy8geFVTRFJld2FyZHMgPiAwCglmcmFtZV9kaWcgMSAvLyB4VVNEUmV3YXJkczogdWludDY0CglpbnRjIDAgLy8gMAoJPgoJYnogKmlmMzBfZW5kCgoJLy8gKmlmMzBfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ1OAoJLy8gcmV3YXJkUmF0ZSA9IHdpZGVSYXRpbyhbeFVTRFJld2FyZHMsIHN0YWtlclNoYXJlXSwgW1BSRUNJU0lPTl0pCglmcmFtZV9kaWcgMSAvLyB4VVNEUmV3YXJkczogdWludDY0CglmcmFtZV9kaWcgNSAvLyBzdGFrZXJTaGFyZTogdWludDY0CgltdWx3CglpbnRjIDAgLy8gMAoJaW50YyA5IC8vIDEwMDAwMDAwMDAwMDAwMDAKCWRpdm1vZHcKCXBvcAoJcG9wCglzd2FwCgkhCgoJLy8gd2lkZVJhdGlvIGZhaWxlZAoJYXNzZXJ0CglmcmFtZV9idXJ5IDcgLy8gcmV3YXJkUmF0ZTogdWludDY0CgoJLy8gKmlmMzFfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDU5CgkvLyByZXdhcmRSYXRlID09PSAwCglmcmFtZV9kaWcgNyAvLyByZXdhcmRSYXRlOiB1aW50NjQKCWludGMgMCAvLyAwCgk9PQoJYnogKmlmMzFfZW5kCgoJLy8gKmlmMzFfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ2MAoJLy8gcmV3YXJkUmF0ZSA9IDEKCWludGMgMSAvLyAxCglmcmFtZV9idXJ5IDcgLy8gcmV3YXJkUmF0ZTogdWludDY0CgoqaWYzMV9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDYzCgkvLyB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgPSB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgLSByZXdhcmRSYXRlCglieXRlYyA5IC8vICAiaW5qZWN0ZWR4VVNEUmV3YXJkcyIKCWR1cAoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyA3IC8vIHJld2FyZFJhdGU6IHVpbnQ2NAoJLQoJYXBwX2dsb2JhbF9wdXQKCgkvLyAqaWYzMl9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NjQKCS8vIHRoaXMueFVTREFzc2V0SWQudmFsdWUgPT09IHRoaXMuc3Rha2VkQXNzZXRJZC52YWx1ZQoJYnl0ZWMgMTEgLy8gICJ4VVNEQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0CglieXRlYyAxNSAvLyAgInN0YWtlZEFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJPT0KCWJ6ICppZjMyX2Vsc2UKCgkvLyAqaWYzMl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDY3CgkvLyBzdGFrZXIuc3Rha2UgPSBzdGFrZXIuc3Rha2UgKyByZXdhcmRSYXRlCglmcmFtZV9kaWcgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJaW50YyA2IC8vICBoZWFkT2Zmc2V0CglmcmFtZV9kaWcgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCAzMiA4CglidG9pCglmcmFtZV9kaWcgNyAvLyByZXdhcmRSYXRlOiB1aW50NjQKCSsKCWl0b2IKCXJlcGxhY2UzCglmcmFtZV9idXJ5IDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDY4CgkvLyB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlID0gdGhpcy50b3RhbFN0YWtlZC52YWx1ZSArIHJld2FyZFJhdGUKCWJ5dGVjIDUgLy8gICJ0b3RhbFN0YWtlZCIKCWR1cAoJYXBwX2dsb2JhbF9nZXQKCWZyYW1lX2RpZyA3IC8vIHJld2FyZFJhdGU6IHVpbnQ2NAoJKwoJYXBwX2dsb2JhbF9wdXQKCWIgKmlmMzJfZW5kCgoqaWYzMl9lbHNlOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ3MAoJLy8gc3Rha2VyLmFjY3J1ZWR4VVNEUmV3YXJkcyA9IHN0YWtlci5hY2NydWVkeFVTRFJld2FyZHMgKyByZXdhcmRSYXRlCglmcmFtZV9kaWcgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJcHVzaGludCA0OCAvLyBoZWFkT2Zmc2V0CglmcmFtZV9kaWcgNCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCA0OCA4CglidG9pCglmcmFtZV9kaWcgNyAvLyByZXdhcmRSYXRlOiB1aW50NjQKCSsKCWl0b2IKCXJlcGxhY2UzCglmcmFtZV9idXJ5IDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCippZjMyX2VuZDoKCippZjMwX2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NzMKCS8vIHRoaXMuc3Rha2Vycy52YWx1ZVtpXSA9IHN0YWtlcgoJZnJhbWVfZGlnIDIgLy8gaTogdWludDY0CglpbnRjIDUgLy8gNTYKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJZnJhbWVfZGlnIDQgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X3JlcGxhY2UKCippZjI1X2VuZDoKCipmb3JfMV9jb250aW51ZToKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0MjUKCS8vIGkgKz0gMQoJZnJhbWVfZGlnIDIgLy8gaTogdWludDY0CglpbnRjIDEgLy8gMQoJKwoJZnJhbWVfYnVyeSAyIC8vIGk6IHVpbnQ2NAoJYiAqZm9yXzEKCipmb3JfMV9lbmQ6CgkvLyAqaWYzM19jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0NzYKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWYzM19lbmQKCgkvLyAqaWYzM19jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDc3CgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWYzM19lbmQ6CgkvLyAqaWYzNF9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0ODkKCS8vIHRoaXMuaW5qZWN0ZWR4VVNEUmV3YXJkcy52YWx1ZSA+IDAKCWJ5dGVjIDkgLy8gICJpbmplY3RlZHhVU0RSZXdhcmRzIgoJYXBwX2dsb2JhbF9nZXQKCWludGMgMCAvLyAwCgk+CglieiAqaWYzNF9lbmQKCgkvLyAqaWYzNF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDkwCgkvLyBzZW5kQXNzZXRUcmFuc2Zlcih7CgkvLyAgICAgICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSksCgkvLyAgICAgICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsCgkvLyAgICAgICAgICAgc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgICAgIGFzc2V0QW1vdW50OiB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUsCgkvLyAgICAgICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDcgLy8gIGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjQ5MQoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDExIC8vICAieFVTREFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDkyCgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLmluamVjdG9yQWRkcmVzcy52YWx1ZQoJYnl0ZWMgMyAvLyAgImluamVjdG9yQWRkcmVzcyIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDkzCgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo0OTQKCS8vIGFzc2V0QW1vdW50OiB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUKCWJ5dGVjIDkgLy8gICJpbmplY3RlZHhVU0RSZXdhcmRzIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoqaWYzNF9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NDk4CgkvLyB0aGlzLmluamVjdGVkeFVTRFJld2FyZHMudmFsdWUgPSAwCglieXRlYyA5IC8vICAiaW5qZWN0ZWR4VVNEUmV3YXJkcyIKCWludGMgMCAvLyAwCglhcHBfZ2xvYmFsX3B1dAoKKmlmMjJfZW5kOgoJcmV0c3ViCgovLyBnZXRTdGFrZXIoYWRkcmVzczogQWRkcmVzcyk6IFN0YWtlSW5mbwpnZXRTdGFrZXI6Cglwcm90byAxIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgMSAvLyAweAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MDMKCS8vIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5udW1TdGFrZXJzLnZhbHVlOyBpICs9IDEpCglpbnRjIDAgLy8gMAoJZnJhbWVfYnVyeSAwIC8vIGk6IHVpbnQ2NAoKKmZvcl8yOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUwMwoJLy8gaSA8IHRoaXMubnVtU3Rha2Vycy52YWx1ZQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglieXRlYyA0IC8vICAibnVtU3Rha2VycyIKCWFwcF9nbG9iYWxfZ2V0Cgk8CglieiAqZm9yXzJfZW5kCgoJLy8gKmlmMzVfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTA0CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMzVfZW5kCgoJLy8gKmlmMzVfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUwNQoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMzVfZW5kOgoJLy8gKmlmMzZfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTA3CgkvLyB0aGlzLnN0YWtlcnMudmFsdWVbaV0uYWNjb3VudCA9PT0gYWRkcmVzcwoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnRjIDUgLy8gNTYKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJaW50YyAwIC8vIDAKCSsKCWludGMgNiAvLyAzMgoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfZXh0cmFjdAoJZnJhbWVfZGlnIC0xIC8vIGFkZHJlc3M6IEFkZHJlc3MKCT09CglieiAqaWYzNl9lbmQKCgkvLyAqaWYzNl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTA4CgkvLyByZXR1cm4gY2xvbmUodGhpcy5zdGFrZXJzLnZhbHVlW2ldKTsKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgNSAvLyA1NgoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfZXh0cmFjdAoJYiAqZ2V0U3Rha2VyKnJldHVybgoKKmlmMzZfZW5kOgoKKmZvcl8yX2NvbnRpbnVlOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUwMwoJLy8gaSArPSAxCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWludGMgMSAvLyAxCgkrCglmcmFtZV9idXJ5IDAgLy8gaTogdWludDY0CgliICpmb3JfMgoKKmZvcl8yX2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MTEKCS8vIHJldHVybiB7CgkvLyAgICAgICBhY2NvdW50OiBnbG9iYWxzLnplcm9BZGRyZXNzLAoJLy8gICAgICAgc3Rha2U6IDAsCgkvLyAgICAgICBhY2NydWVkQVNBUmV3YXJkczogMCwKCS8vICAgICAgIGFjY3J1ZWR4VVNEUmV3YXJkczogMCwKCS8vICAgICB9OwoJZ2xvYmFsIFplcm9BZGRyZXNzCglieXRlYyA3IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CglieXRlYyA3IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CglieXRlYyA3IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CgoqZ2V0U3Rha2VyKnJldHVybjoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgovLyBjbGFpbVJld2FyZHMoKXZvaWQKKmFiaV9yb3V0ZV9jbGFpbVJld2FyZHM6CgkvLyBleGVjdXRlIGNsYWltUmV3YXJkcygpdm9pZAoJY2FsbHN1YiBjbGFpbVJld2FyZHMKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIGNsYWltUmV3YXJkcygpOiB2b2lkCmNsYWltUmV3YXJkczoKCXByb3RvIDAgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAxIC8vIDB4CgoJLy8gKmlmMzdfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTIwCgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmMzdfZW5kCgoJLy8gKmlmMzdfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUyMQoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmMzdfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUyMwoJLy8gc3Rha2VyID0gdGhpcy5nZXRTdGFrZXIodGhpcy50eG4uc2VuZGVyKQoJdHhuIFNlbmRlcgoJY2FsbHN1YiBnZXRTdGFrZXIKCWZyYW1lX2J1cnkgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKCS8vICppZjM4X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUyNQoJLy8gc3Rha2VyLmFjY3J1ZWRBU0FSZXdhcmRzID4gMAoJZnJhbWVfZGlnIDAgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgNDAgOAoJYnRvaQoJaW50YyAwIC8vIDAKCT4KCWJ6ICppZjM4X2VuZAoKCS8vICppZjM4X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MjYKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5yZXdhcmRBc3NldElkLnZhbHVlKSwKCS8vICAgICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgICBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MsCgkvLyAgICAgICAgIGFzc2V0QW1vdW50OiBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMsCgkvLyAgICAgICB9KQoJaXR4bl9iZWdpbgoJaW50YyA3IC8vICBheGZlcgoJaXR4bl9maWVsZCBUeXBlRW51bQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MjcKCS8vIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMucmV3YXJkQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDYgLy8gICJyZXdhcmRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUyOAoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTI5CgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MzAKCS8vIGFzc2V0QW1vdW50OiBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDQwIDgKCWJ0b2kKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUzMgoJLy8gdGhpcy5wYWlkQVNBUmV3YXJkcy52YWx1ZSA9IHRoaXMucGFpZEFTQVJld2FyZHMudmFsdWUgLSBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMKCWJ5dGVjIDEzIC8vICAicGFpZEFTQVJld2FyZHMiCglkdXAKCWFwcF9nbG9iYWxfZ2V0CglmcmFtZV9kaWcgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCA0MCA4CglidG9pCgktCglhcHBfZ2xvYmFsX3B1dAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MzMKCS8vIHN0YWtlci5hY2NydWVkQVNBUmV3YXJkcyA9IDAKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglieXRlYyA3IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJcmVwbGFjZTIgNDAKCWZyYW1lX2J1cnkgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKKmlmMzhfZW5kOgoJLy8gKmlmMzlfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTM1CgkvLyBzdGFrZXIuYWNjcnVlZHhVU0RSZXdhcmRzID4gMAoJZnJhbWVfZGlnIDAgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgNDggOAoJYnRvaQoJaW50YyAwIC8vIDAKCT4KCWJ6ICppZjM5X2VuZAoKCS8vICppZjM5X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MzYKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSksCgkvLyAgICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlciwKCS8vICAgICAgICAgc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgICBhc3NldEFtb3VudDogc3Rha2VyLmFjY3J1ZWR4VVNEUmV3YXJkcywKCS8vICAgICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDcgLy8gIGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjUzNwoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy54VVNEQXNzZXRJZC52YWx1ZSkKCWJ5dGVjIDExIC8vICAieFVTREFzc2V0SWQiCglhcHBfZ2xvYmFsX2dldAoJaXR4bl9maWVsZCBYZmVyQXNzZXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTM4CgkvLyBhc3NldFJlY2VpdmVyOiB0aGlzLnR4bi5zZW5kZXIKCXR4biBTZW5kZXIKCWl0eG5fZmllbGQgQXNzZXRSZWNlaXZlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1MzkKCS8vIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcwoJZ2xvYmFsIEN1cnJlbnRBcHBsaWNhdGlvbkFkZHJlc3MKCWl0eG5fZmllbGQgU2VuZGVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU0MAoJLy8gYXNzZXRBbW91bnQ6IHN0YWtlci5hY2NydWVkeFVTRFJld2FyZHMKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDQ4IDgKCWJ0b2kKCWl0eG5fZmllbGQgQXNzZXRBbW91bnQKCgkvLyBGZWUgZmllbGQgbm90IHNldCwgZGVmYXVsdGluZyB0byAwCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCgkvLyBTdWJtaXQgaW5uZXIgdHJhbnNhY3Rpb24KCWl0eG5fc3VibWl0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU0MgoJLy8gc3Rha2VyLmFjY3J1ZWR4VVNEUmV3YXJkcyA9IDAKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglieXRlYyA3IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJcmVwbGFjZTIgNDgKCWZyYW1lX2J1cnkgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKKmlmMzlfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU0NQoJLy8gdGhpcy5zZXRTdGFrZXIoc3Rha2VyLmFjY291bnQsIHN0YWtlcikKCWZyYW1lX2RpZyAwIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglmcmFtZV9kaWcgMCAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCAwIDMyCgljYWxsc3ViIHNldFN0YWtlcgoKCS8vICppZjQwX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU0NgoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjQwX2VuZAoKCS8vICppZjQwX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NDcKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjQwX2VuZDoKCXJldHN1YgoKLy8gdW5zdGFrZSh1aW50NjQpdm9pZAoqYWJpX3JvdXRlX3Vuc3Rha2U6CgkvLyBxdWFudGl0eTogdWludDY0Cgl0eG5hIEFwcGxpY2F0aW9uQXJncyAxCglidG9pCgoJLy8gZXhlY3V0ZSB1bnN0YWtlKHVpbnQ2NCl2b2lkCgljYWxsc3ViIHVuc3Rha2UKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIHVuc3Rha2UocXVhbnRpdHk6IHVpbnQ2NCk6IHZvaWQKdW5zdGFrZToKCXByb3RvIDEgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAxIC8vIDB4CglkdXBuIDQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTUyCgkvLyBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubnVtU3Rha2Vycy52YWx1ZTsgaSArPSAxKQoJaW50YyAwIC8vIDAKCWZyYW1lX2J1cnkgMCAvLyBpOiB1aW50NjQKCipmb3JfMzoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NTIKCS8vIGkgPCB0aGlzLm51bVN0YWtlcnMudmFsdWUKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJYnl0ZWMgNCAvLyAgIm51bVN0YWtlcnMiCglhcHBfZ2xvYmFsX2dldAoJPAoJYnogKmZvcl8zX2VuZAoKCS8vICppZjQxX2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU1MwoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjQxX2VuZAoKCS8vICppZjQxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NTQKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjQxX2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NTYKCS8vIHN0YWtlciA9IGNsb25lKHRoaXMuc3Rha2Vycy52YWx1ZVtpXSkKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgNSAvLyA1NgoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfZXh0cmFjdAoJZnJhbWVfYnVyeSAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCgoJLy8gKmlmNDJfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTU3CgkvLyBzdGFrZXIuYWNjb3VudCA9PT0gdGhpcy50eG4uc2VuZGVyCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCAwIDMyCgl0eG4gU2VuZGVyCgk9PQoJYnogKmlmNDJfZW5kCgoJLy8gKmlmNDJfY29uc2VxdWVudAoJLy8gKmlmNDNfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTU4CgkvLyBzdGFrZXIuc3Rha2UgPiAwCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCAzMiA4CglidG9pCglpbnRjIDAgLy8gMAoJPgoJYnogKmlmNDNfZW5kCgoJLy8gKmlmNDNfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU1OQoJLy8gc2VuZEFzc2V0VHJhbnNmZXIoewoJLy8gICAgICAgICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5zdGFrZWRBc3NldElkLnZhbHVlKSwKCS8vICAgICAgICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlciwKCS8vICAgICAgICAgICAgIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgICAgICAgIGFzc2V0QW1vdW50OiBxdWFudGl0eSA9PT0gMCA/IHN0YWtlci5zdGFrZSA6IHF1YW50aXR5LAoJLy8gICAgICAgICAgIH0pCglpdHhuX2JlZ2luCglpbnRjIDcgLy8gIGF4ZmVyCglpdHhuX2ZpZWxkIFR5cGVFbnVtCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU2MAoJLy8geGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5zdGFrZWRBc3NldElkLnZhbHVlKQoJYnl0ZWMgMTUgLy8gICJzdGFrZWRBc3NldElkIgoJYXBwX2dsb2JhbF9nZXQKCWl0eG5fZmllbGQgWGZlckFzc2V0CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU2MQoJLy8gYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyCgl0eG4gU2VuZGVyCglpdHhuX2ZpZWxkIEFzc2V0UmVjZWl2ZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTYyCgkvLyBzZW5kZXI6IHRoaXMuYXBwLmFkZHJlc3MKCWdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCglpdHhuX2ZpZWxkIFNlbmRlcgoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NjMKCS8vIGFzc2V0QW1vdW50OiBxdWFudGl0eSA9PT0gMCA/IHN0YWtlci5zdGFrZSA6IHF1YW50aXR5CglmcmFtZV9kaWcgLTEgLy8gcXVhbnRpdHk6IHVpbnQ2NAoJaW50YyAwIC8vIDAKCT09CglieiAqdGVybmFyeTFfZmFsc2UKCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDMyIDgKCWJ0b2kKCWIgKnRlcm5hcnkxX2VuZAoKKnRlcm5hcnkxX2ZhbHNlOgoJZnJhbWVfZGlnIC0xIC8vIHF1YW50aXR5OiB1aW50NjQKCip0ZXJuYXJ5MV9lbmQ6CglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKKmlmNDNfZW5kOgoJLy8gKmlmNDRfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTY4CgkvLyBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMgPiAwCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCA0MCA4CglidG9pCglpbnRjIDAgLy8gMAoJPgoJYnogKmlmNDRfZW5kCgoJLy8gKmlmNDRfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU2OQoJLy8gc2VuZEFzc2V0VHJhbnNmZXIoewoJLy8gICAgICAgICAgICAgeGZlckFzc2V0OiBBc3NldElELmZyb21VaW50NjQodGhpcy5yZXdhcmRBc3NldElkLnZhbHVlKSwKCS8vICAgICAgICAgICAgIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlciwKCS8vICAgICAgICAgICAgIHNlbmRlcjogdGhpcy5hcHAuYWRkcmVzcywKCS8vICAgICAgICAgICAgIGFzc2V0QW1vdW50OiBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMsCgkvLyAgICAgICAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgNyAvLyAgYXhmZXIKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTcwCgkvLyB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnJld2FyZEFzc2V0SWQudmFsdWUpCglieXRlYyA2IC8vICAicmV3YXJkQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NzEKCS8vIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlcgoJdHhuIFNlbmRlcgoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU3MgoJLy8gc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBTZW5kZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTczCgkvLyBhc3NldEFtb3VudDogc3Rha2VyLmFjY3J1ZWRBU0FSZXdhcmRzCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCA0MCA4CglidG9pCglpdHhuX2ZpZWxkIEFzc2V0QW1vdW50CgoJLy8gRmVlIGZpZWxkIG5vdCBzZXQsIGRlZmF1bHRpbmcgdG8gMAoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCgoJLy8gU3VibWl0IGlubmVyIHRyYW5zYWN0aW9uCglpdHhuX3N1Ym1pdAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NzUKCS8vIHN0YWtlci5hY2NydWVkQVNBUmV3YXJkcyA9IDAKCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglieXRlYyA3IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJcmVwbGFjZTIgNDAKCWZyYW1lX2J1cnkgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKKmlmNDRfZW5kOgoJLy8gKmlmNDVfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTc5CgkvLyBzdGFrZXIuYWNjcnVlZHhVU0RSZXdhcmRzID4gMAoJZnJhbWVfZGlnIDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgNDggOAoJYnRvaQoJaW50YyAwIC8vIDAKCT4KCWJ6ICppZjQ1X2VuZAoKCS8vICppZjQ1X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1ODAKCS8vIHNlbmRBc3NldFRyYW5zZmVyKHsKCS8vICAgICAgICAgICAgIHhmZXJBc3NldDogQXNzZXRJRC5mcm9tVWludDY0KHRoaXMueFVTREFzc2V0SWQudmFsdWUpLAoJLy8gICAgICAgICAgICAgYXNzZXRSZWNlaXZlcjogdGhpcy50eG4uc2VuZGVyLAoJLy8gICAgICAgICAgICAgc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzLAoJLy8gICAgICAgICAgICAgYXNzZXRBbW91bnQ6IHN0YWtlci5hY2NydWVkeFVTRFJld2FyZHMsCgkvLyAgICAgICAgICAgfSkKCWl0eG5fYmVnaW4KCWludGMgNyAvLyAgYXhmZXIKCWl0eG5fZmllbGQgVHlwZUVudW0KCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTgxCgkvLyB4ZmVyQXNzZXQ6IEFzc2V0SUQuZnJvbVVpbnQ2NCh0aGlzLnhVU0RBc3NldElkLnZhbHVlKQoJYnl0ZWMgMTEgLy8gICJ4VVNEQXNzZXRJZCIKCWFwcF9nbG9iYWxfZ2V0CglpdHhuX2ZpZWxkIFhmZXJBc3NldAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1ODIKCS8vIGFzc2V0UmVjZWl2ZXI6IHRoaXMudHhuLnNlbmRlcgoJdHhuIFNlbmRlcgoJaXR4bl9maWVsZCBBc3NldFJlY2VpdmVyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU4MwoJLy8gc2VuZGVyOiB0aGlzLmFwcC5hZGRyZXNzCglnbG9iYWwgQ3VycmVudEFwcGxpY2F0aW9uQWRkcmVzcwoJaXR4bl9maWVsZCBTZW5kZXIKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTg0CgkvLyBhc3NldEFtb3VudDogc3Rha2VyLmFjY3J1ZWR4VVNEUmV3YXJkcwoJZnJhbWVfZGlnIDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgNDggOAoJYnRvaQoJaXR4bl9maWVsZCBBc3NldEFtb3VudAoKCS8vIEZlZSBmaWVsZCBub3Qgc2V0LCBkZWZhdWx0aW5nIHRvIDAKCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoKCS8vIFN1Ym1pdCBpbm5lciB0cmFuc2FjdGlvbgoJaXR4bl9zdWJtaXQKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTg2CgkvLyBzdGFrZXIuYWNjcnVlZHhVU0RSZXdhcmRzID0gMAoJZnJhbWVfZGlnIDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWJ5dGVjIDcgLy8gMHgwMDAwMDAwMDAwMDAwMDAwCglyZXBsYWNlMiA0OAoJZnJhbWVfYnVyeSAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCgoqaWY0NV9lbmQ6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTkwCgkvLyB0aGlzLnRvdGFsU3Rha2VkLnZhbHVlID0gdGhpcy50b3RhbFN0YWtlZC52YWx1ZSAtIChxdWFudGl0eSA9PT0gMCA/IHN0YWtlci5zdGFrZSA6IHF1YW50aXR5KQoJYnl0ZWMgNSAvLyAgInRvdGFsU3Rha2VkIgoJZHVwCglhcHBfZ2xvYmFsX2dldAoJZnJhbWVfZGlnIC0xIC8vIHF1YW50aXR5OiB1aW50NjQKCWludGMgMCAvLyAwCgk9PQoJYnogKnRlcm5hcnkzX2ZhbHNlCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZXh0cmFjdCAzMiA4CglidG9pCgliICp0ZXJuYXJ5M19lbmQKCip0ZXJuYXJ5M19mYWxzZToKCWZyYW1lX2RpZyAtMSAvLyBxdWFudGl0eTogdWludDY0CgoqdGVybmFyeTNfZW5kOgoJLQoJYXBwX2dsb2JhbF9wdXQKCgkvLyAqaWY0Nl9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1OTIKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWY0Nl9lbmQKCgkvLyAqaWY0Nl9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NTkzCgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWY0Nl9lbmQ6CgkvLyAqaWY0N19jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1OTYKCS8vIHF1YW50aXR5ID09PSAwCglmcmFtZV9kaWcgLTEgLy8gcXVhbnRpdHk6IHVpbnQ2NAoJaW50YyAwIC8vIDAKCT09CglieiAqaWY0N19lbHNlCgoJLy8gKmlmNDdfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjU5NwoJLy8gcmVtb3ZlZFN0YWtlcjogU3Rha2VJbmZvID0gewoJLy8gICAgICAgICAgICAgYWNjb3VudDogZ2xvYmFscy56ZXJvQWRkcmVzcywKCS8vICAgICAgICAgICAgIHN0YWtlOiAwLAoJLy8gICAgICAgICAgICAgYWNjcnVlZHhVU0RSZXdhcmRzOiAwLAoJLy8gICAgICAgICAgICAgYWNjcnVlZEFTQVJld2FyZHM6IDAsCgkvLyAgICAgICAgICAgfQoJZ2xvYmFsIFplcm9BZGRyZXNzCglieXRlYyA3IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CglieXRlYyA3IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CglieXRlYyA3IC8vIDB4MDAwMDAwMDAwMDAwMDAwMAoJY29uY2F0CglmcmFtZV9idXJ5IDIgLy8gcmVtb3ZlZFN0YWtlcjogU3Rha2VJbmZvCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYwMwoJLy8gdGhpcy5zZXRTdGFrZXIoc3Rha2VyLmFjY291bnQsIHJlbW92ZWRTdGFrZXIpCglmcmFtZV9kaWcgMiAvLyByZW1vdmVkU3Rha2VyOiBTdGFrZUluZm8KCWZyYW1lX2RpZyAxIC8vIHN0YWtlcjogKGFkZHJlc3MsdWludDY0LHVpbnQ2NCx1aW50NjQpCglleHRyYWN0IDAgMzIKCWNhbGxzdWIgc2V0U3Rha2VyCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYwNwoJLy8gbGFzdFN0YWtlciA9IHRoaXMuZ2V0U3Rha2VyKHRoaXMuc3Rha2Vycy52YWx1ZVt0aGlzLm51bVN0YWtlcnMudmFsdWUgLSAxXS5hY2NvdW50KQoJYnl0ZWMgNCAvLyAgIm51bVN0YWtlcnMiCglhcHBfZ2xvYmFsX2dldAoJaW50YyAxIC8vIDEKCS0KCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglpbnRjIDAgLy8gMAoJKwoJaW50YyA2IC8vIDMyCglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9leHRyYWN0CgljYWxsc3ViIGdldFN0YWtlcgoJZnJhbWVfYnVyeSAzIC8vIGxhc3RTdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MDgKCS8vIGxhc3RTdGFrZXJJbmRleCA9IHRoaXMuZ2V0U3Rha2VySW5kZXgodGhpcy5zdGFrZXJzLnZhbHVlW3RoaXMubnVtU3Rha2Vycy52YWx1ZSAtIDFdLmFjY291bnQpCglieXRlYyA0IC8vICAibnVtU3Rha2VycyIKCWFwcF9nbG9iYWxfZ2V0CglpbnRjIDEgLy8gMQoJLQoJaW50YyA1IC8vIDU2CgkqIC8vIGFjYyAqIHR5cGVMZW5ndGgKCWludGMgMCAvLyAwCgkrCglpbnRjIDYgLy8gMzIKCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X2V4dHJhY3QKCWNhbGxzdWIgZ2V0U3Rha2VySW5kZXgKCWZyYW1lX2J1cnkgNCAvLyBsYXN0U3Rha2VySW5kZXg6IHVpbnQ2NAoKCS8vICppZjQ4X2NvbmRpdGlvbgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYwOQoJLy8gZ2xvYmFscy5vcGNvZGVCdWRnZXQgPCAzMDAKCWdsb2JhbCBPcGNvZGVCdWRnZXQKCWludGMgMyAvLyAzMDAKCTwKCWJ6ICppZjQ4X2VuZAoKCS8vICppZjQ4X2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MTAKCS8vIGluY3JlYXNlT3Bjb2RlQnVkZ2V0KCkKCWl0eG5fYmVnaW4KCWludGMgMiAvLyAgYXBwbAoJaXR4bl9maWVsZCBUeXBlRW51bQoJaW50YyAwIC8vIDAKCWl0eG5fZmllbGQgRmVlCglieXRlYyAwIC8vICAjcHJhZ21hIHZlcnNpb24gMTA7IGludCAxCglkdXAKCWl0eG5fZmllbGQgQXBwcm92YWxQcm9ncmFtCglpdHhuX2ZpZWxkIENsZWFyU3RhdGVQcm9ncmFtCglpbnRjIDQgLy8gIERlbGV0ZUFwcGxpY2F0aW9uCglpdHhuX2ZpZWxkIE9uQ29tcGxldGlvbgoJaXR4bl9zdWJtaXQKCippZjQ4X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MTIKCS8vIHRoaXMuc2V0U3Rha2VyQXRJbmRleChsYXN0U3Rha2VyLCBpKQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglmcmFtZV9kaWcgMyAvLyBsYXN0U3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWNhbGxzdWIgc2V0U3Rha2VyQXRJbmRleAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MTUKCS8vIHRoaXMuc2V0U3Rha2VyQXRJbmRleChyZW1vdmVkU3Rha2VyLCBsYXN0U3Rha2VySW5kZXgpCglmcmFtZV9kaWcgNCAvLyBsYXN0U3Rha2VySW5kZXg6IHVpbnQ2NAoJZnJhbWVfZGlnIDIgLy8gcmVtb3ZlZFN0YWtlcjogU3Rha2VJbmZvCgljYWxsc3ViIHNldFN0YWtlckF0SW5kZXgKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjE2CgkvLyB0aGlzLm51bVN0YWtlcnMudmFsdWUgPSB0aGlzLm51bVN0YWtlcnMudmFsdWUgLSAxCglieXRlYyA0IC8vICAibnVtU3Rha2VycyIKCWR1cAoJYXBwX2dsb2JhbF9nZXQKCWludGMgMSAvLyAxCgktCglhcHBfZ2xvYmFsX3B1dAoJYiAqaWY0N19lbmQKCippZjQ3X2Vsc2U6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjE4CgkvLyBzdGFrZXIuc3Rha2UgPSBzdGFrZXIuc3Rha2UgLSBxdWFudGl0eQoJZnJhbWVfZGlnIDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWludGMgNiAvLyAgaGVhZE9mZnNldAoJZnJhbWVfZGlnIDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgMzIgOAoJYnRvaQoJZnJhbWVfZGlnIC0xIC8vIHF1YW50aXR5OiB1aW50NjQKCS0KCWl0b2IKCXJlcGxhY2UzCglmcmFtZV9idXJ5IDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjE5CgkvLyBzdGFrZXIuYWNjcnVlZEFTQVJld2FyZHMgPSAwCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJYnl0ZWMgNyAvLyAweDAwMDAwMDAwMDAwMDAwMDAKCXJlcGxhY2UyIDQwCglmcmFtZV9idXJ5IDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCippZjQ3X2VuZDoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MjEKCS8vIHRoaXMuc2V0U3Rha2VyKHN0YWtlci5hY2NvdW50LCBzdGFrZXIpCglmcmFtZV9kaWcgMSAvLyBzdGFrZXI6IChhZGRyZXNzLHVpbnQ2NCx1aW50NjQsdWludDY0KQoJZnJhbWVfZGlnIDEgLy8gc3Rha2VyOiAoYWRkcmVzcyx1aW50NjQsdWludDY0LHVpbnQ2NCkKCWV4dHJhY3QgMCAzMgoJY2FsbHN1YiBzZXRTdGFrZXIKCippZjQyX2VuZDoKCipmb3JfM19jb250aW51ZToKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo1NTIKCS8vIGkgKz0gMQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnRjIDEgLy8gMQoJKwoJZnJhbWVfYnVyeSAwIC8vIGk6IHVpbnQ2NAoJYiAqZm9yXzMKCipmb3JfM19lbmQ6CglyZXRzdWIKCi8vIGdldFN0YWtlckluZGV4KGFkZHJlc3M6IEFkZHJlc3MpOiB1aW50NjQKZ2V0U3Rha2VySW5kZXg6Cglwcm90byAxIDEKCgkvLyBQdXNoIGVtcHR5IGJ5dGVzIGFmdGVyIHRoZSBmcmFtZSBwb2ludGVyIHRvIHJlc2VydmUgc3BhY2UgZm9yIGxvY2FsIHZhcmlhYmxlcwoJYnl0ZWMgMSAvLyAweAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2MjcKCS8vIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5udW1TdGFrZXJzLnZhbHVlOyBpICs9IDEpCglpbnRjIDAgLy8gMAoJZnJhbWVfYnVyeSAwIC8vIGk6IHVpbnQ2NAoKKmZvcl80OgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYyNwoJLy8gaSA8IHRoaXMubnVtU3Rha2Vycy52YWx1ZQoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglieXRlYyA0IC8vICAibnVtU3Rha2VycyIKCWFwcF9nbG9iYWxfZ2V0Cgk8CglieiAqZm9yXzRfZW5kCgoJLy8gKmlmNDlfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjI4CgkvLyBnbG9iYWxzLm9wY29kZUJ1ZGdldCA8IDMwMAoJZ2xvYmFsIE9wY29kZUJ1ZGdldAoJaW50YyAzIC8vIDMwMAoJPAoJYnogKmlmNDlfZW5kCgoJLy8gKmlmNDlfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYyOQoJLy8gaW5jcmVhc2VPcGNvZGVCdWRnZXQoKQoJaXR4bl9iZWdpbgoJaW50YyAyIC8vICBhcHBsCglpdHhuX2ZpZWxkIFR5cGVFbnVtCglpbnRjIDAgLy8gMAoJaXR4bl9maWVsZCBGZWUKCWJ5dGVjIDAgLy8gICNwcmFnbWEgdmVyc2lvbiAxMDsgaW50IDEKCWR1cAoJaXR4bl9maWVsZCBBcHByb3ZhbFByb2dyYW0KCWl0eG5fZmllbGQgQ2xlYXJTdGF0ZVByb2dyYW0KCWludGMgNCAvLyAgRGVsZXRlQXBwbGljYXRpb24KCWl0eG5fZmllbGQgT25Db21wbGV0aW9uCglpdHhuX3N1Ym1pdAoKKmlmNDlfZW5kOgoJLy8gKmlmNTBfY29uZGl0aW9uCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjMxCgkvLyB0aGlzLnN0YWtlcnMudmFsdWVbaV0uYWNjb3VudCA9PT0gYWRkcmVzcwoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnRjIDUgLy8gNTYKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJaW50YyAwIC8vIDAKCSsKCWludGMgNiAvLyAzMgoJYnl0ZWMgMiAvLyAgInN0YWtlcnMiCgljb3ZlciAyCglib3hfZXh0cmFjdAoJZnJhbWVfZGlnIC0xIC8vIGFkZHJlc3M6IEFkZHJlc3MKCT09CglieiAqaWY1MF9lbmQKCgkvLyAqaWY1MF9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjMyCgkvLyByZXR1cm4gaTsKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJYiAqZ2V0U3Rha2VySW5kZXgqcmV0dXJuCgoqaWY1MF9lbmQ6CgoqZm9yXzRfY29udGludWU6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjI3CgkvLyBpICs9IDEKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJaW50YyAxIC8vIDEKCSsKCWZyYW1lX2J1cnkgMCAvLyBpOiB1aW50NjQKCWIgKmZvcl80CgoqZm9yXzRfZW5kOgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYzNQoJLy8gcmV0dXJuIDA7CglpbnRjIDAgLy8gMAoKKmdldFN0YWtlckluZGV4KnJldHVybjoKCS8vIHNldCB0aGUgc3Vicm91dGluZSByZXR1cm4gdmFsdWUKCWZyYW1lX2J1cnkgMAoJcmV0c3ViCgovLyBzZXRTdGFrZXIoc3Rha2VyQWNjb3VudDogQWRkcmVzcywgc3Rha2VyOiBTdGFrZUluZm8pOiB2b2lkCnNldFN0YWtlcjoKCXByb3RvIDIgMAoKCS8vIFB1c2ggZW1wdHkgYnl0ZXMgYWZ0ZXIgdGhlIGZyYW1lIHBvaW50ZXIgdG8gcmVzZXJ2ZSBzcGFjZSBmb3IgbG9jYWwgdmFyaWFibGVzCglieXRlYyAxIC8vIDB4CgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjYzOQoJLy8gZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm51bVN0YWtlcnMudmFsdWU7IGkgKz0gMSkKCWludGMgMCAvLyAwCglmcmFtZV9idXJ5IDAgLy8gaTogdWludDY0CgoqZm9yXzU6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjM5CgkvLyBpIDwgdGhpcy5udW1TdGFrZXJzLnZhbHVlCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWJ5dGVjIDQgLy8gICJudW1TdGFrZXJzIgoJYXBwX2dsb2JhbF9nZXQKCTwKCWJ6ICpmb3JfNV9lbmQKCgkvLyAqaWY1MV9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2NDAKCS8vIGdsb2JhbHMub3Bjb2RlQnVkZ2V0IDwgMzAwCglnbG9iYWwgT3Bjb2RlQnVkZ2V0CglpbnRjIDMgLy8gMzAwCgk8CglieiAqaWY1MV9lbmQKCgkvLyAqaWY1MV9jb25zZXF1ZW50CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjQxCgkvLyBpbmNyZWFzZU9wY29kZUJ1ZGdldCgpCglpdHhuX2JlZ2luCglpbnRjIDIgLy8gIGFwcGwKCWl0eG5fZmllbGQgVHlwZUVudW0KCWludGMgMCAvLyAwCglpdHhuX2ZpZWxkIEZlZQoJYnl0ZWMgMCAvLyAgI3ByYWdtYSB2ZXJzaW9uIDEwOyBpbnQgMQoJZHVwCglpdHhuX2ZpZWxkIEFwcHJvdmFsUHJvZ3JhbQoJaXR4bl9maWVsZCBDbGVhclN0YXRlUHJvZ3JhbQoJaW50YyA0IC8vICBEZWxldGVBcHBsaWNhdGlvbgoJaXR4bl9maWVsZCBPbkNvbXBsZXRpb24KCWl0eG5fc3VibWl0CgoqaWY1MV9lbmQ6CgkvLyAqaWY1Ml9jb25kaXRpb24KCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2NDMKCS8vIHRoaXMuc3Rha2Vycy52YWx1ZVtpXS5hY2NvdW50ID09PSBzdGFrZXJBY2NvdW50CglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglpbnRjIDAgLy8gMAoJKwoJaW50YyA2IC8vIDMyCglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9leHRyYWN0CglmcmFtZV9kaWcgLTEgLy8gc3Rha2VyQWNjb3VudDogQWRkcmVzcwoJPT0KCWJ6ICppZjUyX2Vsc2VpZjFfY29uZGl0aW9uCgoJLy8gKmlmNTJfY29uc2VxdWVudAoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjY0NAoJLy8gdGhpcy5zdGFrZXJzLnZhbHVlW2ldID0gc3Rha2VyCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglmcmFtZV9kaWcgLTIgLy8gc3Rha2VyOiBTdGFrZUluZm8KCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X3JlcGxhY2UKCgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjQ1CgkvLyByZXR1cm47CglyZXRzdWIKCWIgKmlmNTJfZW5kCgoqaWY1Ml9lbHNlaWYxX2NvbmRpdGlvbjoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2NDcKCS8vIHRoaXMuc3Rha2Vycy52YWx1ZVtpXS5hY2NvdW50ID09PSBnbG9iYWxzLnplcm9BZGRyZXNzCglmcmFtZV9kaWcgMCAvLyBpOiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglpbnRjIDAgLy8gMAoJKwoJaW50YyA2IC8vIDMyCglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9leHRyYWN0CglnbG9iYWwgWmVyb0FkZHJlc3MKCT09CglieiAqaWY1Ml9lbmQKCgkvLyAqaWY1Ml9lbHNlaWYxX2NvbnNlcXVlbnQKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2NDgKCS8vIHRoaXMuc3Rha2Vycy52YWx1ZVtpXSA9IHN0YWtlcgoJZnJhbWVfZGlnIDAgLy8gaTogdWludDY0CglpbnRjIDUgLy8gNTYKCSogLy8gYWNjICogdHlwZUxlbmd0aAoJZnJhbWVfZGlnIC0yIC8vIHN0YWtlcjogU3Rha2VJbmZvCglieXRlYyAyIC8vICAic3Rha2VycyIKCWNvdmVyIDIKCWJveF9yZXBsYWNlCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjY0OQoJLy8gcmV0dXJuOwoJcmV0c3ViCgoqaWY1Ml9lbmQ6CgoqZm9yXzVfY29udGludWU6CgkvLyBjb250cmFjdHMvUGVybWlzc2lvbmxlc3NJbmplY3RlZFJld2FyZHNQb29sLmFsZ28udHM6NjM5CgkvLyBpICs9IDEKCWZyYW1lX2RpZyAwIC8vIGk6IHVpbnQ2NAoJaW50YyAxIC8vIDEKCSsKCWZyYW1lX2J1cnkgMCAvLyBpOiB1aW50NjQKCWIgKmZvcl81CgoqZm9yXzVfZW5kOgoJcmV0c3ViCgovLyBzZXRTdGFrZXJBdEluZGV4KHN0YWtlcjogU3Rha2VJbmZvLCBpbmRleDogdWludDY0KTogdm9pZApzZXRTdGFrZXJBdEluZGV4OgoJcHJvdG8gMiAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjY1NQoJLy8gdGhpcy5zdGFrZXJzLnZhbHVlW2luZGV4XSA9IHN0YWtlcgoJZnJhbWVfZGlnIC0yIC8vIGluZGV4OiB1aW50NjQKCWludGMgNSAvLyA1NgoJKiAvLyBhY2MgKiB0eXBlTGVuZ3RoCglmcmFtZV9kaWcgLTEgLy8gc3Rha2VyOiBTdGFrZUluZm8KCWJ5dGVjIDIgLy8gICJzdGFrZXJzIgoJY292ZXIgMgoJYm94X3JlcGxhY2UKCXJldHN1YgoKLy8gc2V0RnJlZXplKGJvb2wpdm9pZAoqYWJpX3JvdXRlX3NldEZyZWV6ZToKCS8vIGVuYWJsZWQ6IGJvb2wKCXR4bmEgQXBwbGljYXRpb25BcmdzIDEKCWR1cAoJbGVuCglpbnRjIDEgLy8gMQoJPT0KCgkvLyBhcmd1bWVudCAwIChlbmFibGVkKSBmb3Igc2V0RnJlZXplIG11c3QgYmUgYSBib29sCglhc3NlcnQKCWludGMgMCAvLyAwCglnZXRiaXQKCgkvLyBleGVjdXRlIHNldEZyZWV6ZShib29sKXZvaWQKCWNhbGxzdWIgc2V0RnJlZXplCglpbnRjIDEgLy8gMQoJcmV0dXJuCgovLyBzZXRGcmVlemUoZW5hYmxlZDogYm9vbGVhbik6IHZvaWQKc2V0RnJlZXplOgoJcHJvdG8gMSAwCgoJLy8gY29udHJhY3RzL1Blcm1pc3Npb25sZXNzSW5qZWN0ZWRSZXdhcmRzUG9vbC5hbGdvLnRzOjY1OQoJLy8gYXNzZXJ0KHRoaXMudHhuLnNlbmRlciA9PT0gdGhpcy5pbmplY3RvckFkZHJlc3MudmFsdWUsICdPbmx5IGluamVjdG9yIGNhbiBmcmVlemUgcGF5b3V0cycpCgl0eG4gU2VuZGVyCglieXRlYyAzIC8vICAiaW5qZWN0b3JBZGRyZXNzIgoJYXBwX2dsb2JhbF9nZXQKCT09CgoJLy8gT25seSBpbmplY3RvciBjYW4gZnJlZXplIHBheW91dHMKCWFzc2VydAoKCS8vIGNvbnRyYWN0cy9QZXJtaXNzaW9ubGVzc0luamVjdGVkUmV3YXJkc1Bvb2wuYWxnby50czo2NjAKCS8vIHRoaXMuZnJlZXplLnZhbHVlID0gZW5hYmxlZAoJYnl0ZWMgMjEgLy8gICJmcmVlemUiCglmcmFtZV9kaWcgLTEgLy8gZW5hYmxlZDogYm9vbGVhbgoJYnl0ZWMgMTIgLy8gMHgwMAoJaW50YyAwIC8vIDAKCXVuY292ZXIgMgoJc2V0Yml0CglhcHBfZ2xvYmFsX3B1dAoJcmV0c3ViCgovLyBnYXMoKXZvaWQKKmFiaV9yb3V0ZV9nYXM6CgkvLyBleGVjdXRlIGdhcygpdm9pZAoJY2FsbHN1YiBnYXMKCWludGMgMSAvLyAxCglyZXR1cm4KCi8vIGdhcygpOiB2b2lkCmdhczoKCXByb3RvIDAgMAoJcmV0c3ViCgoqY3JlYXRlX05vT3A6CglwdXNoYnl0ZXMgMHgzNWU0NGMxZiAvLyBtZXRob2QgImNyZWF0ZUFwcGxpY2F0aW9uKGFkZHJlc3MsYWRkcmVzcyxhZGRyZXNzKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CglwdXNoYnl0ZXMgMHgxYzA1N2FiOSAvLyBtZXRob2QgImluaXRBcHBsaWNhdGlvbih1aW50NjQsdWludDY0LHVpbnQ2NCx1aW50NjQpdm9pZCIKCXB1c2hieXRlcyAweGEzZmVhNDBmIC8vIG1ldGhvZCAidXBkYXRlQWRtaW5BZGRyZXNzKGFkZHJlc3Mpdm9pZCIKCXB1c2hieXRlcyAweDVmODRlNjBiIC8vIG1ldGhvZCAic2V0UG9vbEFjdGl2ZSgpdm9pZCIKCXB1c2hieXRlcyAweGZmNGNmNTFiIC8vIG1ldGhvZCAic2V0UmV3YXJkUGFyYW1zKHVpbnQ2NCx1aW50NjQsdWludDY0LHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4NjgyYWM2OTMgLy8gbWV0aG9kICJ1cGRhdGVJbmplY3RlZEFTQVJld2FyZHModWludDY0KXZvaWQiCglwdXNoYnl0ZXMgMHhlN2ZlOWNjZSAvLyBtZXRob2QgInVwZGF0ZVBhaWRBU0FSZXdhcmRzKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4YzQ3N2E0NGQgLy8gbWV0aG9kICJ1cGRhdGVJbmplY3RlZHhVU0RSZXdhcmRzKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4MWI5MjQxNTkgLy8gbWV0aG9kICJ1cGRhdGVUcmVhc3VyeUFkZHJlc3MoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4ZGE1OGYwZjAgLy8gbWV0aG9kICJ1cGRhdGV4VVNERmVlKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4MmQ5ZDdjYWIgLy8gbWV0aG9kICJ1cGRhdGVJbmplY3RvckFkZHJlc3MoYWRkcmVzcyl2b2lkIgoJcHVzaGJ5dGVzIDB4ZjY5ZGQ3NzIgLy8gbWV0aG9kICJ1cGRhdGVOdW1TdGFrZXJzKHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZDI0OTYzYjggLy8gbWV0aG9kICJ1cGRhdGVGcmVlemUoYm9vbCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZGIyODQwNjEgLy8gbWV0aG9kICJ1cGRhdGVQb29sRW5kaW5nKGJvb2wpdm9pZCIKCXB1c2hieXRlcyAweGU2ZjRlNDNlIC8vIG1ldGhvZCAic2V0RmVlV2FpdmVkKCl2b2lkIgoJcHVzaGJ5dGVzIDB4NGM0MzY3MjYgLy8gbWV0aG9kICJnZXRNQlJGb3JQb29sQ3JlYXRpb24oKSh1aW50NjQpIgoJcHVzaGJ5dGVzIDB4NDdjZmNjMDQgLy8gbWV0aG9kICJpbml0U3RvcmFnZShwYXkpdm9pZCIKCXB1c2hieXRlcyAweDM0NzAwN2ViIC8vIG1ldGhvZCAiaW5qZWN0UmV3YXJkcyhheGZlcix1aW50NjQsdWludDY0KXZvaWQiCglwdXNoYnl0ZXMgMHgwODgwYjI0YyAvLyBtZXRob2QgInBpY2t1cFJld2FyZHMoKXZvaWQiCglwdXNoYnl0ZXMgMHhjNmJhOGYxOSAvLyBtZXRob2QgImluamVjdHhVU0QoYXhmZXIsdWludDY0KXZvaWQiCglwdXNoYnl0ZXMgMHhmNGViNGEwMyAvLyBtZXRob2QgInN0YWtlKGF4ZmVyLHVpbnQ2NCl2b2lkIgoJcHVzaGJ5dGVzIDB4ZWE0YmNhNTcgLy8gbWV0aG9kICJhY2NydWVSZXdhcmRzKCl2b2lkIgoJcHVzaGJ5dGVzIDB4YTVhZTZiZDEgLy8gbWV0aG9kICJjbGFpbVJld2FyZHMoKXZvaWQiCglwdXNoYnl0ZXMgMHg4MTNjZTg5YSAvLyBtZXRob2QgInVuc3Rha2UodWludDY0KXZvaWQiCglwdXNoYnl0ZXMgMHhiYjZiYzZlMyAvLyBtZXRob2QgInNldEZyZWV6ZShib29sKXZvaWQiCglwdXNoYnl0ZXMgMHgzMTcyY2E5ZCAvLyBtZXRob2QgImdhcygpdm9pZCIKCXR4bmEgQXBwbGljYXRpb25BcmdzIDAKCW1hdGNoICphYmlfcm91dGVfaW5pdEFwcGxpY2F0aW9uICphYmlfcm91dGVfdXBkYXRlQWRtaW5BZGRyZXNzICphYmlfcm91dGVfc2V0UG9vbEFjdGl2ZSAqYWJpX3JvdXRlX3NldFJld2FyZFBhcmFtcyAqYWJpX3JvdXRlX3VwZGF0ZUluamVjdGVkQVNBUmV3YXJkcyAqYWJpX3JvdXRlX3VwZGF0ZVBhaWRBU0FSZXdhcmRzICphYmlfcm91dGVfdXBkYXRlSW5qZWN0ZWR4VVNEUmV3YXJkcyAqYWJpX3JvdXRlX3VwZGF0ZVRyZWFzdXJ5QWRkcmVzcyAqYWJpX3JvdXRlX3VwZGF0ZXhVU0RGZWUgKmFiaV9yb3V0ZV91cGRhdGVJbmplY3RvckFkZHJlc3MgKmFiaV9yb3V0ZV91cGRhdGVOdW1TdGFrZXJzICphYmlfcm91dGVfdXBkYXRlRnJlZXplICphYmlfcm91dGVfdXBkYXRlUG9vbEVuZGluZyAqYWJpX3JvdXRlX3NldEZlZVdhaXZlZCAqYWJpX3JvdXRlX2dldE1CUkZvclBvb2xDcmVhdGlvbiAqYWJpX3JvdXRlX2luaXRTdG9yYWdlICphYmlfcm91dGVfaW5qZWN0UmV3YXJkcyAqYWJpX3JvdXRlX3BpY2t1cFJld2FyZHMgKmFiaV9yb3V0ZV9pbmplY3R4VVNEICphYmlfcm91dGVfc3Rha2UgKmFiaV9yb3V0ZV9hY2NydWVSZXdhcmRzICphYmlfcm91dGVfY2xhaW1SZXdhcmRzICphYmlfcm91dGVfdW5zdGFrZSAqYWJpX3JvdXRlX3NldEZyZWV6ZSAqYWJpX3JvdXRlX2dhcwoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIE5vT3AKCWVycgoKKmNhbGxfRGVsZXRlQXBwbGljYXRpb246CglwdXNoYnl0ZXMgMHgyNDg3YzMyYyAvLyBtZXRob2QgImRlbGV0ZUFwcGxpY2F0aW9uKCl2b2lkIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9kZWxldGVBcHBsaWNhdGlvbgoKCS8vIHRoaXMgY29udHJhY3QgZG9lcyBub3QgaW1wbGVtZW50IHRoZSBnaXZlbiBBQkkgbWV0aG9kIGZvciBjYWxsIERlbGV0ZUFwcGxpY2F0aW9uCgllcnI=","clear":"I3ByYWdtYSB2ZXJzaW9uIDEx"},"byteCode":{"approval":"CyAMAAEGrAIFOCAEoI0GgICapuqv4wHn2gF/JhoDCoEBAAdzdGFrZXJzD2luamVjdG9yQWRkcmVzcwpudW1TdGFrZXJzC3RvdGFsU3Rha2VkDXJld2FyZEFzc2V0SWQIAAAAAAAAAAAMYWRtaW5BZGRyZXNzE2luamVjdGVkeFVTRFJld2FyZHMSaW5qZWN0ZWRBU0FSZXdhcmRzC3hVU0RBc3NldElkAQAOcGFpZEFTQVJld2FyZHMScmV3YXJkUGVySW5qZWN0aW9uDXN0YWtlZEFzc2V0SWQMdG90YWxSZXdhcmRzB3hVU0RGZWUPcmV3YXJkRnJlcXVlbmN5CnBvb2xBY3RpdmUKcG9vbEVuZGluZwZmcmVlemUPdHJlYXN1cnlBZGRyZXNzDWluamVjdGlvblR5cGUJZmVlV2FpdmVkEWxhc3RJbmplY3Rpb25UaW1lMRgUJAsxGQiNDAz2AAAAAAAAAAANxAzoAAAAAAAAAAAAAAA2GgNJFSEGEkQ2GgJJFSEGEkQ2GgFJFSEGEkSIAAIjQ4oDACcIi/9nK4v+ZycWi/1ngA9jb250cmFjdFZlcnNpb26BzQhniTYaBBc2GgMXNhoCFzYaAReIAAIjQ4oEADEAJwhkEkQnD4v/ZycGi/5nJwUiZycVIicMIk8CVGcnCiJnJwkiZycEImcnEYv9ZycYIicMIk8CVGcnEyInDCJPAlRnJxQiJwwiTwJUZycLi/xnJxAiZycSImcnDiJnJxciZycZMgdnJw0iZ7EhB7IQi/+yETIKshQishIisgGzsSEHshAnC2SyETIKshQishIisgGziTYaAUkVIQYSRIgAAiNDigEAMQAnCGQSRCcIi/9niYgAAiNDigAAMQAnCGQSRCcYZCJTFEEADTIKJwtkcABIJxFkD0QnF2QiEkEAGScQZCINRCcOZCINRCtkJwZkcABIJxBkD0QnEmQiDUQnEyMnDCJPAlRnsSEHshAnC2SyEScWZLIUJxFkshIyCrIAIrIBs4k2GgQXNhoDFzYaAhc2GgEXiAACI0OKBAAxACcIZBJEJxeL/GeL/CISQQASJxCL/2cnEov+ZycOi/1nQgANJxAiZycSi/5nJw4iZ4k2GgEXiAACI0OKAQAxACtkEkQnCov/Z4k2GgEXiAACI0OKAQAxACtkEkQnDYv/Z4k2GgEXiAACI0OKAQAxACtkEkQnCYv/Z4k2GgFJFSEGEkSIAAIjQ4oBADEAK2QSRCcWi/9niTYaAReIAAIjQ4oBADEAK2QSRCcRi/9niTYaAUkVIQYSRIgAAiNDigEAMQArZBJEK4v/Z4k2GgEXiAACI0OKAQAxACtkEkQnBIv/Z4k2GgFJFSMSRCJTiAACI0OKAQAxACtkEkQnFYv/JwwiTwJUZ4k2GgFJFSMSRCJTiAACI0OKAQAxACcIZBJEJxSL/ycMIk8CVGeJiAACI0OKAAAxACtkEkQnGCMnDCJPAlRnJxEiZ4mKAQGBxBOL/4GQAwsIiYAEFR98dYgABFCwI0OKAAEpSSEIjAAnBmQiE0EAB4sAIQgIjAAhCIsACCEKiP/DCCELiP+9CIwBiwEWjABGAYkxFiMJSTgQIxJEiAACI0OKAQApSSq9TEgURDEAJwhkEkQhCIwAJwZkIhNBAAeLACEICIwAIQiLAAghCoj/dAghC4j/bgiMAYv/OAcyChJEi/84CIsBEkQqgeDaAblIgA5taW5pbXVtQmFsYW5jZYsBZycGZCITQQAVsSEHshAnBmSyETIKshQishIisgGziTYaAhc2GgEXMRYjCUk4ECEHEkSIAAIjQ4oDADEAK2QSRIv/OAArZBJEi/84FDIKEkSL/zgRi/0SRIv/OBInDmQiDUEABicOZEIAAov+EkQnCklki/4IZycZMgdniYgAAiNDigAAKUcCMQArZBJEMgonBmRwAEiMACKMAScGZCcPZBJBAAUnBWSMAYsAJw1kCYsBCScKZAmMAosCJwRkDUEACCcKSWSLAghniTYaARcxFiMJSTgQIQcSRIgAAiNDigIAMQArZBJEi/84ACtkEkSL/zgUMgoSRIv/OBEnC2QSRIv/OBKL/hJEJwlJZIv+CGeJiAACI0OKAAApSTEAJwhkEkQnBWQiEkQqvDIKJwZkcABIjACLACINQQAcsSEHshAnBmSyEScIZLIUiwCyEicIZLIVIrIBszIKcwBIMgpzAUgJjAGxI7IQiwGyCCcIZLIHMgqyAIHoB7IBs4k2GgEXMRYjCUk4ECEHEkSIAAIjQ4oCAClHAov+Ig1EJxNkIlNEJxRkIlMURDIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOL/zgAMQASRIv/OBQyChJEi/84EScPZBJEi/84Eov+EkQijAAyDCUMQQASsSSyECKyAShJsh6yHyEEshmzIowBiwGB9AMMQQGAiwBBAANCAXiLASEFCyIIIQYqTgK6MQASQQChMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4sBIQULIQUqTgK6jAKLAiEGiwJXIAgXi/84EggWXYwCMgwlDEEAErEkshAisgEoSbIesh8hBLIZszIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLASEFC4sCKk4CuzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMnBWSL/zgSCCcFTGcjjABCAKKLASEFCyIIIQYqTgK6MgMSQQCPMgwlDEEAErEkshAisgEoSbIesh8hBLIZsycFSWSL/zgSCGcyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwEhBQsxAIv/OBIWUCcHUCcHUCpOArsyDCUMQQASsSSyECKyAShJsh6yHyEEshmzJwRJZCMIZzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMjjAAyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwEjCIwBQv53iwBEiYgAAiNDigAAKUcHJxVkIlMUSUEABycUZCJTFBBJQQAGJxNkIlMQQQG1JwpkjAAnCWSMATIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMijAKLAicEZAxBAUYyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwIhBQshBgiBCCpOAroXjAOLAyINQQEMiwIhBQshBSpOArqMBIsDIQkdIicFZB9ISEwURIwFMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4sAJwRkDUEAYYsAiwUdIiEJH0hITBREjAaLBiISQQADI4wGJwpJZIsGCWcnDUlkiwYIZycGZCcPZBJBAByLBCEGiwRXIAgXiwYIFl2MBCcFSWSLBghnQgARiwSBKIsEVygIF4sGCBZdjASLASINQQBZiwGLBR0iIQkfSEhMFESMB4sHIhJBAAMjjAcnCUlkiwcJZycLZCcPZBJBAByLBCEGiwRXIAgXiwcIFl2MBCcFSWSLBwhnQgARiwSBMIsEVzAIF4sHCBZdjASLAiEFC4sEKk4Cu4sCIwiMAkL+sTIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMnCWQiDUEAG7EhB7IQJwtkshErZLIUMgqyACcJZLISIrIBsycJImeJigEBKSKMAIsAJwRkDEEAQzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLACEFCyIIIQYqTgK6i/8SQQAOiwAhBQshBSpOArpCABSLACMIjABC/7QyAycHUCcHUCcHUIwAiYgAAiNDigAAKTIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMxAIj/eIwAiwBXKAgXIg1BADKxIQeyECcGZLIRMQCyFDIKsgCLAFcoCBeyEiKyAbMnDUlkiwBXKAgXCWeLACcHXCiMAIsAVzAIFyINQQAmsSEHshAnC2SyETEAshQyCrIAiwBXMAgXshIisgGziwAnB1wwjACLAIsAVwAgiAIiMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4k2GgEXiAACI0OKAQApRwQijACLACcEZAxBAZ4yDCUMQQASsSSyECKyAShJsh6yHyEEshmziwAhBQshBSpOArqMAYsBVwAgMQASQQFkiwFXIAgXIg1BACqxIQeyECcPZLIRMQCyFDIKsgCL/yISQQAJiwFXIAgXQgACi/+yEiKyAbOLAVcoCBciDUEAJrEhB7IQJwZkshExALIUMgqyAIsBVygIF7ISIrIBs4sBJwdcKIwBiwFXMAgXIg1BACaxIQeyECcLZLIRMQCyFDIKsgCLAVcwCBeyEiKyAbOLAScHXDCMAScFSWSL/yISQQAJiwFXIAgXQgACi/8JZzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOL/yISQQByMgMnB1AnB1AnB1CMAosCiwFXACCIANYnBGQjCSEFCyIIIQYqTgK6iP2fjAMnBGQjCSEFCyIIIQYqTgK6iABgjAQyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwCLA4gBAIsEiwKIAPknBElkIwlnQgAZiwEhBosBVyAIF4v/CRZdjAGLAScHXCiMAYsBiwFXACCIAFiLACMIjABC/lmJigEBKSKMAIsAJwRkDEEAOjIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLACEFCyIIIQYqTgK6i/8SQQAFiwBCAAqLACMIjABC/70ijACJigIAKSKMAIsAJwRkDEEAYzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLACEFCyIIIQYqTgK6i/8SQQAPiwAhBQuL/ipOAruJQgAfiwAhBQsiCCEGKk4CujIDEkEADIsAIQULi/4qTgK7iYsAIwiMAEL/lImKAgCL/iEFC4v/Kk4Cu4k2GgFJFSMSRCJTiAACI0OKAQAxACtkEkQnFYv/JwwiTwJUZ4mIAAIjQ4oAAImABDXkTB82GgCOAfMMAIAEHAV6uYAEo/6kD4AEX4TmC4AE/0z1G4AEaCrGk4AE5/6czoAExHekTYAEG5JBWYAE2ljw8IAELZ18q4AE9p3XcoAE0kljuIAE2yhAYYAE5vTkPoAETENnJoAER8/MBIAENHAH64AECICyTIAExrqPGYAE9OtKA4AE6kvKV4AEpa5r0YAEgTzomoAEu2vG44AEMXLKnTYaAI4Z8oXzM/NR88T0D/Qn9D/0V/R09Iz0qPTA9OT1CfU09XT2A/Zg9q73YPly+7L8bf74/xwAgAQkh8MsNhoAjgH25wA=","clear":"Cw=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":1,"patch":2,"commitHash":"088f89dd"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


// Type definitions for ARC-56 structs

export type MbrReturn = {
  mbrPayment: bigint
}


/**
 * Converts the ABI tuple representation of a mbrReturn to the struct representation
 */
export function MbrReturnFromTuple(abiTuple: [bigint]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.mbrReturn, APP_SPEC.structs) as MbrReturn
}

/**
 * The argument types for the PermissionlessInjectedRewardsPool contract
 */
export type PermissionlessInjectedRewardsPoolArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication(address,address,address)void': {
      adminAddress: string
      injectorAddress: string
      treasuryAddress: string
    }
    'initApplication(uint64,uint64,uint64,uint64)void': {
      stakedAsset: bigint | number
      rewardAssetId: bigint | number
      xUsdFee: bigint | number
      xUsdAssetId: bigint | number
    }
    'updateAdminAddress(address)void': {
      adminAddress: string
    }
    'setPoolActive()void': Record<string, never>
    'setRewardParams(uint64,uint64,uint64,uint64)void': {
      totalRewards: bigint | number
      rewardFrequency: bigint | number
      rewardPerInjection: bigint | number
      injectionType: bigint | number
    }
    'updateInjectedASARewards(uint64)void': {
      injectedAsaRewards: bigint | number
    }
    'updatePaidASARewards(uint64)void': {
      paidAsaRewards: bigint | number
    }
    'updateInjectedxUSDRewards(uint64)void': {
      injectedxUsdRewards: bigint | number
    }
    'updateTreasuryAddress(address)void': {
      treasuryAddress: string
    }
    'updatexUSDFee(uint64)void': {
      xUsdFee: bigint | number
    }
    'updateInjectorAddress(address)void': {
      injectorAddress: string
    }
    'updateNumStakers(uint64)void': {
      numStakers: bigint | number
    }
    'updateFreeze(bool)void': {
      freeze: boolean
    }
    'updatePoolEnding(bool)void': {
      poolEnding: boolean
    }
    'setFeeWaived()void': Record<string, never>
    'getMBRForPoolCreation()(uint64)': Record<string, never>
    'initStorage(pay)void': {
      mbrPayment: AppMethodCallTransactionArgument
    }
    'injectRewards(axfer,uint64,uint64)void': {
      rewardTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
      rewardAssetId: bigint | number
    }
    'pickupRewards()void': Record<string, never>
    'injectxUSD(axfer,uint64)void': {
      xUsdTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
    }
    'deleteApplication()void': Record<string, never>
    'stake(axfer,uint64)void': {
      stakeTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
    }
    'accrueRewards()void': Record<string, never>
    'claimRewards()void': Record<string, never>
    'unstake(uint64)void': {
      quantity: bigint | number
    }
    'setFreeze(bool)void': {
      enabled: boolean
    }
    'gas()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication(address,address,address)void': [adminAddress: string, injectorAddress: string, treasuryAddress: string]
    'initApplication(uint64,uint64,uint64,uint64)void': [stakedAsset: bigint | number, rewardAssetId: bigint | number, xUsdFee: bigint | number, xUsdAssetId: bigint | number]
    'updateAdminAddress(address)void': [adminAddress: string]
    'setPoolActive()void': []
    'setRewardParams(uint64,uint64,uint64,uint64)void': [totalRewards: bigint | number, rewardFrequency: bigint | number, rewardPerInjection: bigint | number, injectionType: bigint | number]
    'updateInjectedASARewards(uint64)void': [injectedAsaRewards: bigint | number]
    'updatePaidASARewards(uint64)void': [paidAsaRewards: bigint | number]
    'updateInjectedxUSDRewards(uint64)void': [injectedxUsdRewards: bigint | number]
    'updateTreasuryAddress(address)void': [treasuryAddress: string]
    'updatexUSDFee(uint64)void': [xUsdFee: bigint | number]
    'updateInjectorAddress(address)void': [injectorAddress: string]
    'updateNumStakers(uint64)void': [numStakers: bigint | number]
    'updateFreeze(bool)void': [freeze: boolean]
    'updatePoolEnding(bool)void': [poolEnding: boolean]
    'setFeeWaived()void': []
    'getMBRForPoolCreation()(uint64)': []
    'initStorage(pay)void': [mbrPayment: AppMethodCallTransactionArgument]
    'injectRewards(axfer,uint64,uint64)void': [rewardTxn: AppMethodCallTransactionArgument, quantity: bigint | number, rewardAssetId: bigint | number]
    'pickupRewards()void': []
    'injectxUSD(axfer,uint64)void': [xUsdTxn: AppMethodCallTransactionArgument, quantity: bigint | number]
    'deleteApplication()void': []
    'stake(axfer,uint64)void': [stakeTxn: AppMethodCallTransactionArgument, quantity: bigint | number]
    'accrueRewards()void': []
    'claimRewards()void': []
    'unstake(uint64)void': [quantity: bigint | number]
    'setFreeze(bool)void': [enabled: boolean]
    'gas()void': []
  }
}

/**
 * The return type for each method
 */
export type PermissionlessInjectedRewardsPoolReturns = {
  'createApplication(address,address,address)void': void
  'initApplication(uint64,uint64,uint64,uint64)void': void
  'updateAdminAddress(address)void': void
  'setPoolActive()void': void
  'setRewardParams(uint64,uint64,uint64,uint64)void': void
  'updateInjectedASARewards(uint64)void': void
  'updatePaidASARewards(uint64)void': void
  'updateInjectedxUSDRewards(uint64)void': void
  'updateTreasuryAddress(address)void': void
  'updatexUSDFee(uint64)void': void
  'updateInjectorAddress(address)void': void
  'updateNumStakers(uint64)void': void
  'updateFreeze(bool)void': void
  'updatePoolEnding(bool)void': void
  'setFeeWaived()void': void
  'getMBRForPoolCreation()(uint64)': MbrReturn
  'initStorage(pay)void': void
  'injectRewards(axfer,uint64,uint64)void': void
  'pickupRewards()void': void
  'injectxUSD(axfer,uint64)void': void
  'deleteApplication()void': void
  'stake(axfer,uint64)void': void
  'accrueRewards()void': void
  'claimRewards()void': void
  'unstake(uint64)void': void
  'setFreeze(bool)void': void
  'gas()void': void
}

/**
 * Defines the types of available calls and state of the PermissionlessInjectedRewardsPool smart contract.
 */
export type PermissionlessInjectedRewardsPoolTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication(address,address,address)void' | 'createApplication', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['createApplication(address,address,address)void']
    }>
    & Record<'initApplication(uint64,uint64,uint64,uint64)void' | 'initApplication', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64,uint64)void']
    }>
    & Record<'updateAdminAddress(address)void' | 'updateAdminAddress', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateAdminAddress(address)void']
    }>
    & Record<'setPoolActive()void' | 'setPoolActive', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']
      returns: PermissionlessInjectedRewardsPoolReturns['setPoolActive()void']
    }>
    & Record<'setRewardParams(uint64,uint64,uint64,uint64)void' | 'setRewardParams', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setRewardParams(uint64,uint64,uint64,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setRewardParams(uint64,uint64,uint64,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['setRewardParams(uint64,uint64,uint64,uint64)void']
    }>
    & Record<'updateInjectedASARewards(uint64)void' | 'updateInjectedASARewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateInjectedASARewards(uint64)void']
    }>
    & Record<'updatePaidASARewards(uint64)void' | 'updatePaidASARewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updatePaidASARewards(uint64)void']
    }>
    & Record<'updateInjectedxUSDRewards(uint64)void' | 'updateInjectedxUSDRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateInjectedxUSDRewards(uint64)void']
    }>
    & Record<'updateTreasuryAddress(address)void' | 'updateTreasuryAddress', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateTreasuryAddress(address)void']
    }>
    & Record<'updatexUSDFee(uint64)void' | 'updatexUSDFee', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updatexUSDFee(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updatexUSDFee(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updatexUSDFee(uint64)void']
    }>
    & Record<'updateInjectorAddress(address)void' | 'updateInjectorAddress', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateInjectorAddress(address)void']
    }>
    & Record<'updateNumStakers(uint64)void' | 'updateNumStakers', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateNumStakers(uint64)void']
    }>
    & Record<'updateFreeze(bool)void' | 'updateFreeze', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateFreeze(bool)void']
    }>
    & Record<'updatePoolEnding(bool)void' | 'updatePoolEnding', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updatePoolEnding(bool)void']
    }>
    & Record<'setFeeWaived()void' | 'setFeeWaived', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setFeeWaived()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setFeeWaived()void']
      returns: PermissionlessInjectedRewardsPoolReturns['setFeeWaived()void']
    }>
    & Record<'getMBRForPoolCreation()(uint64)' | 'getMBRForPoolCreation', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']
      returns: PermissionlessInjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)']
    }>
    & Record<'initStorage(pay)void' | 'initStorage', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']
      returns: PermissionlessInjectedRewardsPoolReturns['initStorage(pay)void']
    }>
    & Record<'injectRewards(axfer,uint64,uint64)void' | 'injectRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void']
    }>
    & Record<'pickupRewards()void' | 'pickupRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['pickupRewards()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['pickupRewards()void']
      returns: PermissionlessInjectedRewardsPoolReturns['pickupRewards()void']
    }>
    & Record<'injectxUSD(axfer,uint64)void' | 'injectxUSD', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['injectxUSD(axfer,uint64)void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']
      returns: PermissionlessInjectedRewardsPoolReturns['deleteApplication()void']
    }>
    & Record<'stake(axfer,uint64)void' | 'stake', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['stake(axfer,uint64)void']
    }>
    & Record<'accrueRewards()void' | 'accrueRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']
      returns: PermissionlessInjectedRewardsPoolReturns['accrueRewards()void']
    }>
    & Record<'claimRewards()void' | 'claimRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']
      returns: PermissionlessInjectedRewardsPoolReturns['claimRewards()void']
    }>
    & Record<'unstake(uint64)void' | 'unstake', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['unstake(uint64)void']
    }>
    & Record<'setFreeze(bool)void' | 'setFreeze', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']
      returns: PermissionlessInjectedRewardsPoolReturns['setFreeze(bool)void']
    }>
    & Record<'gas()void' | 'gas', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['gas()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']
      returns: PermissionlessInjectedRewardsPoolReturns['gas()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        stakedAssetId: bigint
        rewardAssetId: bigint
        xUsdAssetId: bigint
        totalStaked: bigint
        injectedAsaRewards: bigint
        paidAsaRewards: bigint
        injectedxUsdRewards: bigint
        adminAddress: string
        injectorAddress: string
        treasuryAddress: string
        xUsdFee: bigint
        feeWaived: boolean
        minimumBalance: bigint
        numStakers: bigint
        freeze: boolean
        poolActive: boolean
        poolEnding: boolean
        rewardFrequency: bigint
        rewardPerInjection: bigint
        totalRewards: bigint
        lastInjectionTime: bigint
        contractVersion: bigint
        injectionType: bigint
      }
      maps: {}
    }
    box: {
      keys: {
        stakers: [[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]]
      }
      maps: {}
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type PermissionlessInjectedRewardsPoolSignatures = keyof PermissionlessInjectedRewardsPoolTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type PermissionlessInjectedRewardsPoolNonVoidMethodSignatures = keyof PermissionlessInjectedRewardsPoolTypes['methods'] extends infer T ? T extends keyof PermissionlessInjectedRewardsPoolTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the PermissionlessInjectedRewardsPool smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends PermissionlessInjectedRewardsPoolSignatures> = PermissionlessInjectedRewardsPoolTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the PermissionlessInjectedRewardsPool smart contract to the method's return type
 */
export type MethodReturn<TSignature extends PermissionlessInjectedRewardsPoolSignatures> = PermissionlessInjectedRewardsPoolTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = PermissionlessInjectedRewardsPoolTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = PermissionlessInjectedRewardsPoolTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type PermissionlessInjectedRewardsPoolCreateCallParams =
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & {method: 'createApplication(address,address,address)void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type PermissionlessInjectedRewardsPoolDeleteCallParams =
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type PermissionlessInjectedRewardsPoolDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: PermissionlessInjectedRewardsPoolCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: PermissionlessInjectedRewardsPoolDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the PermissionlessInjectedRewardsPool smart contract
 */
export abstract class PermissionlessInjectedRewardsPoolParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends PermissionlessInjectedRewardsPoolCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication(address,address,address)void':
            return PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the PermissionlessInjectedRewardsPool smart contract using the createApplication(address,address,address)void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication(address,address,address)void' as const,
          args: Array.isArray(params.args) ? params.args : [params.args.adminAddress, params.args.injectorAddress, params.args.treasuryAddress],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends PermissionlessInjectedRewardsPoolDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the PermissionlessInjectedRewardsPool smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the initApplication(uint64,uint64,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initApplication(uint64,uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakedAsset, params.args.rewardAssetId, params.args.xUsdFee, params.args.xUsdAssetId],
    }
  }
  /**
   * Constructs a no op call for the updateAdminAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateAdminAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateAdminAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.adminAddress],
    }
  }
  /**
   * Constructs a no op call for the setPoolActive()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setPoolActive(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setPoolActive()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the setRewardParams(uint64,uint64,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setRewardParams(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setRewardParams(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setRewardParams(uint64,uint64,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setRewardParams(uint64,uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.totalRewards, params.args.rewardFrequency, params.args.rewardPerInjection, params.args.injectionType],
    }
  }
  /**
   * Constructs a no op call for the updateInjectedASARewards(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateInjectedAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateInjectedASARewards(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.injectedAsaRewards],
    }
  }
  /**
   * Constructs a no op call for the updatePaidASARewards(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updatePaidAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updatePaidASARewards(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.paidAsaRewards],
    }
  }
  /**
   * Constructs a no op call for the updateInjectedxUSDRewards(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateInjectedxUsdRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateInjectedxUSDRewards(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.injectedxUsdRewards],
    }
  }
  /**
   * Constructs a no op call for the updateTreasuryAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateTreasuryAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateTreasuryAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.treasuryAddress],
    }
  }
  /**
   * Constructs a no op call for the updatexUSDFee(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updatexUsdFee(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatexUSDFee(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatexUSDFee(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updatexUSDFee(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.xUsdFee],
    }
  }
  /**
   * Constructs a no op call for the updateInjectorAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateInjectorAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateInjectorAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.injectorAddress],
    }
  }
  /**
   * Constructs a no op call for the updateNumStakers(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateNumStakers(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateNumStakers(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.numStakers],
    }
  }
  /**
   * Constructs a no op call for the updateFreeze(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateFreeze(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.freeze],
    }
  }
  /**
   * Constructs a no op call for the updatePoolEnding(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updatePoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updatePoolEnding(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.poolEnding],
    }
  }
  /**
   * Constructs a no op call for the setFeeWaived()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setFeeWaived(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFeeWaived()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFeeWaived()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setFeeWaived()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the getMBRForPoolCreation()(uint64) ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getMbrForPoolCreation(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getMBRForPoolCreation()(uint64)' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the initStorage(pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initStorage(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initStorage(pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.mbrPayment],
    }
  }
  /**
   * Constructs a no op call for the injectRewards(axfer,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static injectRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'injectRewards(axfer,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.rewardTxn, params.args.quantity, params.args.rewardAssetId],
    }
  }
  /**
   * Constructs a no op call for the pickupRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static pickupRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['pickupRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['pickupRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'pickupRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the injectxUSD(axfer,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static injectxUsd(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'injectxUSD(axfer,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.xUsdTxn, params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the stake(axfer,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static stake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'stake(axfer,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakeTxn, params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the accrueRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static accrueRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'accrueRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the claimRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static claimRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'claimRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the unstake(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static unstake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'unstake(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the setFreeze(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setFreeze(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.enabled],
    }
  }
  /**
   * Constructs a no op call for the gas()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gas(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gas()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the PermissionlessInjectedRewardsPool smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class PermissionlessInjectedRewardsPoolFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `PermissionlessInjectedRewardsPoolFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClient {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new PermissionlessInjectedRewardsPoolClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new PermissionlessInjectedRewardsPoolClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the PermissionlessInjectedRewardsPool smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: PermissionlessInjectedRewardsPoolDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? PermissionlessInjectedRewardsPoolParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (PermissionlessInjectedRewardsPoolCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? PermissionlessInjectedRewardsPoolParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (PermissionlessInjectedRewardsPoolDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new PermissionlessInjectedRewardsPoolClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the PermissionlessInjectedRewardsPool smart contract using the createApplication(address,address,address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.params.create(PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the PermissionlessInjectedRewardsPool smart contract using the createApplication(address,address,address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.createTransaction.create(PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the PermissionlessInjectedRewardsPool smart contract using an ABI method call using the createApplication(address,address,address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        const result = await this.appFactory.send.create(PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['createApplication(address,address,address)void']) }, appClient: new PermissionlessInjectedRewardsPoolClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the PermissionlessInjectedRewardsPool smart contract
 */
export class PermissionlessInjectedRewardsPoolClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `PermissionlessInjectedRewardsPoolClient`
   *
   * @param appClient An `AppClient` instance which has been created with the PermissionlessInjectedRewardsPool app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `PermissionlessInjectedRewardsPoolClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends PermissionlessInjectedRewardsPoolNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `PermissionlessInjectedRewardsPoolClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<PermissionlessInjectedRewardsPoolClient> {
    return new PermissionlessInjectedRewardsPoolClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `PermissionlessInjectedRewardsPoolClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<PermissionlessInjectedRewardsPoolClient> {
    return new PermissionlessInjectedRewardsPoolClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClient {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateAdminAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolActive()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setPoolActive: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolActive(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setRewardParams(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setRewardParams: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setRewardParams(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setRewardParams(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setRewardParams(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateInjectedAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePaidASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updatePaidAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePaidAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedxUSDRewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateInjectedxUsdRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedxUsdRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateTreasuryAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateTreasuryAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateTreasuryAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatexUSDFee(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updatexUsdFee: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatexUSDFee(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatexUSDFee(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updatexUsdFee(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectorAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateInjectorAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectorAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateNumStakers(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateNumStakers: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateNumStakers(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePoolEnding(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updatePoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFeeWaived()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setFeeWaived: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFeeWaived()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFeeWaived()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setFeeWaived(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getMbrForPoolCreation: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initStorage: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    injectRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `pickupRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    pickupRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['pickupRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['pickupRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.pickupRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectxUSD(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    injectxUsd: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.injectxUsd(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    stake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    accrueRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    claimRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    unstake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gas: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateAdminAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolActive()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setPoolActive: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolActive(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setRewardParams(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setRewardParams: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setRewardParams(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setRewardParams(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setRewardParams(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateInjectedAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePaidASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updatePaidAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePaidAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedxUSDRewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateInjectedxUsdRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedxUsdRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateTreasuryAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateTreasuryAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateTreasuryAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatexUSDFee(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updatexUsdFee: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatexUSDFee(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatexUSDFee(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updatexUsdFee(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectorAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateInjectorAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectorAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateNumStakers(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateNumStakers: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateNumStakers(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePoolEnding(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updatePoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFeeWaived()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setFeeWaived: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFeeWaived()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFeeWaived()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setFeeWaived(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getMbrForPoolCreation: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initStorage: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    injectRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `pickupRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    pickupRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['pickupRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['pickupRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.pickupRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectxUSD(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    injectxUsd: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.injectxUsd(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    stake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    accrueRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    claimRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    unstake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gas: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initApplication: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.initApplication(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateAdminAddress: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateAdminAddress(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateAdminAddress(address)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolActive()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setPoolActive: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolActive(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setPoolActive()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setRewardParams(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setRewardParams: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setRewardParams(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setRewardParams(uint64,uint64,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setRewardParams(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setRewardParams(uint64,uint64,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateInjectedAsaRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedAsaRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateInjectedASARewards(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePaidASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updatePaidAsaRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePaidAsaRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updatePaidASARewards(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedxUSDRewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateInjectedxUsdRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedxUsdRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateInjectedxUSDRewards(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateTreasuryAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateTreasuryAddress: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateTreasuryAddress(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateTreasuryAddress(address)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatexUSDFee(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updatexUsdFee: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatexUSDFee(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatexUSDFee(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updatexUsdFee(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updatexUSDFee(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectorAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateInjectorAddress: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectorAddress(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateInjectorAddress(address)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateNumStakers(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateNumStakers: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateNumStakers(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateNumStakers(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateFreeze: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateFreeze(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateFreeze(bool)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePoolEnding(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updatePoolEnding: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePoolEnding(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updatePoolEnding(bool)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFeeWaived()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setFeeWaived: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFeeWaived()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFeeWaived()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setFeeWaived(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setFeeWaived()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getMbrForPoolCreation: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initStorage: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.initStorage(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['initStorage(pay)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    injectRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.injectRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `pickupRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    pickupRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['pickupRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['pickupRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.pickupRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['pickupRewards()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectxUSD(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    injectxUsd: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.injectxUsd(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['injectxUSD(axfer,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    stake: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.stake(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['stake(axfer,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    accrueRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.accrueRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['accrueRewards()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    claimRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.claimRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['claimRewards()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    unstake: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.unstake(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['unstake(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setFreeze: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setFreeze(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setFreeze(bool)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gas: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.gas(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['gas()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new PermissionlessInjectedRewardsPoolClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current PermissionlessInjectedRewardsPool app
   */
  state = {
    /**
     * Methods to access global state for the current PermissionlessInjectedRewardsPool app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          stakedAssetId: result.stakedAssetId,
          rewardAssetId: result.rewardAssetId,
          xUsdAssetId: result.xUSDAssetId,
          totalStaked: result.totalStaked,
          injectedAsaRewards: result.injectedASARewards,
          paidAsaRewards: result.paidASARewards,
          injectedxUsdRewards: result.injectedxUSDRewards,
          adminAddress: result.adminAddress,
          injectorAddress: result.injectorAddress,
          treasuryAddress: result.treasuryAddress,
          xUsdFee: result.xUSDFee,
          feeWaived: result.feeWaived,
          minimumBalance: result.minimumBalance,
          numStakers: result.numStakers,
          freeze: result.freeze,
          poolActive: result.poolActive,
          poolEnding: result.poolEnding,
          rewardFrequency: result.rewardFrequency,
          rewardPerInjection: result.rewardPerInjection,
          totalRewards: result.totalRewards,
          lastInjectionTime: result.lastInjectionTime,
          contractVersion: result.contractVersion,
          injectionType: result.injectionType,
        }
      },
      /**
       * Get the current value of the stakedAssetId key in global state
       */
      stakedAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("stakedAssetId")) as bigint | undefined },
      /**
       * Get the current value of the rewardAssetId key in global state
       */
      rewardAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("rewardAssetId")) as bigint | undefined },
      /**
       * Get the current value of the xUSDAssetId key in global state
       */
      xUsdAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("xUSDAssetId")) as bigint | undefined },
      /**
       * Get the current value of the totalStaked key in global state
       */
      totalStaked: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("totalStaked")) as bigint | undefined },
      /**
       * Get the current value of the injectedASARewards key in global state
       */
      injectedAsaRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("injectedASARewards")) as bigint | undefined },
      /**
       * Get the current value of the paidASARewards key in global state
       */
      paidAsaRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("paidASARewards")) as bigint | undefined },
      /**
       * Get the current value of the injectedxUSDRewards key in global state
       */
      injectedxUsdRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("injectedxUSDRewards")) as bigint | undefined },
      /**
       * Get the current value of the adminAddress key in global state
       */
      adminAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("adminAddress")) as string | undefined },
      /**
       * Get the current value of the injectorAddress key in global state
       */
      injectorAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("injectorAddress")) as string | undefined },
      /**
       * Get the current value of the treasuryAddress key in global state
       */
      treasuryAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("treasuryAddress")) as string | undefined },
      /**
       * Get the current value of the xUSDFee key in global state
       */
      xUsdFee: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("xUSDFee")) as bigint | undefined },
      /**
       * Get the current value of the feeWaived key in global state
       */
      feeWaived: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("feeWaived")) as boolean | undefined },
      /**
       * Get the current value of the minimumBalance key in global state
       */
      minimumBalance: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("minimumBalance")) as bigint | undefined },
      /**
       * Get the current value of the numStakers key in global state
       */
      numStakers: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("numStakers")) as bigint | undefined },
      /**
       * Get the current value of the freeze key in global state
       */
      freeze: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("freeze")) as boolean | undefined },
      /**
       * Get the current value of the poolActive key in global state
       */
      poolActive: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("poolActive")) as boolean | undefined },
      /**
       * Get the current value of the poolEnding key in global state
       */
      poolEnding: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("poolEnding")) as boolean | undefined },
      /**
       * Get the current value of the rewardFrequency key in global state
       */
      rewardFrequency: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("rewardFrequency")) as bigint | undefined },
      /**
       * Get the current value of the rewardPerInjection key in global state
       */
      rewardPerInjection: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("rewardPerInjection")) as bigint | undefined },
      /**
       * Get the current value of the totalRewards key in global state
       */
      totalRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("totalRewards")) as bigint | undefined },
      /**
       * Get the current value of the lastInjectionTime key in global state
       */
      lastInjectionTime: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("lastInjectionTime")) as bigint | undefined },
      /**
       * Get the current value of the contractVersion key in global state
       */
      contractVersion: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("contractVersion")) as bigint | undefined },
      /**
       * Get the current value of the injectionType key in global state
       */
      injectionType: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("injectionType")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current PermissionlessInjectedRewardsPool app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
          stakers: result.stakers,
        }
      },
      /**
       * Get the current value of the stakers key in box state
       */
      stakers: async (): Promise<[[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]] | undefined> => { return (await this.appClient.state.box.getValue("stakers")) as [[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]] | undefined },
    },
  }

  public newGroup(): PermissionlessInjectedRewardsPoolComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a initApplication(uint64,uint64,uint64,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      initApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initApplication(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateAdminAddress(address)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateAdminAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateAdminAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setPoolActive()void method call against the PermissionlessInjectedRewardsPool contract
       */
      setPoolActive(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setPoolActive(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setRewardParams(uint64,uint64,uint64,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      setRewardParams(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setRewardParams(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setRewardParams(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setRewardParams(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateInjectedASARewards(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateInjectedAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateInjectedAsaRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updatePaidASARewards(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updatePaidAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updatePaidAsaRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateInjectedxUSDRewards(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateInjectedxUsdRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateInjectedxUsdRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateTreasuryAddress(address)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateTreasuryAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateTreasuryAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updatexUSDFee(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updatexUsdFee(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatexUSDFee(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatexUSDFee(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updatexUsdFee(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateInjectorAddress(address)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateInjectorAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateInjectorAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateNumStakers(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateNumStakers(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateNumStakers(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateFreeze(bool)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateFreeze(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updatePoolEnding(bool)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updatePoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updatePoolEnding(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setFeeWaived()void method call against the PermissionlessInjectedRewardsPool contract
       */
      setFeeWaived(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFeeWaived()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFeeWaived()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setFeeWaived(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a getMBRForPoolCreation()(uint64) method call against the PermissionlessInjectedRewardsPool contract
       */
      getMbrForPoolCreation(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getMbrForPoolCreation(params)))
        resultMappers.push((v) => client.decodeReturnValue('getMBRForPoolCreation()(uint64)', v))
        return this
      },
      /**
       * Add a initStorage(pay)void method call against the PermissionlessInjectedRewardsPool contract
       */
      initStorage(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initStorage(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a injectRewards(axfer,uint64,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      injectRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.injectRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a pickupRewards()void method call against the PermissionlessInjectedRewardsPool contract
       */
      pickupRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['pickupRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['pickupRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.pickupRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a injectxUSD(axfer,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      injectxUsd(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.injectxUsd(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a stake(axfer,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      stake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.stake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a accrueRewards()void method call against the PermissionlessInjectedRewardsPool contract
       */
      accrueRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.accrueRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a claimRewards()void method call against the PermissionlessInjectedRewardsPool contract
       */
      claimRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.claimRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a unstake(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      unstake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.unstake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setFreeze(bool)void method call against the PermissionlessInjectedRewardsPool contract
       */
      setFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setFreeze(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gas()void method call against the PermissionlessInjectedRewardsPool contract
       */
      gas(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gas(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the PermissionlessInjectedRewardsPool contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as PermissionlessInjectedRewardsPoolComposer
  }
}
export type PermissionlessInjectedRewardsPoolComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the initApplication(uint64,uint64,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initApplication(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64,uint64)void'] | undefined]>

  /**
   * Calls the updateAdminAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateAdminAddress(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateAdminAddress(address)void'] | undefined]>

  /**
   * Calls the setPoolActive()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setPoolActive(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setPoolActive()void'] | undefined]>

  /**
   * Calls the setRewardParams(uint64,uint64,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setRewardParams(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setRewardParams(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setRewardParams(uint64,uint64,uint64,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setRewardParams(uint64,uint64,uint64,uint64)void'] | undefined]>

  /**
   * Calls the updateInjectedASARewards(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateInjectedAsaRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateInjectedASARewards(uint64)void'] | undefined]>

  /**
   * Calls the updatePaidASARewards(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updatePaidAsaRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updatePaidASARewards(uint64)void'] | undefined]>

  /**
   * Calls the updateInjectedxUSDRewards(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateInjectedxUsdRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateInjectedxUSDRewards(uint64)void'] | undefined]>

  /**
   * Calls the updateTreasuryAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateTreasuryAddress(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateTreasuryAddress(address)void'] | undefined]>

  /**
   * Calls the updatexUSDFee(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updatexUsdFee(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatexUSDFee(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatexUSDFee(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updatexUSDFee(uint64)void'] | undefined]>

  /**
   * Calls the updateInjectorAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateInjectorAddress(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateInjectorAddress(address)void'] | undefined]>

  /**
   * Calls the updateNumStakers(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateNumStakers(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateNumStakers(uint64)void'] | undefined]>

  /**
   * Calls the updateFreeze(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateFreeze(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateFreeze(bool)void'] | undefined]>

  /**
   * Calls the updatePoolEnding(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updatePoolEnding(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updatePoolEnding(bool)void'] | undefined]>

  /**
   * Calls the setFeeWaived()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setFeeWaived(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFeeWaived()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFeeWaived()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setFeeWaived()void'] | undefined]>

  /**
   * Calls the getMBRForPoolCreation()(uint64) ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getMbrForPoolCreation(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'] | undefined]>

  /**
   * Calls the initStorage(pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initStorage(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['initStorage(pay)void'] | undefined]>

  /**
   * Calls the injectRewards(axfer,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  injectRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'] | undefined]>

  /**
   * Calls the pickupRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  pickupRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['pickupRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['pickupRewards()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['pickupRewards()void'] | undefined]>

  /**
   * Calls the injectxUSD(axfer,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  injectxUsd(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['injectxUSD(axfer,uint64)void'] | undefined]>

  /**
   * Calls the stake(axfer,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  stake(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['stake(axfer,uint64)void'] | undefined]>

  /**
   * Calls the accrueRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  accrueRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['accrueRewards()void'] | undefined]>

  /**
   * Calls the claimRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  claimRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['claimRewards()void'] | undefined]>

  /**
   * Calls the unstake(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  unstake(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['unstake(uint64)void'] | undefined]>

  /**
   * Calls the setFreeze(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setFreeze(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setFreeze(bool)void'] | undefined]>

  /**
   * Calls the gas()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gas(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['gas()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): PermissionlessInjectedRewardsPoolComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): PermissionlessInjectedRewardsPoolComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns>>
}
export type PermissionlessInjectedRewardsPoolComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

