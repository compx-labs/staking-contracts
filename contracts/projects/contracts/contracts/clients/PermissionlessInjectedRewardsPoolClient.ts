/* eslint-disable */
/**
 * This file was automatically generated by @algorandfoundation/algokit-client-generator.
 * DO NOT MODIFY IT BY HAND.
 * requires: @algorandfoundation/algokit-utils: ^7
 */
import { type AlgorandClient } from '@algorandfoundation/algokit-utils/types/algorand-client'
import { ABIReturn, AppReturn, SendAppTransactionResult } from '@algorandfoundation/algokit-utils/types/app'
import { Arc56Contract, getArc56ReturnValue, getABIStructFromABITuple } from '@algorandfoundation/algokit-utils/types/app-arc56'
import {
  AppClient as _AppClient,
  AppClientMethodCallParams,
  AppClientParams,
  AppClientBareCallParams,
  CallOnComplete,
  AppClientCompilationParams,
  ResolveAppClientByCreatorAndName,
  ResolveAppClientByNetwork,
  CloneAppClientParams,
} from '@algorandfoundation/algokit-utils/types/app-client'
import { AppFactory as _AppFactory, AppFactoryAppClientParams, AppFactoryResolveAppClientByCreatorAndNameParams, AppFactoryDeployParams, AppFactoryParams, CreateSchema } from '@algorandfoundation/algokit-utils/types/app-factory'
import { TransactionComposer, AppCallMethodCall, AppMethodCallTransactionArgument, SimulateOptions, RawSimulateOptions, SkipSignaturesSimulateOptions } from '@algorandfoundation/algokit-utils/types/composer'
import { SendParams, SendSingleTransactionResult, SendAtomicTransactionComposerResults } from '@algorandfoundation/algokit-utils/types/transaction'
import { Address, encodeAddress, modelsv2, OnApplicationComplete, Transaction, TransactionSigner } from 'algosdk'
import SimulateResponse = modelsv2.SimulateResponse

export const APP_SPEC: Arc56Contract = {"name":"PermissionlessInjectedRewardsPool","desc":"","methods":[{"name":"createApplication","args":[{"name":"adminAddress","type":"address"},{"name":"treasuryAddress","type":"address"},{"name":"injectorAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":["NoOp"],"call":[]}},{"name":"initApplication","args":[{"name":"stakedAsset","type":"uint64"},{"name":"rewardAssetId","type":"uint64"},{"name":"xUSDAssetID","type":"uint64"},{"name":"platformFeeBps","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateAdminAddress","args":[{"name":"adminAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setPoolActive","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setPoolEnding","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateInjectedASARewards","args":[{"name":"injectedASARewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updatePaidASARewards","args":[{"name":"paidASARewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateInjectedxUSDRewards","args":[{"name":"injectedxUSDRewards","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateTreasuryAddress","args":[{"name":"treasuryAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateInjectorAddress","args":[{"name":"injectorAddress","type":"address"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateNumStakers","args":[{"name":"numStakers","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updateFreeze","args":[{"name":"freeze","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"updatePoolEnding","args":[{"name":"poolEnding","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"getMBRForPoolCreation","args":[],"returns":{"type":"(uint64)","struct":"mbrReturn"},"actions":{"create":[],"call":["NoOp"]}},{"name":"initStorage","args":[{"name":"mbrPayment","type":"pay"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"injectRewards","args":[{"name":"rewardTxn","type":"axfer"},{"name":"quantity","type":"uint64"},{"name":"rewardAssetId","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"injectxUSD","args":[{"name":"xUSDTxn","type":"axfer"},{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"deleteApplication","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["DeleteApplication"]}},{"name":"stake","args":[{"name":"stakeTxn","type":"axfer"},{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"accrueRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"claimRewards","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"unstake","args":[{"name":"quantity","type":"uint64"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"setFreeze","args":[{"name":"enabled","type":"bool"}],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}},{"name":"gas","args":[],"returns":{"type":"void"},"actions":{"create":[],"call":["NoOp"]}}],"arcs":[4,56],"structs":{"mbrReturn":[{"name":"mbrPayment","type":"uint64"}]},"state":{"schema":{"global":{"bytes":6,"ints":13},"local":{"bytes":0,"ints":0}},"keys":{"global":{"stakedAssetId":{"key":"c3Rha2VkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"rewardAssetId":{"key":"cmV3YXJkQXNzZXRJZA==","keyType":"AVMBytes","valueType":"uint64"},"xUSDAssetId":{"key":"eFVTREFzc2V0SWQ=","keyType":"AVMBytes","valueType":"uint64"},"totalStaked":{"key":"dG90YWxTdGFrZWQ=","keyType":"AVMBytes","valueType":"uint64"},"injectedASARewards":{"key":"aW5qZWN0ZWRBU0FSZXdhcmRz","keyType":"AVMBytes","valueType":"uint64"},"paidASARewards":{"key":"cGFpZEFTQVJld2FyZHM=","keyType":"AVMBytes","valueType":"uint64"},"injectedxUSDRewards":{"key":"aW5qZWN0ZWR4VVNEUmV3YXJkcw==","keyType":"AVMBytes","valueType":"uint64"},"adminAddress":{"key":"YWRtaW5BZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"treasuryAddress":{"key":"dHJlYXN1cnlBZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"injectorAddress":{"key":"aW5qZWN0b3JBZGRyZXNz","keyType":"AVMBytes","valueType":"address"},"minimumBalance":{"key":"bWluaW11bUJhbGFuY2U=","keyType":"AVMBytes","valueType":"uint64"},"numStakers":{"key":"bnVtU3Rha2Vycw==","keyType":"AVMBytes","valueType":"uint64"},"freeze":{"key":"ZnJlZXpl","keyType":"AVMBytes","valueType":"bool"},"poolActive":{"key":"cG9vbEFjdGl2ZQ==","keyType":"AVMBytes","valueType":"bool"},"poolEnding":{"key":"cG9vbEVuZGluZw==","keyType":"AVMBytes","valueType":"bool"},"lastInjectionTime":{"key":"bGFzdEluamVjdGlvblRpbWU=","keyType":"AVMBytes","valueType":"uint64"},"contractVersion":{"key":"Y29udHJhY3RWZXJzaW9u","keyType":"AVMBytes","valueType":"uint64"},"platformFeeBps":{"key":"cGxhdGZvcm1GZWVCcHM=","keyType":"AVMBytes","valueType":"uint64"},"paidPlatformFees":{"key":"cGFpZFBsYXRmb3JtRmVlcw==","keyType":"AVMBytes","valueType":"uint64"}},"local":{},"box":{"stakers":{"key":"c3Rha2Vycw==","keyType":"AVMBytes","valueType":"(address,uint64,uint64,uint64)[500]"}}},"maps":{"global":{},"local":{},"box":{}}},"bareActions":{"create":[],"call":[]},"sourceInfo":{"approval":{"sourceInfo":[{"teal":1,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[0]},{"teal":2,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30]},{"teal":3,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297]},{"teal":15,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[298,299]},{"teal":16,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[300]},{"teal":17,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[301]},{"teal":18,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[302]},{"teal":19,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[303,304]},{"teal":20,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[305]},{"teal":21,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331]},{"teal":25,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?","pc":[332]},{"teal":30,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[333,334,335]},{"teal":31,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[336]},{"teal":32,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[337]},{"teal":33,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[338,339]},{"teal":34,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[340]},{"teal":37,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","errorMessage":"argument 0 (injectorAddress) for createApplication must be a address","pc":[341]},{"teal":40,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[342,343,344]},{"teal":41,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[345]},{"teal":42,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[346]},{"teal":43,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[347,348]},{"teal":44,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[349]},{"teal":47,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","errorMessage":"argument 1 (treasuryAddress) for createApplication must be a address","pc":[350]},{"teal":50,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[351,352,353]},{"teal":51,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[354]},{"teal":52,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[355]},{"teal":53,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[356,357]},{"teal":54,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[358]},{"teal":57,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","errorMessage":"argument 2 (adminAddress) for createApplication must be a address","pc":[359]},{"teal":60,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[360,361,362]},{"teal":61,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[363]},{"teal":62,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[364]},{"teal":66,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[365,366,367]},{"teal":70,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:67","pc":[368,369]},{"teal":71,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:67","pc":[370,371]},{"teal":72,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:67","pc":[372]},{"teal":76,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:68","pc":[373,374]},{"teal":77,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:68","pc":[375,376]},{"teal":78,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:68","pc":[377]},{"teal":82,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:69","pc":[378,379]},{"teal":83,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:69","pc":[380,381]},{"teal":84,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:69","pc":[382]},{"teal":88,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:70","pc":[383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399]},{"teal":89,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:70","pc":[400,401]},{"teal":90,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:70","pc":[402]},{"teal":91,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:66","pc":[403]},{"teal":96,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[404,405,406]},{"teal":97,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[407]},{"teal":100,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[408,409,410]},{"teal":101,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[411]},{"teal":104,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[412,413,414]},{"teal":105,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[415]},{"teal":108,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[416,417,418]},{"teal":109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[419]},{"teal":112,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[420,421,422]},{"teal":113,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[423]},{"teal":114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[424]},{"teal":118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[425,426,427]},{"teal":122,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","pc":[428,429]},{"teal":123,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","pc":[430,431]},{"teal":124,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","pc":[432]},{"teal":125,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","pc":[433]},{"teal":128,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:74","errorMessage":"Only admin can init application","pc":[434]},{"teal":132,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:76","pc":[435,436]},{"teal":133,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:76","pc":[437,438]},{"teal":134,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:76","pc":[439]},{"teal":138,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[440,441]},{"teal":139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[442,443]},{"teal":140,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:77","pc":[444]},{"teal":144,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:78","pc":[445,446]},{"teal":145,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:78","pc":[447]},{"teal":146,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:78","pc":[448]},{"teal":150,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[449,450]},{"teal":151,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[451]},{"teal":152,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[452,453]},{"teal":153,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[454]},{"teal":154,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[455,456]},{"teal":155,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[457]},{"teal":156,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:79","pc":[458]},{"teal":160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:80","pc":[459,460]},{"teal":161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:80","pc":[461]},{"teal":162,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:80","pc":[462]},{"teal":166,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:81","pc":[463,464]},{"teal":167,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:81","pc":[465]},{"teal":168,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:81","pc":[466]},{"teal":172,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:82","pc":[467]},{"teal":173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:82","pc":[468]},{"teal":174,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:82","pc":[469]},{"teal":178,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[470,471]},{"teal":179,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[472]},{"teal":180,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[473,474]},{"teal":181,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[475]},{"teal":182,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[476,477]},{"teal":183,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[478]},{"teal":184,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:83","pc":[479]},{"teal":188,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[480,481]},{"teal":189,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[482]},{"teal":190,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[483,484]},{"teal":191,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[485]},{"teal":192,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[486,487]},{"teal":193,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[488]},{"teal":194,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:84","pc":[489]},{"teal":198,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[490,491]},{"teal":199,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[492,493]},{"teal":200,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:85","pc":[494]},{"teal":204,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:86","pc":[495,496]},{"teal":205,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:86","pc":[497,498]},{"teal":206,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:86","pc":[499]},{"teal":210,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:87","pc":[500,501]},{"teal":211,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:87","pc":[502]},{"teal":212,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:87","pc":[503]},{"teal":216,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:88","pc":[504,505]},{"teal":217,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:88","pc":[506,507]},{"teal":218,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:88","pc":[508]},{"teal":226,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[509]},{"teal":227,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[510,511]},{"teal":228,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[512,513]},{"teal":232,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:91","pc":[514,515]},{"teal":233,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:91","pc":[516,517]},{"teal":237,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:92","pc":[518,519]},{"teal":238,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:92","pc":[520,521]},{"teal":242,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:93","pc":[522]},{"teal":243,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:93","pc":[523,524]},{"teal":246,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[525]},{"teal":247,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[526,527]},{"teal":250,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:90","pc":[528]},{"teal":258,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[529]},{"teal":259,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[530,531]},{"teal":260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[532,533]},{"teal":264,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[534,535]},{"teal":265,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[536]},{"teal":266,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:96","pc":[537,538]},{"teal":270,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[539,540]},{"teal":271,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:97","pc":[541,542]},{"teal":275,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:98","pc":[543]},{"teal":276,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:98","pc":[544,545]},{"teal":279,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[546]},{"teal":280,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[547,548]},{"teal":283,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:95","pc":[549]},{"teal":291,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[550]},{"teal":292,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[551,552]},{"teal":293,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[553,554]},{"teal":297,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:101","pc":[555,556]},{"teal":298,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:101","pc":[557,558]},{"teal":302,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:102","pc":[559,560]},{"teal":303,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:102","pc":[561,562]},{"teal":307,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:103","pc":[563]},{"teal":308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:103","pc":[564,565]},{"teal":311,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[566]},{"teal":312,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[567,568]},{"teal":315,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:100","pc":[569]},{"teal":316,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:73","pc":[570]},{"teal":321,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[571,572,573]},{"teal":322,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[574]},{"teal":323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[575]},{"teal":324,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[576,577]},{"teal":325,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[578]},{"teal":328,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","errorMessage":"argument 0 (adminAddress) for updateAdminAddress must be a address","pc":[579]},{"teal":331,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[580,581,582]},{"teal":332,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[583]},{"teal":333,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[584]},{"teal":337,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[585,586,587]},{"teal":341,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[588,589]},{"teal":342,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[590,591]},{"teal":343,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[592]},{"teal":344,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","pc":[593]},{"teal":347,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:109","errorMessage":"Only admin can update admin address","pc":[594]},{"teal":351,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:110","pc":[595,596]},{"teal":352,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:110","pc":[597,598]},{"teal":353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:110","pc":[599]},{"teal":354,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:108","pc":[600]},{"teal":359,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[601,602,603]},{"teal":360,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[604]},{"teal":361,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[605]},{"teal":365,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[606,607,608]},{"teal":369,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[609,610]},{"teal":370,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[611,612]},{"teal":371,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[613]},{"teal":372,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","pc":[614]},{"teal":375,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:114","errorMessage":"Only admin can set pool active","pc":[615]},{"teal":379,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[616,617]},{"teal":380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[618]},{"teal":381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[619,620]},{"teal":382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[621]},{"teal":383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[622,623]},{"teal":384,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[624]},{"teal":385,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:116","pc":[625]},{"teal":386,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:113","pc":[626]},{"teal":391,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[627,628,629]},{"teal":392,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[630]},{"teal":393,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[631]},{"teal":397,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[632,633,634]},{"teal":401,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[635,636]},{"teal":402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[637,638]},{"teal":403,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[639]},{"teal":404,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","pc":[640]},{"teal":407,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:120","errorMessage":"Only admin can set pool ending","pc":[641]},{"teal":411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[642,643]},{"teal":412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[644]},{"teal":413,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[645,646]},{"teal":414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[647]},{"teal":415,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[648,649]},{"teal":416,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[650]},{"teal":417,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:121","pc":[651]},{"teal":421,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[652,653]},{"teal":422,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[654]},{"teal":423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[655,656]},{"teal":424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[657]},{"teal":425,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[658,659]},{"teal":426,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[660]},{"teal":427,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:122","pc":[661]},{"teal":428,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:119","pc":[662]},{"teal":433,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[663,664,665]},{"teal":434,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[666]},{"teal":437,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[667,668,669]},{"teal":438,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[670]},{"teal":439,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[671]},{"teal":443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[672,673,674]},{"teal":447,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","pc":[675,676]},{"teal":448,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","pc":[677,678]},{"teal":449,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","pc":[679]},{"teal":450,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","pc":[680]},{"teal":453,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:128","errorMessage":"Only injector can update injected rewards","pc":[681]},{"teal":457,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:129","pc":[682,683]},{"teal":458,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:129","pc":[684,685]},{"teal":459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:129","pc":[686]},{"teal":460,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:127","pc":[687]},{"teal":465,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[688,689,690]},{"teal":466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[691]},{"teal":469,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[692,693,694]},{"teal":470,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[695]},{"teal":471,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[696]},{"teal":475,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[697,698,699]},{"teal":479,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[700,701]},{"teal":480,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[702,703]},{"teal":481,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[704]},{"teal":482,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","pc":[705]},{"teal":485,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:133","errorMessage":"Only injector can update paid rewards","pc":[706]},{"teal":489,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:134","pc":[707,708]},{"teal":490,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:134","pc":[709,710]},{"teal":491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:134","pc":[711]},{"teal":492,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:132","pc":[712]},{"teal":497,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[713,714,715]},{"teal":498,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[716]},{"teal":501,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[717,718,719]},{"teal":502,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[720]},{"teal":503,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[721]},{"teal":507,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[722,723,724]},{"teal":511,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","pc":[725,726]},{"teal":512,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","pc":[727,728]},{"teal":513,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","pc":[729]},{"teal":514,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","pc":[730]},{"teal":517,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:138","errorMessage":"Only injector can update injected rewards","pc":[731]},{"teal":521,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:139","pc":[732,733]},{"teal":522,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:139","pc":[734,735]},{"teal":523,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:139","pc":[736]},{"teal":524,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:137","pc":[737]},{"teal":529,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[738,739,740]},{"teal":530,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[741]},{"teal":531,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[742]},{"teal":532,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[743,744]},{"teal":533,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[745]},{"teal":536,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","errorMessage":"argument 0 (treasuryAddress) for updateTreasuryAddress must be a address","pc":[746]},{"teal":539,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[747,748,749]},{"teal":540,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[750]},{"teal":541,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[751]},{"teal":545,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[752,753,754]},{"teal":549,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[755,756]},{"teal":550,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[757,758]},{"teal":551,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[759]},{"teal":552,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","pc":[760]},{"teal":555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:143","errorMessage":"Only injector can update treasury address","pc":[761]},{"teal":559,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:144","pc":[762,763]},{"teal":560,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:144","pc":[764,765]},{"teal":561,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:144","pc":[766]},{"teal":562,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:142","pc":[767]},{"teal":567,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[768,769,770]},{"teal":568,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[771]},{"teal":569,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[772]},{"teal":570,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[773,774]},{"teal":571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[775]},{"teal":574,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","errorMessage":"argument 0 (injectorAddress) for updateInjectorAddress must be a address","pc":[776]},{"teal":577,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[777,778,779]},{"teal":578,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[780]},{"teal":579,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[781]},{"teal":583,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[782,783,784]},{"teal":587,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","pc":[785,786]},{"teal":588,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","pc":[787,788]},{"teal":589,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","pc":[789]},{"teal":590,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","pc":[790]},{"teal":593,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:148","errorMessage":"Only injector can update injector address","pc":[791]},{"teal":597,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:149","pc":[792,793]},{"teal":598,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:149","pc":[794,795]},{"teal":599,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:149","pc":[796]},{"teal":600,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:147","pc":[797]},{"teal":605,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[798,799,800]},{"teal":606,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[801]},{"teal":609,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[802,803,804]},{"teal":610,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[805]},{"teal":611,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[806]},{"teal":615,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[807,808,809]},{"teal":619,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[810,811]},{"teal":620,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[812,813]},{"teal":621,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[814]},{"teal":622,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","pc":[815]},{"teal":625,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:153","errorMessage":"Only injector can update num stakers","pc":[816]},{"teal":629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:154","pc":[817]},{"teal":630,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:154","pc":[818,819]},{"teal":631,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:154","pc":[820]},{"teal":632,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:152","pc":[821]},{"teal":637,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[822,823,824]},{"teal":638,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[825]},{"teal":639,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[826]},{"teal":640,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[827]},{"teal":641,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[828]},{"teal":644,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","errorMessage":"argument 0 (freeze) for updateFreeze must be a bool","pc":[829]},{"teal":645,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[830]},{"teal":646,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[831]},{"teal":649,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[832,833,834]},{"teal":650,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[835]},{"teal":651,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[836]},{"teal":655,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[837,838,839]},{"teal":659,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[840,841]},{"teal":660,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[842,843]},{"teal":661,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[844]},{"teal":662,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","pc":[845]},{"teal":665,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:158","errorMessage":"Only injector can update freeze","pc":[846]},{"teal":669,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[847,848]},{"teal":670,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[849,850]},{"teal":671,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[851,852]},{"teal":672,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[853]},{"teal":673,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[854,855]},{"teal":674,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[856]},{"teal":675,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:159","pc":[857]},{"teal":676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:157","pc":[858]},{"teal":681,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[859,860,861]},{"teal":682,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[862]},{"teal":683,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[863]},{"teal":684,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[864]},{"teal":685,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[865]},{"teal":688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","errorMessage":"argument 0 (poolEnding) for updatePoolEnding must be a bool","pc":[866]},{"teal":689,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[867]},{"teal":690,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[868]},{"teal":693,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[869,870,871]},{"teal":694,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[872]},{"teal":695,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[873]},{"teal":699,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[874,875,876]},{"teal":703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","pc":[877,878]},{"teal":704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","pc":[879,880]},{"teal":705,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","pc":[881]},{"teal":706,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","pc":[882]},{"teal":709,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:163","errorMessage":"Only admins can update pool ending","pc":[883]},{"teal":713,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[884,885]},{"teal":714,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[886,887]},{"teal":715,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[888,889]},{"teal":716,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[890]},{"teal":717,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[891,892]},{"teal":718,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[893]},{"teal":719,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:164","pc":[894]},{"teal":720,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:162","pc":[895]},{"teal":724,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:167","pc":[896,897,898]},{"teal":728,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[899,900,901]},{"teal":729,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[902,903]},{"teal":730,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[904,905,906]},{"teal":731,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[907]},{"teal":732,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:171","pc":[908]},{"teal":733,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:167","pc":[909]},{"teal":738,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[910,911,912,913,914,915]},{"teal":741,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[916,917,918]},{"teal":742,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[919]},{"teal":743,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[920]},{"teal":744,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[921]},{"teal":745,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[922]},{"teal":749,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[923,924,925]},{"teal":752,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[926]},{"teal":753,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[927]},{"teal":757,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:175","pc":[928,929]},{"teal":758,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:175","pc":[930,931]},{"teal":763,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[932,933]},{"teal":764,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[934]},{"teal":765,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[935]},{"teal":766,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[936]},{"teal":767,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:176","pc":[937,938,939]},{"teal":772,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[940,941]},{"teal":773,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[942,943]},{"teal":774,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[944]},{"teal":775,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:177","pc":[945,946]},{"teal":784,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:180","pc":[947,948]},{"teal":785,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:181","pc":[949,950]},{"teal":786,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:180","pc":[951]},{"teal":787,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[952,953]},{"teal":788,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[954,955,956]},{"teal":789,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:181","pc":[957]},{"teal":790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:183","pc":[958,959]},{"teal":791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:183","pc":[960,961,962]},{"teal":792,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:182","pc":[963]},{"teal":793,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:179","pc":[964,965]},{"teal":799,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:186","pc":[966,967]},{"teal":800,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:186","pc":[968]},{"teal":803,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[969,970]},{"teal":806,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[971,972]},{"teal":807,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:174","pc":[973]},{"teal":812,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[974,975]},{"teal":813,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[976]},{"teal":814,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[977]},{"teal":815,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[978]},{"teal":816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[979,980]},{"teal":817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[981]},{"teal":818,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[982]},{"teal":821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","errorMessage":"argument 0 (mbrPayment) for initStorage must be a pay transaction","pc":[983]},{"teal":824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[984,985,986]},{"teal":825,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[987]},{"teal":826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[988]},{"teal":830,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[989,990,991]},{"teal":833,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[992]},{"teal":834,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[993]},{"teal":838,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[994]},{"teal":839,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[995]},{"teal":840,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[996]},{"teal":841,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[997]},{"teal":842,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","pc":[998]},{"teal":845,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:191","errorMessage":"staking pool already initialized","pc":[999]},{"teal":849,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[1000,1001]},{"teal":850,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[1002,1003]},{"teal":851,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[1004]},{"teal":852,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","pc":[1005]},{"teal":855,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:192","errorMessage":"Only admin can init storage","pc":[1006]},{"teal":859,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:194","pc":[1007,1008]},{"teal":860,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:194","pc":[1009,1010]},{"teal":865,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1011,1012]},{"teal":866,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1013]},{"teal":867,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1014]},{"teal":868,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1015]},{"teal":869,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:195","pc":[1016,1017,1018]},{"teal":874,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:196","pc":[1019,1020]},{"teal":875,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:196","pc":[1021,1022]},{"teal":876,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:196","pc":[1023]},{"teal":877,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:196","pc":[1024,1025]},{"teal":886,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:199","pc":[1026,1027]},{"teal":887,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:200","pc":[1028,1029]},{"teal":888,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:199","pc":[1030]},{"teal":889,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:201","pc":[1031,1032]},{"teal":890,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:201","pc":[1033,1034,1035]},{"teal":891,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:200","pc":[1036]},{"teal":892,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[1037,1038]},{"teal":893,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:202","pc":[1039,1040,1041]},{"teal":894,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:201","pc":[1042]},{"teal":895,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:198","pc":[1043,1044]},{"teal":900,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1045,1046]},{"teal":901,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1047,1048]},{"teal":902,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1049,1050]},{"teal":903,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1051]},{"teal":906,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"receiver\",\"expected\":\"this.app.address\"}","pc":[1052]},{"teal":909,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1053,1054]},{"teal":910,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1055,1056]},{"teal":911,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1057,1058]},{"teal":912,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","pc":[1059]},{"teal":915,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:205","errorMessage":"transaction verification failed: {\"txn\":\"mbrPayment\",\"field\":\"amount\",\"expected\":\"poolMBR\"}","pc":[1060]},{"teal":919,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:206","pc":[1061]},{"teal":920,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:206","pc":[1062,1063,1064,1065]},{"teal":921,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:206","pc":[1066]},{"teal":922,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:206","pc":[1067]},{"teal":926,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083]},{"teal":927,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1084,1085]},{"teal":928,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:207","pc":[1086]},{"teal":933,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1087,1088]},{"teal":934,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1089]},{"teal":935,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1090]},{"teal":936,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1091]},{"teal":937,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:209","pc":[1092,1093,1094]},{"teal":947,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1095]},{"teal":948,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1096,1097]},{"teal":949,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1098,1099]},{"teal":953,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1100,1101]},{"teal":954,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1102]},{"teal":955,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:212","pc":[1103,1104]},{"teal":959,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:213","pc":[1105,1106]},{"teal":960,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:213","pc":[1107,1108]},{"teal":964,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1109]},{"teal":965,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:214","pc":[1110,1111]},{"teal":969,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:215","pc":[1112]},{"teal":970,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:215","pc":[1113,1114]},{"teal":973,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:211","pc":[1115]},{"teal":976,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:190","pc":[1116]},{"teal":981,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1117,1118,1119]},{"teal":982,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1120]},{"teal":985,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1121,1122,1123]},{"teal":986,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1124]},{"teal":989,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1125,1126]},{"teal":990,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1127]},{"teal":991,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1128]},{"teal":992,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1129]},{"teal":993,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1130,1131]},{"teal":994,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1132,1133]},{"teal":995,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1134]},{"teal":998,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","errorMessage":"argument 2 (rewardTxn) for injectRewards must be a axfer transaction","pc":[1135]},{"teal":1001,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1136,1137,1138]},{"teal":1002,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1139]},{"teal":1003,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1140]},{"teal":1007,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1141,1142,1143]},{"teal":1010,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1144]},{"teal":1019,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:225","pc":[1145,1146]},{"teal":1020,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:226","pc":[1147,1148]},{"teal":1021,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:226","pc":[1149,1150]},{"teal":1022,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:226","pc":[1151]},{"teal":1025,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:226","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1152]},{"teal":1028,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:225","pc":[1153,1154]},{"teal":1029,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1155,1156]},{"teal":1030,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1157,1158]},{"teal":1031,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1159]},{"teal":1032,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","pc":[1160]},{"teal":1035,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:227","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.rewardAssetId.value)\"}","pc":[1161]},{"teal":1038,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:225","pc":[1162,1163]},{"teal":1039,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:228","pc":[1164,1165]},{"teal":1040,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:228","pc":[1166,1167]},{"teal":1041,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:228","pc":[1168]},{"teal":1044,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:228","errorMessage":"transaction verification failed: {\"txn\":\"rewardTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[1169]},{"teal":1048,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1170,1171]},{"teal":1049,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1172,1173]},{"teal":1050,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1174]},{"teal":1051,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1175]},{"teal":1052,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1176]},{"teal":1053,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1177,1178]},{"teal":1054,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1179]},{"teal":1055,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1180]},{"teal":1056,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1181]},{"teal":1057,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1182]},{"teal":1058,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1183]},{"teal":1061,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","errorMessage":"wideRatio failed","pc":[1184]},{"teal":1062,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:232","pc":[1185,1186]},{"teal":1066,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1187,1188]},{"teal":1067,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1189]},{"teal":1068,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1190]},{"teal":1069,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1191,1192]},{"teal":1070,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1193]},{"teal":1071,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1194,1195]},{"teal":1072,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1196]},{"teal":1073,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:234","pc":[1197]},{"teal":1077,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:235","pc":[1198,1199]},{"teal":1078,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:235","pc":[1200,1201]},{"teal":1079,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:235","pc":[1202]},{"teal":1083,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:236","pc":[1203,1204]},{"teal":1084,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:236","pc":[1205,1206,1207]},{"teal":1088,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:237","pc":[1208,1209,1210]},{"teal":1089,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:224","pc":[1211]},{"teal":1093,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:240","pc":[1212,1213,1214]},{"teal":1103,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:241","pc":[1215]},{"teal":1104,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:241","pc":[1216,1217]},{"teal":1105,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:241","pc":[1218,1219]},{"teal":1109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:242","pc":[1220,1221]},{"teal":1110,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:242","pc":[1222,1223]},{"teal":1114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:243","pc":[1224,1225]},{"teal":1115,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:243","pc":[1226]},{"teal":1116,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:243","pc":[1227,1228]},{"teal":1120,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:244","pc":[1229,1230]},{"teal":1121,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:244","pc":[1231]},{"teal":1122,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:244","pc":[1232,1233]},{"teal":1126,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:245","pc":[1234,1235]},{"teal":1127,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:245","pc":[1236,1237]},{"teal":1131,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1238]},{"teal":1132,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:246","pc":[1239,1240]},{"teal":1135,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:241","pc":[1241]},{"teal":1139,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1242,1243]},{"teal":1140,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1244]},{"teal":1141,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1245]},{"teal":1142,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1246,1247]},{"teal":1143,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1248]},{"teal":1144,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:248","pc":[1249]},{"teal":1145,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:240","pc":[1250]},{"teal":1149,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1251,1252,1253]},{"teal":1152,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1254]},{"teal":1153,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1255,1256]},{"teal":1157,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1257,1258]},{"teal":1158,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1259,1260]},{"teal":1159,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1261]},{"teal":1160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1262,1263]},{"teal":1161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1264]},{"teal":1162,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:252","pc":[1265,1266]},{"teal":1166,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:253","pc":[1267]},{"teal":1167,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:253","pc":[1268,1269]},{"teal":1172,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1270,1271]},{"teal":1173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1272]},{"teal":1174,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1273,1274]},{"teal":1175,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1275]},{"teal":1176,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1276]},{"teal":1177,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:254","pc":[1277,1278,1279]},{"teal":1182,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:255","pc":[1280,1281]},{"teal":1183,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:255","pc":[1282]},{"teal":1184,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:255","pc":[1283,1284]},{"teal":1190,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1285,1286]},{"teal":1191,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1287,1288]},{"teal":1192,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1289]},{"teal":1193,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1290,1291]},{"teal":1194,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1292]},{"teal":1195,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1293]},{"teal":1196,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1294,1295]},{"teal":1197,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1296]},{"teal":1198,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1297]},{"teal":1199,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:258","pc":[1298,1299,1300]},{"teal":1204,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1301,1302]},{"teal":1205,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1303,1304]},{"teal":1206,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1305]},{"teal":1207,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1306]},{"teal":1208,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1307,1308]},{"teal":1209,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1309]},{"teal":1210,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1310,1311]},{"teal":1211,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1312]},{"teal":1212,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1313]},{"teal":1213,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:259","pc":[1314,1315]},{"teal":1217,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1316,1317]},{"teal":1218,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1318,1319]},{"teal":1219,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1320]},{"teal":1220,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1321]},{"teal":1221,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1322]},{"teal":1222,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1323,1324]},{"teal":1223,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1325]},{"teal":1224,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1326]},{"teal":1225,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1327]},{"teal":1226,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1328]},{"teal":1227,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1329]},{"teal":1230,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","errorMessage":"wideRatio failed","pc":[1330]},{"teal":1231,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:261","pc":[1331,1332]},{"teal":1236,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1333,1334]},{"teal":1237,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1335]},{"teal":1238,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1336]},{"teal":1239,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1337]},{"teal":1240,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:263","pc":[1338,1339,1340]},{"teal":1245,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1341,1342]},{"teal":1246,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1343]},{"teal":1247,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1344]},{"teal":1248,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1345,1346]},{"teal":1249,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1347]},{"teal":1250,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1348,1349]},{"teal":1251,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1350]},{"teal":1252,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:264","pc":[1351]},{"teal":1256,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:265","pc":[1352,1353]},{"teal":1257,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:265","pc":[1354,1355,1356]},{"teal":1262,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:251","pc":[1357]},{"teal":1267,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1358,1359,1360]},{"teal":1268,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1361]},{"teal":1271,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1362,1363]},{"teal":1272,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1364]},{"teal":1273,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1365]},{"teal":1274,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1366]},{"teal":1275,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1367,1368]},{"teal":1276,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1369,1370]},{"teal":1277,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1371]},{"teal":1280,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","errorMessage":"argument 1 (xUSDTxn) for injectxUSD must be a axfer transaction","pc":[1372]},{"teal":1283,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1373,1374,1375]},{"teal":1284,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1376]},{"teal":1285,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1377]},{"teal":1289,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1378,1379,1380]},{"teal":1298,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:271","pc":[1381,1382]},{"teal":1299,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:272","pc":[1383,1384]},{"teal":1300,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:272","pc":[1385,1386]},{"teal":1301,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:272","pc":[1387]},{"teal":1304,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:272","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1388]},{"teal":1307,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:271","pc":[1389,1390]},{"teal":1308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:273","pc":[1391,1392]},{"teal":1309,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:273","pc":[1393,1394]},{"teal":1310,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:273","pc":[1395]},{"teal":1311,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:273","pc":[1396]},{"teal":1314,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:273","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.xUSDAssetId.value)\"}","pc":[1397]},{"teal":1317,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:271","pc":[1398,1399]},{"teal":1318,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:274","pc":[1400,1401]},{"teal":1319,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:274","pc":[1402,1403]},{"teal":1320,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:274","pc":[1404]},{"teal":1323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:274","errorMessage":"transaction verification failed: {\"txn\":\"xUSDTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[1405]},{"teal":1327,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:276","pc":[1406,1407]},{"teal":1328,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:276","pc":[1408]},{"teal":1329,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:276","pc":[1409]},{"teal":1330,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:276","pc":[1410,1411]},{"teal":1331,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:276","pc":[1412]},{"teal":1332,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:276","pc":[1413]},{"teal":1336,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:277","pc":[1414,1415]},{"teal":1337,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:277","pc":[1416,1417]},{"teal":1338,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:277","pc":[1418]},{"teal":1343,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1419,1420]},{"teal":1344,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1421]},{"teal":1345,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1422]},{"teal":1346,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:278","pc":[1423,1424,1425]},{"teal":1351,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1426]},{"teal":1352,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1427]},{"teal":1353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1428,1429]},{"teal":1354,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1430]},{"teal":1355,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1431,1432]},{"teal":1356,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1433]},{"teal":1357,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1434]},{"teal":1358,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1435,1436]},{"teal":1359,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1437,1438]},{"teal":1360,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1439,1440]},{"teal":1361,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1441,1442]},{"teal":1362,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:279","pc":[1443]},{"teal":1367,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:281","pc":[1444,1445,1446]},{"teal":1372,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1447,1448]},{"teal":1373,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1449]},{"teal":1374,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1450]},{"teal":1375,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:282","pc":[1451,1452,1453]},{"teal":1380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1454]},{"teal":1381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1455]},{"teal":1382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1456,1457]},{"teal":1383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1458]},{"teal":1384,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1459,1460]},{"teal":1385,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1461]},{"teal":1386,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1462]},{"teal":1387,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1463,1464]},{"teal":1388,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1465,1466]},{"teal":1389,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1467,1468]},{"teal":1390,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1469,1470]},{"teal":1391,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:283","pc":[1471]},{"teal":1396,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:285","pc":[1472,1473,1474]},{"teal":1397,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:270","pc":[1475]},{"teal":1402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1476,1477,1478]},{"teal":1403,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1479]},{"teal":1404,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1480]},{"teal":1408,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1481,1482,1483]},{"teal":1411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1484]},{"teal":1412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1485]},{"teal":1416,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","pc":[1486,1487]},{"teal":1417,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","pc":[1488,1489]},{"teal":1418,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","pc":[1490]},{"teal":1419,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","pc":[1491]},{"teal":1422,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:289","errorMessage":"Only admin can delete application","pc":[1492]},{"teal":1426,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:290","pc":[1493,1494]},{"teal":1427,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:290","pc":[1495]},{"teal":1428,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:290","pc":[1496]},{"teal":1429,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:290","pc":[1497]},{"teal":1432,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:290","errorMessage":"Staked assets still exist","pc":[1498]},{"teal":1436,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1499]},{"teal":1437,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:292","pc":[1500]},{"teal":1441,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1501,1502]},{"teal":1442,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1503,1504]},{"teal":1443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1505]},{"teal":1444,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1506,1507]},{"teal":1445,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1508]},{"teal":1446,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:293","pc":[1509,1510]},{"teal":1451,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1511,1512]},{"teal":1452,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1513]},{"teal":1453,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1514]},{"teal":1454,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:294","pc":[1515,1516,1517]},{"teal":1465,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:295","pc":[1518]},{"teal":1466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:295","pc":[1519,1520]},{"teal":1467,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:295","pc":[1521,1522]},{"teal":1471,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1523,1524]},{"teal":1472,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1525]},{"teal":1473,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:296","pc":[1526,1527]},{"teal":1477,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:297","pc":[1528,1529]},{"teal":1478,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:297","pc":[1530]},{"teal":1479,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:297","pc":[1531,1532]},{"teal":1483,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:298","pc":[1533,1534]},{"teal":1484,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:298","pc":[1535,1536]},{"teal":1488,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:299","pc":[1537,1538]},{"teal":1489,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:299","pc":[1539]},{"teal":1490,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:299","pc":[1540,1541]},{"teal":1494,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1542]},{"teal":1495,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:300","pc":[1543,1544]},{"teal":1498,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:295","pc":[1545]},{"teal":1503,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1546,1547]},{"teal":1504,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1548,1549]},{"teal":1505,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1550]},{"teal":1506,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1551,1552]},{"teal":1507,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1553,1554]},{"teal":1508,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1555]},{"teal":1509,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1556]},{"teal":1510,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1557,1558]},{"teal":1511,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1559]},{"teal":1512,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:303","pc":[1560,1561]},{"teal":1521,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:305","pc":[1562]},{"teal":1522,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:305","pc":[1563]},{"teal":1523,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:305","pc":[1564,1565]},{"teal":1527,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:306","pc":[1566,1567]},{"teal":1528,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:306","pc":[1568,1569]},{"teal":1532,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1570,1571]},{"teal":1533,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1572]},{"teal":1534,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:307","pc":[1573,1574]},{"teal":1538,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:308","pc":[1575,1576]},{"teal":1539,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:308","pc":[1577,1578]},{"teal":1543,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:309","pc":[1579]},{"teal":1544,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:309","pc":[1580,1581]},{"teal":1547,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:305","pc":[1582]},{"teal":1548,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:288","pc":[1583]},{"teal":1553,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1584,1585,1586]},{"teal":1554,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1587]},{"teal":1557,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1588,1589]},{"teal":1558,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1590]},{"teal":1559,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1591]},{"teal":1560,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1592]},{"teal":1561,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1593,1594]},{"teal":1562,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1595,1596]},{"teal":1563,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1597]},{"teal":1566,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","errorMessage":"argument 1 (stakeTxn) for stake must be a axfer transaction","pc":[1598]},{"teal":1569,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1599,1600,1601]},{"teal":1570,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1602]},{"teal":1571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1603]},{"teal":1575,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1604,1605,1606]},{"teal":1578,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1607]},{"teal":1579,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[1608,1609]},{"teal":1583,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","pc":[1610,1611]},{"teal":1584,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","pc":[1612]},{"teal":1585,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","pc":[1613]},{"teal":1588,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:314","errorMessage":"Invalid quantity","pc":[1614]},{"teal":1592,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1615,1616]},{"teal":1593,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1617]},{"teal":1594,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1618]},{"teal":1595,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","pc":[1619]},{"teal":1598,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:315","errorMessage":"Pool not active","pc":[1620]},{"teal":1602,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:316","pc":[1621,1622]},{"teal":1603,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:316","pc":[1623]},{"teal":1604,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:316","pc":[1624]},{"teal":1605,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:316","pc":[1625]},{"teal":1606,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:316","pc":[1626]},{"teal":1609,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:316","errorMessage":"Pool ending","pc":[1627]},{"teal":1613,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:318","pc":[1628,1629,1630]},{"teal":1618,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:319","pc":[1631,1632]},{"teal":1619,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:319","pc":[1633]},{"teal":1620,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:319","pc":[1634]},{"teal":1621,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:319","pc":[1635,1636,1637]},{"teal":1626,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1638]},{"teal":1627,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1639]},{"teal":1628,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1640,1641]},{"teal":1629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1642]},{"teal":1630,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1643,1644]},{"teal":1631,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1645]},{"teal":1632,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1646]},{"teal":1633,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1647,1648]},{"teal":1634,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1649,1650]},{"teal":1635,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1651,1652]},{"teal":1636,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1653,1654]},{"teal":1637,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:320","pc":[1655]},{"teal":1642,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:322","pc":[1656,1657,1658]},{"teal":1647,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:324","pc":[1659,1660]},{"teal":1648,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:324","pc":[1661]},{"teal":1649,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:324","pc":[1662]},{"teal":1650,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:324","pc":[1663,1664,1665]},{"teal":1655,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1666]},{"teal":1656,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1667]},{"teal":1657,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1668,1669]},{"teal":1658,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1670]},{"teal":1659,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1671,1672]},{"teal":1660,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1673]},{"teal":1661,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1674]},{"teal":1662,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1675,1676]},{"teal":1663,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1677,1678]},{"teal":1664,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1679,1680]},{"teal":1665,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1681,1682]},{"teal":1666,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:325","pc":[1683]},{"teal":1677,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1684,1685]},{"teal":1678,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","pc":[1686,1687]},{"teal":1679,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","pc":[1688,1689]},{"teal":1680,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","pc":[1690]},{"teal":1683,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:328","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"sender\",\"expected\":\"this.txn.sender\"}","pc":[1691]},{"teal":1686,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1692,1693]},{"teal":1687,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","pc":[1694,1695]},{"teal":1688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","pc":[1696,1697]},{"teal":1689,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","pc":[1698]},{"teal":1692,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:329","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetReceiver\",\"expected\":\"this.app.address\"}","pc":[1699]},{"teal":1695,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1700,1701]},{"teal":1696,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:330","pc":[1702,1703]},{"teal":1697,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:330","pc":[1704,1705]},{"teal":1698,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:330","pc":[1706]},{"teal":1699,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:330","pc":[1707]},{"teal":1702,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:330","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"xferAsset\",\"expected\":\"AssetID.fromUint64(this.stakedAssetId.value)\"}","pc":[1708]},{"teal":1705,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:327","pc":[1709,1710]},{"teal":1706,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:331","pc":[1711,1712]},{"teal":1707,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:331","pc":[1713,1714]},{"teal":1708,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:331","pc":[1715]},{"teal":1711,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:331","errorMessage":"transaction verification failed: {\"txn\":\"stakeTxn\",\"field\":\"assetAmount\",\"expected\":\"quantity\"}","pc":[1716]},{"teal":1715,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1717]},{"teal":1716,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:333","pc":[1718,1719]},{"teal":1721,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:334","pc":[1720,1721]},{"teal":1722,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:334","pc":[1722]},{"teal":1723,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:334","pc":[1723]},{"teal":1724,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:334","pc":[1724,1725,1726]},{"teal":1729,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1727]},{"teal":1730,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1728]},{"teal":1731,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1729,1730]},{"teal":1732,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1731]},{"teal":1733,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1732,1733]},{"teal":1734,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1734]},{"teal":1735,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1735]},{"teal":1736,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1736,1737]},{"teal":1737,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1738,1739]},{"teal":1738,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1740,1741]},{"teal":1739,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1742,1743]},{"teal":1740,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:335","pc":[1744]},{"teal":1745,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[1745]},{"teal":1746,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[1746,1747]},{"teal":1751,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[1748,1749]},{"teal":1752,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[1750,1751,1752]},{"teal":1753,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[1753]},{"teal":1754,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[1754,1755,1756]},{"teal":1759,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1757,1758]},{"teal":1760,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1759,1760,1761]},{"teal":1763,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:338","pc":[1762,1763,1764]},{"teal":1769,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1765,1766]},{"teal":1770,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1767,1768]},{"teal":1771,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1769]},{"teal":1772,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1770]},{"teal":1773,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1771]},{"teal":1774,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1772,1773]},{"teal":1775,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1774]},{"teal":1776,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1775,1776]},{"teal":1777,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1777]},{"teal":1778,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1778,1779]},{"teal":1779,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1780]},{"teal":1780,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1781,1782,1783]},{"teal":1786,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:343","pc":[1784,1785]},{"teal":1787,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:343","pc":[1786]},{"teal":1788,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:343","pc":[1787]},{"teal":1789,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:343","pc":[1788,1789,1790]},{"teal":1794,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1791]},{"teal":1795,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1792]},{"teal":1796,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1793,1794]},{"teal":1797,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1795]},{"teal":1798,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1796,1797]},{"teal":1799,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1798]},{"teal":1800,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1799]},{"teal":1801,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1800,1801]},{"teal":1802,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1802,1803]},{"teal":1803,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1804,1805]},{"teal":1804,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1806,1807]},{"teal":1805,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:344","pc":[1808]},{"teal":1810,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1809,1810]},{"teal":1811,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1811,1812]},{"teal":1812,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1813]},{"teal":1813,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1814,1815]},{"teal":1814,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1816]},{"teal":1815,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1817,1818]},{"teal":1816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1819]},{"teal":1817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:347","pc":[1820,1821]},{"teal":1821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1822,1823]},{"teal":1822,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1824,1825]},{"teal":1823,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1826,1827]},{"teal":1824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1828,1829,1830]},{"teal":1825,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1831]},{"teal":1826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1832,1833]},{"teal":1827,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1834,1835]},{"teal":1828,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1836]},{"teal":1829,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1837]},{"teal":1830,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1838]},{"teal":1831,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:348","pc":[1839,1840]},{"teal":1836,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:350","pc":[1841,1842]},{"teal":1837,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:350","pc":[1843]},{"teal":1838,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:350","pc":[1844]},{"teal":1839,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:350","pc":[1845,1846,1847]},{"teal":1844,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1848]},{"teal":1845,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1849]},{"teal":1846,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1850,1851]},{"teal":1847,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1852]},{"teal":1848,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1853,1854]},{"teal":1849,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1855]},{"teal":1850,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1856]},{"teal":1851,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1857,1858]},{"teal":1852,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1859,1860]},{"teal":1853,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1861,1862]},{"teal":1854,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1863,1864]},{"teal":1855,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:351","pc":[1865]},{"teal":1861,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:353","pc":[1866,1867]},{"teal":1862,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:353","pc":[1868]},{"teal":1863,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:353","pc":[1869]},{"teal":1864,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:353","pc":[1870,1871,1872]},{"teal":1869,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1873]},{"teal":1870,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1874]},{"teal":1871,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1875,1876]},{"teal":1872,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1877]},{"teal":1873,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1878,1879]},{"teal":1874,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1880]},{"teal":1875,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1881]},{"teal":1876,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1882,1883]},{"teal":1877,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1884,1885]},{"teal":1878,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1886,1887]},{"teal":1879,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1888,1889]},{"teal":1880,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:354","pc":[1890]},{"teal":1885,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1891,1892]},{"teal":1886,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1893,1894]},{"teal":1887,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1895]},{"teal":1888,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1896,1897]},{"teal":1889,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1898]},{"teal":1890,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1899,1900]},{"teal":1891,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:356","pc":[1901]},{"teal":1896,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:357","pc":[1902,1903]},{"teal":1897,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:357","pc":[1904]},{"teal":1898,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:357","pc":[1905]},{"teal":1899,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:357","pc":[1906,1907,1908]},{"teal":1904,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1909]},{"teal":1905,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1910]},{"teal":1906,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1911,1912]},{"teal":1907,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1913]},{"teal":1908,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1914,1915]},{"teal":1909,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1916]},{"teal":1910,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1917]},{"teal":1911,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1918,1919]},{"teal":1912,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1920,1921]},{"teal":1913,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1922,1923]},{"teal":1914,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1924,1925]},{"teal":1915,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:358","pc":[1926]},{"teal":1920,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1927,1928]},{"teal":1921,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1929]},{"teal":1922,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1930,1931]},{"teal":1923,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1932,1933]},{"teal":1924,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1934]},{"teal":1925,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1935,1936]},{"teal":1926,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1937]},{"teal":1927,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:360","pc":[1938]},{"teal":1931,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:361","pc":[1939]},{"teal":1932,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:361","pc":[1940,1941]},{"teal":1933,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:340","pc":[1942,1943,1944]},{"teal":1938,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1945,1946]},{"teal":1939,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1947,1948]},{"teal":1940,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1949]},{"teal":1941,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1950]},{"teal":1942,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1951]},{"teal":1943,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1952,1953]},{"teal":1944,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1954]},{"teal":1945,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1955,1956]},{"teal":1946,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1957]},{"teal":1947,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1958,1959]},{"teal":1948,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1960]},{"teal":1949,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:362","pc":[1961,1962,1963]},{"teal":1955,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1964,1965]},{"teal":1956,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1966]},{"teal":1957,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1967]},{"teal":1958,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:363","pc":[1968,1969,1970]},{"teal":1963,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1971]},{"teal":1964,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1972]},{"teal":1965,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1973,1974]},{"teal":1966,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1975]},{"teal":1967,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1976,1977]},{"teal":1968,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1978]},{"teal":1969,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1979]},{"teal":1970,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1980,1981]},{"teal":1971,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1982,1983]},{"teal":1972,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1984,1985]},{"teal":1973,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1986,1987]},{"teal":1974,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:364","pc":[1988]},{"teal":1979,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1989,1990]},{"teal":1980,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1991]},{"teal":1981,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1992]},{"teal":1982,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1993,1994]},{"teal":1983,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1995,1996]},{"teal":1984,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1997]},{"teal":1985,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:366","pc":[1998]},{"teal":1990,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[1999,2000]},{"teal":1991,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[2001]},{"teal":1992,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[2002]},{"teal":1993,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:367","pc":[2003,2004,2005]},{"teal":1998,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2006]},{"teal":1999,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2007]},{"teal":2000,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2008,2009]},{"teal":2001,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2010]},{"teal":2002,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2011,2012]},{"teal":2003,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2013]},{"teal":2004,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2014]},{"teal":2005,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2015,2016]},{"teal":2006,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2017,2018]},{"teal":2007,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2019,2020]},{"teal":2008,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2021,2022]},{"teal":2009,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:368","pc":[2023]},{"teal":2019,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2024,2025]},{"teal":2020,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2026,2027]},{"teal":2021,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2028]},{"teal":2022,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:371","pc":[2029,2030]},{"teal":2023,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:372","pc":[2031,2032]},{"teal":2024,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:372","pc":[2033,2034]},{"teal":2025,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:372","pc":[2035]},{"teal":2026,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:372","pc":[2036]},{"teal":2027,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:373","pc":[2037,2038]},{"teal":2028,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:373","pc":[2039]},{"teal":2029,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[2040,2041]},{"teal":2030,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:374","pc":[2042]},{"teal":2031,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2043]},{"teal":2032,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2044,2045]},{"teal":2033,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:370","pc":[2046]},{"teal":2038,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:376","pc":[2047,2048]},{"teal":2039,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:376","pc":[2049]},{"teal":2040,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:376","pc":[2050]},{"teal":2041,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:376","pc":[2051,2052,2053]},{"teal":2046,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2054]},{"teal":2047,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2055]},{"teal":2048,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2056,2057]},{"teal":2049,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2058]},{"teal":2050,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2059,2060]},{"teal":2051,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2061]},{"teal":2052,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2062]},{"teal":2053,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2063,2064]},{"teal":2054,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2065,2066]},{"teal":2055,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2067,2068]},{"teal":2056,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2069,2070]},{"teal":2057,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:377","pc":[2071]},{"teal":2062,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2072]},{"teal":2063,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2073]},{"teal":2064,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2074]},{"teal":2065,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2075]},{"teal":2066,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2076]},{"teal":2067,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:379","pc":[2077]},{"teal":2072,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:380","pc":[2078,2079]},{"teal":2073,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:380","pc":[2080]},{"teal":2074,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:380","pc":[2081]},{"teal":2075,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:380","pc":[2082,2083,2084]},{"teal":2080,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2085]},{"teal":2081,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2086]},{"teal":2082,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2087,2088]},{"teal":2083,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2089]},{"teal":2084,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2090,2091]},{"teal":2085,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2092]},{"teal":2086,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2093]},{"teal":2087,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2094,2095]},{"teal":2088,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2096,2097]},{"teal":2089,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2098,2099]},{"teal":2090,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2100,2101]},{"teal":2091,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:381","pc":[2102]},{"teal":2096,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2103]},{"teal":2097,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:383","pc":[2104,2105]},{"teal":2103,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:386","pc":[2106,2107]},{"teal":2104,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:386","pc":[2108]},{"teal":2105,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:386","pc":[2109]},{"teal":2106,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:386","pc":[2110,2111,2112]},{"teal":2111,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2113]},{"teal":2112,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2114]},{"teal":2113,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2115,2116]},{"teal":2114,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2117]},{"teal":2115,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2118,2119]},{"teal":2116,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2120]},{"teal":2117,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2121]},{"teal":2118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2122,2123]},{"teal":2119,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2124,2125]},{"teal":2120,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2126,2127]},{"teal":2121,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2128,2129]},{"teal":2122,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:387","pc":[2130]},{"teal":2129,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[2131,2132]},{"teal":2130,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[2133]},{"teal":2131,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[2134]},{"teal":2132,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[2135,2136]},{"teal":2133,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:337","pc":[2137,2138,2139]},{"teal":2136,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:313","pc":[2140]},{"teal":2141,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2141,2142,2143]},{"teal":2142,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2144]},{"teal":2143,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2145]},{"teal":2147,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2146,2147,2148]},{"teal":2150,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2149]},{"teal":2151,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2150,2151]},{"teal":2156,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2152,2153]},{"teal":2157,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2154]},{"teal":2158,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2155]},{"teal":2159,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2156]},{"teal":2160,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2157]},{"teal":2161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2158]},{"teal":2162,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2159,2160,2161]},{"teal":2163,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2162,2163]},{"teal":2164,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2164]},{"teal":2165,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2165]},{"teal":2166,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2166]},{"teal":2167,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2167]},{"teal":2168,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2168]},{"teal":2171,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2169]},{"teal":2172,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2170,2171,2172]},{"teal":2173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2173,2174]},{"teal":2174,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2175]},{"teal":2175,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2176]},{"teal":2176,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2177]},{"teal":2177,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2178]},{"teal":2180,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:393","pc":[2179,2180,2181]},{"teal":2185,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:394","pc":[2182,2183]},{"teal":2186,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:394","pc":[2184]},{"teal":2187,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:394","pc":[2185,2186]},{"teal":2191,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2187,2188]},{"teal":2192,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2189]},{"teal":2193,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:395","pc":[2190,2191]},{"teal":2198,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:397","pc":[2192,2193]},{"teal":2199,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:397","pc":[2194]},{"teal":2200,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:397","pc":[2195]},{"teal":2201,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:397","pc":[2196,2197,2198]},{"teal":2206,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2199]},{"teal":2207,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2200]},{"teal":2208,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2201,2202]},{"teal":2209,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2203]},{"teal":2210,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2204,2205]},{"teal":2211,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2206]},{"teal":2212,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2207]},{"teal":2213,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2208,2209]},{"teal":2214,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2210,2211]},{"teal":2215,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2212,2213]},{"teal":2216,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2214,2215]},{"teal":2217,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:398","pc":[2216]},{"teal":2222,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2217]},{"teal":2223,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2218,2219]},{"teal":2228,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2220,2221]},{"teal":2229,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2222]},{"teal":2230,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2223]},{"teal":2231,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2224]},{"teal":2232,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2225,2226,2227]},{"teal":2237,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2228,2229]},{"teal":2238,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2230]},{"teal":2239,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2231]},{"teal":2240,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:402","pc":[2232,2233,2234]},{"teal":2245,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2235]},{"teal":2246,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2236]},{"teal":2247,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2237,2238]},{"teal":2248,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2239]},{"teal":2249,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2240,2241]},{"teal":2250,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2242]},{"teal":2251,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2243]},{"teal":2252,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2244,2245]},{"teal":2253,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2246,2247]},{"teal":2254,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2248,2249]},{"teal":2255,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2250,2251]},{"teal":2256,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:403","pc":[2252]},{"teal":2261,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2253,2254]},{"teal":2262,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2255,2256]},{"teal":2263,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2257]},{"teal":2264,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2258,2259]},{"teal":2265,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2260]},{"teal":2266,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2261,2262]},{"teal":2267,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2263]},{"teal":2268,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2264,2265]},{"teal":2269,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2266]},{"teal":2270,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2267]},{"teal":2271,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:405","pc":[2268,2269]},{"teal":2276,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:407","pc":[2270,2271]},{"teal":2277,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:407","pc":[2272]},{"teal":2278,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:407","pc":[2273]},{"teal":2279,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:407","pc":[2274,2275,2276]},{"teal":2284,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2277,2278]},{"teal":2285,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2279,2280]},{"teal":2286,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2281]},{"teal":2287,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2282,2283]},{"teal":2288,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2284]},{"teal":2289,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2285,2286]},{"teal":2290,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2287]},{"teal":2291,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:408","pc":[2288,2289]},{"teal":2295,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2290,2291]},{"teal":2296,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2292,2293]},{"teal":2297,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2294]},{"teal":2298,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2295]},{"teal":2299,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2296,2297]},{"teal":2300,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2298]},{"teal":2301,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2299]},{"teal":2302,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2300]},{"teal":2303,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2301]},{"teal":2304,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2302]},{"teal":2305,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2303]},{"teal":2308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","errorMessage":"wideRatio failed","pc":[2304]},{"teal":2309,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:410","pc":[2305,2306]},{"teal":2314,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:412","pc":[2307,2308]},{"teal":2315,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:412","pc":[2309]},{"teal":2316,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:412","pc":[2310]},{"teal":2317,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:412","pc":[2311,2312,2313]},{"teal":2322,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2314]},{"teal":2323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2315]},{"teal":2324,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2316,2317]},{"teal":2325,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2318]},{"teal":2326,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2319,2320]},{"teal":2327,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2321]},{"teal":2328,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2322]},{"teal":2329,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2323,2324]},{"teal":2330,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2325,2326]},{"teal":2331,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2327,2328]},{"teal":2332,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2329,2330]},{"teal":2333,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:413","pc":[2331]},{"teal":2339,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2332,2333]},{"teal":2340,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2334]},{"teal":2341,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2335]},{"teal":2342,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2336]},{"teal":2343,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:416","pc":[2337,2338,2339]},{"teal":2348,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2340,2341]},{"teal":2349,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2342,2343]},{"teal":2350,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2344]},{"teal":2351,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2345]},{"teal":2352,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2346,2347]},{"teal":2353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2348]},{"teal":2354,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2349]},{"teal":2355,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2350]},{"teal":2356,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2351]},{"teal":2357,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2352]},{"teal":2360,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","errorMessage":"wideRatio failed","pc":[2353]},{"teal":2361,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:417","pc":[2354,2355]},{"teal":2366,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:418","pc":[2356,2357]},{"teal":2367,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:418","pc":[2358]},{"teal":2368,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:418","pc":[2359]},{"teal":2369,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:418","pc":[2360,2361,2362]},{"teal":2374,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:419","pc":[2363]},{"teal":2375,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:419","pc":[2364,2365]},{"teal":2380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2366,2367]},{"teal":2381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2368]},{"teal":2382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2369]},{"teal":2383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2370,2371]},{"teal":2384,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2372]},{"teal":2385,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:422","pc":[2373]},{"teal":2389,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:423","pc":[2374,2375]},{"teal":2390,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:423","pc":[2376]},{"teal":2391,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:423","pc":[2377]},{"teal":2392,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:423","pc":[2378,2379]},{"teal":2393,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:423","pc":[2380]},{"teal":2394,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:423","pc":[2381]},{"teal":2399,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:424","pc":[2382,2383]},{"teal":2400,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:424","pc":[2384]},{"teal":2401,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:424","pc":[2385,2386]},{"teal":2402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:424","pc":[2387]},{"teal":2403,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:424","pc":[2388]},{"teal":2404,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:424","pc":[2389,2390,2391]},{"teal":2409,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2392,2393]},{"teal":2410,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2394,2395]},{"teal":2411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2396,2397]},{"teal":2412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2398,2399,2400]},{"teal":2413,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2401]},{"teal":2414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2402,2403]},{"teal":2415,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2404]},{"teal":2416,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2405]},{"teal":2417,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2406]},{"teal":2418,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:427","pc":[2407,2408]},{"teal":2422,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2409,2410]},{"teal":2423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2411]},{"teal":2424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2412]},{"teal":2425,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2413,2414]},{"teal":2426,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2415]},{"teal":2427,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:428","pc":[2416]},{"teal":2428,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:424","pc":[2417,2418,2419]},{"teal":2433,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2420,2421]},{"teal":2434,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2422,2423]},{"teal":2435,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2424,2425]},{"teal":2436,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2426,2427,2428]},{"teal":2437,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2429]},{"teal":2438,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2430,2431]},{"teal":2439,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2432]},{"teal":2440,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2433]},{"teal":2441,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2434]},{"teal":2442,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:430","pc":[2435,2436]},{"teal":2450,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:433","pc":[2437,2438]},{"teal":2451,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:433","pc":[2439]},{"teal":2452,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:433","pc":[2440]},{"teal":2453,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:433","pc":[2441,2442,2443]},{"teal":2458,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2444,2445]},{"teal":2459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2446,2447]},{"teal":2460,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2448]},{"teal":2461,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2449]},{"teal":2462,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2450,2451]},{"teal":2463,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2452]},{"teal":2464,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2453]},{"teal":2465,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2454]},{"teal":2466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2455]},{"teal":2467,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2456]},{"teal":2470,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","errorMessage":"wideRatio failed","pc":[2457]},{"teal":2471,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:434","pc":[2458,2459]},{"teal":2476,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:435","pc":[2460,2461]},{"teal":2477,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:435","pc":[2462]},{"teal":2478,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:435","pc":[2463]},{"teal":2479,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:435","pc":[2464,2465,2466]},{"teal":2484,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:436","pc":[2467]},{"teal":2485,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:436","pc":[2468,2469]},{"teal":2490,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:439","pc":[2470,2471]},{"teal":2491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:439","pc":[2472]},{"teal":2492,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:439","pc":[2473]},{"teal":2493,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:439","pc":[2474,2475]},{"teal":2494,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:439","pc":[2476]},{"teal":2495,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:439","pc":[2477]},{"teal":2500,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2478,2479]},{"teal":2501,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2480]},{"teal":2502,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2481,2482]},{"teal":2503,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2483]},{"teal":2504,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2484]},{"teal":2505,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2485,2486,2487]},{"teal":2510,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2488,2489]},{"teal":2511,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2490,2491]},{"teal":2512,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2492,2493]},{"teal":2513,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2494,2495,2496]},{"teal":2514,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2497]},{"teal":2515,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2498,2499]},{"teal":2516,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2500]},{"teal":2517,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2501]},{"teal":2518,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2502]},{"teal":2519,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:443","pc":[2503,2504]},{"teal":2523,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2505,2506]},{"teal":2524,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2507]},{"teal":2525,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2508]},{"teal":2526,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2509,2510]},{"teal":2527,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2511]},{"teal":2528,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:444","pc":[2512]},{"teal":2529,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:440","pc":[2513,2514,2515]},{"teal":2534,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2516,2517]},{"teal":2535,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2518,2519]},{"teal":2536,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2520,2521]},{"teal":2537,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2522,2523,2524]},{"teal":2538,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2525]},{"teal":2539,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2526,2527]},{"teal":2540,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2528]},{"teal":2541,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2529]},{"teal":2542,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2530]},{"teal":2543,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:446","pc":[2531,2532]},{"teal":2550,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:449","pc":[2533,2534]},{"teal":2551,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:449","pc":[2535,2536]},{"teal":2552,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:449","pc":[2537]},{"teal":2553,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:449","pc":[2538,2539]},{"teal":2554,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:449","pc":[2540]},{"teal":2555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:449","pc":[2541,2542]},{"teal":2556,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:449","pc":[2543]},{"teal":2563,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2544,2545]},{"teal":2564,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2546]},{"teal":2565,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2547]},{"teal":2566,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2548,2549]},{"teal":2567,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:401","pc":[2550,2551,2552]},{"teal":2573,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2553,2554]},{"teal":2574,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2555]},{"teal":2575,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2556]},{"teal":2576,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:452","pc":[2557,2558,2559]},{"teal":2581,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2560]},{"teal":2582,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2561]},{"teal":2583,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2562,2563]},{"teal":2584,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2564]},{"teal":2585,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2565,2566]},{"teal":2586,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2567]},{"teal":2587,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2568]},{"teal":2588,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2569,2570]},{"teal":2589,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2571,2572]},{"teal":2590,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2573,2574]},{"teal":2591,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2575,2576]},{"teal":2592,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:453","pc":[2577]},{"teal":2598,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:456","pc":[2578,2579]},{"teal":2599,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:456","pc":[2580]},{"teal":2600,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:456","pc":[2581]},{"teal":2601,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:456","pc":[2582]},{"teal":2602,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:456","pc":[2583,2584,2585]},{"teal":2612,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:457","pc":[2586]},{"teal":2613,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:457","pc":[2587,2588]},{"teal":2614,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:457","pc":[2589,2590]},{"teal":2618,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2591,2592]},{"teal":2619,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2593]},{"teal":2620,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:458","pc":[2594,2595]},{"teal":2624,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:459","pc":[2596,2597]},{"teal":2625,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:459","pc":[2598,2599]},{"teal":2629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:460","pc":[2600,2601]},{"teal":2630,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:460","pc":[2602]},{"teal":2631,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:460","pc":[2603,2604]},{"teal":2635,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:461","pc":[2605]},{"teal":2636,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:461","pc":[2606,2607]},{"teal":2639,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:457","pc":[2608]},{"teal":2644,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:465","pc":[2609,2610]},{"teal":2645,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:465","pc":[2611]},{"teal":2646,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:465","pc":[2612]},{"teal":2649,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:392","pc":[2613]},{"teal":2653,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:469","pc":[2614,2615,2616]},{"teal":2656,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:469","pc":[2617]},{"teal":2660,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2618]},{"teal":2661,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2619,2620]},{"teal":2666,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2621,2622]},{"teal":2667,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2623]},{"teal":2668,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2624]},{"teal":2669,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2625]},{"teal":2670,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2626,2627,2628]},{"teal":2675,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:471","pc":[2629,2630]},{"teal":2676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:471","pc":[2631]},{"teal":2677,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:471","pc":[2632]},{"teal":2678,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:471","pc":[2633,2634,2635]},{"teal":2683,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2636]},{"teal":2684,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2637]},{"teal":2685,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2638,2639]},{"teal":2686,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2640]},{"teal":2687,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2641,2642]},{"teal":2688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2643]},{"teal":2689,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2644]},{"teal":2690,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2645,2646]},{"teal":2691,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2647,2648]},{"teal":2692,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2649,2650]},{"teal":2693,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2651,2652]},{"teal":2694,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:472","pc":[2653]},{"teal":2700,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2654,2655]},{"teal":2701,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2656,2657]},{"teal":2702,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2658]},{"teal":2703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2659]},{"teal":2704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2660]},{"teal":2705,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2661,2662]},{"teal":2706,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2663]},{"teal":2707,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2664,2665]},{"teal":2708,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2666]},{"teal":2709,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2667,2668]},{"teal":2710,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2669]},{"teal":2711,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:474","pc":[2670,2671,2672]},{"teal":2716,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:475","pc":[2673,2674]},{"teal":2717,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:475","pc":[2675,2676]},{"teal":2718,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:475","pc":[2677]},{"teal":2719,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:475","pc":[2678,2679]},{"teal":2720,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:475","pc":[2680]},{"teal":2721,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:475","pc":[2681,2682]},{"teal":2722,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:475","pc":[2683]},{"teal":2723,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:475","pc":[2684,2685,2686]},{"teal":2730,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2687,2688]},{"teal":2731,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2689]},{"teal":2732,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2690]},{"teal":2733,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2691,2692]},{"teal":2734,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:470","pc":[2693,2694,2695]},{"teal":2744,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:479","pc":[2696,2697]},{"teal":2745,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:480","pc":[2698,2699]},{"teal":2746,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:480","pc":[2700]},{"teal":2747,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2701,2702]},{"teal":2748,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:481","pc":[2703]},{"teal":2749,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2704,2705]},{"teal":2750,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:482","pc":[2706]},{"teal":2754,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:469","pc":[2707,2708]},{"teal":2755,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:469","pc":[2709]},{"teal":2760,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:486","pc":[2710,2711,2712]},{"teal":2761,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:486","pc":[2713]},{"teal":2762,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:486","pc":[2714]},{"teal":2766,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:486","pc":[2715,2716,2717]},{"teal":2769,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:486","pc":[2718]},{"teal":2773,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:487","pc":[2719,2720,2721]},{"teal":2778,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:488","pc":[2722,2723]},{"teal":2779,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:488","pc":[2724]},{"teal":2780,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:488","pc":[2725]},{"teal":2781,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:488","pc":[2726,2727,2728]},{"teal":2786,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2729]},{"teal":2787,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2730]},{"teal":2788,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2731,2732]},{"teal":2789,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2733]},{"teal":2790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2734,2735]},{"teal":2791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2736]},{"teal":2792,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2737]},{"teal":2793,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2738,2739]},{"teal":2794,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2740,2741]},{"teal":2795,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2742,2743]},{"teal":2796,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2744,2745]},{"teal":2797,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:489","pc":[2746]},{"teal":2802,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:491","pc":[2747,2748,2749]},{"teal":2807,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:492","pc":[2750,2751]},{"teal":2808,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:492","pc":[2752]},{"teal":2809,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:492","pc":[2753]},{"teal":2810,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:492","pc":[2754,2755,2756]},{"teal":2815,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2757]},{"teal":2816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2758]},{"teal":2817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2759,2760]},{"teal":2818,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2761]},{"teal":2819,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2762,2763]},{"teal":2820,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2764]},{"teal":2821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2765]},{"teal":2822,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2766,2767]},{"teal":2823,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2768,2769]},{"teal":2824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2770,2771]},{"teal":2825,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2772,2773]},{"teal":2826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:493","pc":[2774]},{"teal":2831,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:495","pc":[2775,2776]},{"teal":2832,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:495","pc":[2777,2778,2779]},{"teal":2833,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:495","pc":[2780,2781]},{"teal":2838,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:497","pc":[2782,2783]},{"teal":2839,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:497","pc":[2784,2785,2786]},{"teal":2840,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:497","pc":[2787]},{"teal":2841,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:497","pc":[2788]},{"teal":2842,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:497","pc":[2789]},{"teal":2843,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:497","pc":[2790,2791,2792]},{"teal":2854,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:498","pc":[2793]},{"teal":2855,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:498","pc":[2794,2795]},{"teal":2856,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:498","pc":[2796,2797]},{"teal":2860,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:499","pc":[2798,2799]},{"teal":2861,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:499","pc":[2800]},{"teal":2862,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:499","pc":[2801,2802]},{"teal":2866,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2803,2804]},{"teal":2867,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:500","pc":[2805,2806]},{"teal":2871,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:501","pc":[2807,2808]},{"teal":2872,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:501","pc":[2809,2810]},{"teal":2876,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2811,2812]},{"teal":2877,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2813,2814,2815]},{"teal":2878,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2816]},{"teal":2879,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:502","pc":[2817,2818]},{"teal":2883,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2819]},{"teal":2884,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:503","pc":[2820,2821]},{"teal":2887,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:498","pc":[2822]},{"teal":2891,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2823,2824]},{"teal":2892,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2825]},{"teal":2893,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2826]},{"teal":2894,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2827,2828]},{"teal":2895,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2829,2830,2831]},{"teal":2896,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2832]},{"teal":2897,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2833]},{"teal":2898,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:505","pc":[2834]},{"teal":2902,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:506","pc":[2835,2836]},{"teal":2903,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:506","pc":[2837,2838]},{"teal":2904,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:506","pc":[2839,2840]},{"teal":2905,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:506","pc":[2841,2842]},{"teal":2911,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2843,2844]},{"teal":2912,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2845,2846,2847]},{"teal":2913,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2848]},{"teal":2914,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2849]},{"teal":2915,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2850]},{"teal":2916,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:508","pc":[2851,2852,2853]},{"teal":2927,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:509","pc":[2854]},{"teal":2928,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:509","pc":[2855,2856]},{"teal":2929,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:509","pc":[2857,2858]},{"teal":2933,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:510","pc":[2859,2860]},{"teal":2934,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:510","pc":[2861]},{"teal":2935,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:510","pc":[2862,2863]},{"teal":2939,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2864,2865]},{"teal":2940,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:511","pc":[2866,2867]},{"teal":2944,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:512","pc":[2868,2869]},{"teal":2945,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:512","pc":[2870,2871]},{"teal":2949,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:513","pc":[2872,2873]},{"teal":2950,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:513","pc":[2874,2875,2876]},{"teal":2951,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:513","pc":[2877]},{"teal":2952,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:513","pc":[2878,2879]},{"teal":2956,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2880]},{"teal":2957,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:514","pc":[2881,2882]},{"teal":2960,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:509","pc":[2883]},{"teal":2964,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:516","pc":[2884,2885]},{"teal":2965,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:516","pc":[2886,2887]},{"teal":2966,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:516","pc":[2888,2889]},{"teal":2967,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:516","pc":[2890,2891]},{"teal":2972,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2892,2893]},{"teal":2973,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2894,2895]},{"teal":2974,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2896,2897,2898]},{"teal":2975,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:519","pc":[2899,2900,2901]},{"teal":2980,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:520","pc":[2902,2903]},{"teal":2981,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:520","pc":[2904]},{"teal":2982,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:520","pc":[2905]},{"teal":2983,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:520","pc":[2906,2907,2908]},{"teal":2988,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2909]},{"teal":2989,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2910]},{"teal":2990,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2911,2912]},{"teal":2991,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2913]},{"teal":2992,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2914,2915]},{"teal":2993,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2916]},{"teal":2994,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2917]},{"teal":2995,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2918,2919]},{"teal":2996,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2920,2921]},{"teal":2997,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2922,2923]},{"teal":2998,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2924,2925]},{"teal":2999,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:521","pc":[2926]},{"teal":3002,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:486","pc":[2927]},{"teal":3007,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2928,2929,2930]},{"teal":3008,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2931]},{"teal":3011,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2932,2933,2934]},{"teal":3012,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2935]},{"teal":3013,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2936]},{"teal":3017,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2937,2938,2939]},{"teal":3020,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2940]},{"teal":3021,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[2941,2942]},{"teal":3025,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:526","pc":[2943,2944,2945]},{"teal":3030,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:527","pc":[2946,2947]},{"teal":3031,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:527","pc":[2948]},{"teal":3032,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:527","pc":[2949]},{"teal":3033,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:527","pc":[2950,2951,2952]},{"teal":3038,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2953]},{"teal":3039,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2954]},{"teal":3040,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2955,2956]},{"teal":3041,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2957]},{"teal":3042,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2958,2959]},{"teal":3043,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2960]},{"teal":3044,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2961]},{"teal":3045,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2962,2963]},{"teal":3046,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2964,2965]},{"teal":3047,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2966,2967]},{"teal":3048,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2968,2969]},{"teal":3049,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:528","pc":[2970]},{"teal":3054,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:530","pc":[2971,2972,2973]},{"teal":3058,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[2974]},{"teal":3059,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[2975,2976]},{"teal":3064,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[2977,2978]},{"teal":3065,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[2979]},{"teal":3066,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[2980]},{"teal":3067,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[2981]},{"teal":3068,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[2982,2983,2984]},{"teal":3073,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2985,2986]},{"teal":3074,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2987]},{"teal":3075,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2988]},{"teal":3076,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:532","pc":[2989,2990,2991]},{"teal":3081,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2992]},{"teal":3082,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2993]},{"teal":3083,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2994,2995]},{"teal":3084,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2996]},{"teal":3085,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2997,2998]},{"teal":3086,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[2999]},{"teal":3087,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[3000]},{"teal":3088,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[3001,3002]},{"teal":3089,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[3003,3004]},{"teal":3090,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[3005,3006]},{"teal":3091,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[3007,3008]},{"teal":3092,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:533","pc":[3009]},{"teal":3097,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[3010,3011]},{"teal":3098,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[3012,3013]},{"teal":3099,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[3014]},{"teal":3100,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[3015,3016]},{"teal":3101,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[3017]},{"teal":3102,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[3018,3019]},{"teal":3103,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[3020]},{"teal":3104,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:535","pc":[3021,3022]},{"teal":3109,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3023,3024]},{"teal":3110,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3025,3026,3027]},{"teal":3111,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3028,3029]},{"teal":3112,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3030]},{"teal":3113,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:536","pc":[3031,3032,3033]},{"teal":3118,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[3034,3035]},{"teal":3119,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[3036,3037,3038]},{"teal":3120,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[3039]},{"teal":3121,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[3040,3041]},{"teal":3122,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[3042]},{"teal":3123,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:537","pc":[3043]},{"teal":3128,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3044,3045]},{"teal":3129,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3046,3047,3048]},{"teal":3130,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3049]},{"teal":3131,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3050]},{"teal":3132,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3051]},{"teal":3133,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:538","pc":[3052,3053,3054]},{"teal":3144,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:539","pc":[3055]},{"teal":3145,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:539","pc":[3056,3057]},{"teal":3146,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:539","pc":[3058,3059]},{"teal":3150,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3060,3061]},{"teal":3151,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3062]},{"teal":3152,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:540","pc":[3063,3064]},{"teal":3156,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:541","pc":[3065,3066]},{"teal":3157,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:541","pc":[3067,3068]},{"teal":3161,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[3069,3070]},{"teal":3162,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:542","pc":[3071,3072]},{"teal":3166,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3073,3074]},{"teal":3167,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3075]},{"teal":3168,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3076]},{"teal":3169,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3077,3078,3079]},{"teal":3170,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3080,3081]},{"teal":3171,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3082,3083,3084]},{"teal":3172,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3085]},{"teal":3173,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3086,3087,3088]},{"teal":3176,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3089,3090]},{"teal":3179,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:543","pc":[3091,3092]},{"teal":3183,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:544","pc":[3093]},{"teal":3184,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:544","pc":[3094,3095]},{"teal":3187,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:539","pc":[3096]},{"teal":3193,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:549","pc":[3097,3098]},{"teal":3194,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:549","pc":[3099,3100,3101]},{"teal":3195,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:549","pc":[3102]},{"teal":3196,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:549","pc":[3103]},{"teal":3197,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:549","pc":[3104]},{"teal":3198,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:549","pc":[3105,3106,3107]},{"teal":3209,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:550","pc":[3108]},{"teal":3210,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:550","pc":[3109,3110]},{"teal":3211,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:550","pc":[3111,3112]},{"teal":3215,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[3113,3114]},{"teal":3216,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[3115]},{"teal":3217,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:551","pc":[3116,3117]},{"teal":3221,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3118,3119]},{"teal":3222,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:552","pc":[3120,3121]},{"teal":3226,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3122,3123]},{"teal":3227,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:553","pc":[3124,3125]},{"teal":3231,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3126,3127]},{"teal":3232,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3128,3129,3130]},{"teal":3233,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3131]},{"teal":3234,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:554","pc":[3132,3133]},{"teal":3238,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:555","pc":[3134]},{"teal":3239,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:555","pc":[3135,3136]},{"teal":3242,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:550","pc":[3137]},{"teal":3246,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3138,3139]},{"teal":3247,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3140,3141]},{"teal":3248,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3142,3143]},{"teal":3249,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:557","pc":[3144,3145]},{"teal":3255,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:561","pc":[3146,3147]},{"teal":3256,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:561","pc":[3148,3149,3150]},{"teal":3257,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:561","pc":[3151]},{"teal":3258,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:561","pc":[3152]},{"teal":3259,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:561","pc":[3153]},{"teal":3260,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:561","pc":[3154,3155,3156]},{"teal":3271,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:562","pc":[3157]},{"teal":3272,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:562","pc":[3158,3159]},{"teal":3273,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:562","pc":[3160,3161]},{"teal":3277,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3162,3163]},{"teal":3278,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3164]},{"teal":3279,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:563","pc":[3165,3166]},{"teal":3283,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:564","pc":[3167,3168]},{"teal":3284,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:564","pc":[3169,3170]},{"teal":3288,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:565","pc":[3171,3172]},{"teal":3289,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:565","pc":[3173,3174]},{"teal":3293,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:566","pc":[3175,3176]},{"teal":3294,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:566","pc":[3177,3178,3179]},{"teal":3295,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:566","pc":[3180]},{"teal":3296,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:566","pc":[3181,3182]},{"teal":3300,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:567","pc":[3183]},{"teal":3301,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:567","pc":[3184,3185]},{"teal":3304,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:562","pc":[3186]},{"teal":3308,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3187,3188]},{"teal":3309,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3189,3190]},{"teal":3310,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3191,3192]},{"teal":3311,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:569","pc":[3193,3194]},{"teal":3316,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3195,3196]},{"teal":3317,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3197]},{"teal":3318,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3198]},{"teal":3319,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3199,3200]},{"teal":3320,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3201]},{"teal":3321,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3202]},{"teal":3322,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3203,3204,3205]},{"teal":3323,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3206,3207]},{"teal":3324,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3208,3209,3210]},{"teal":3325,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3211]},{"teal":3326,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3212,3213,3214]},{"teal":3329,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3215,3216]},{"teal":3332,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3217]},{"teal":3333,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:573","pc":[3218]},{"teal":3338,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:575","pc":[3219,3220]},{"teal":3339,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:575","pc":[3221]},{"teal":3340,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:575","pc":[3222]},{"teal":3341,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:575","pc":[3223,3224,3225]},{"teal":3346,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3226]},{"teal":3347,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3227]},{"teal":3348,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3228,3229]},{"teal":3349,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3230]},{"teal":3350,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3231,3232]},{"teal":3351,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3233]},{"teal":3352,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3234]},{"teal":3353,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3235,3236]},{"teal":3354,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3237,3238]},{"teal":3355,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3239,3240]},{"teal":3356,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3241,3242]},{"teal":3357,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:576","pc":[3243]},{"teal":3363,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3244,3245]},{"teal":3364,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3246]},{"teal":3365,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3247]},{"teal":3366,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3248,3249,3250]},{"teal":3376,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:581","pc":[3251,3252]},{"teal":3377,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:582","pc":[3253,3254]},{"teal":3378,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:582","pc":[3255]},{"teal":3379,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:584","pc":[3256,3257]},{"teal":3380,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:584","pc":[3258]},{"teal":3381,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:583","pc":[3259,3260]},{"teal":3382,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:583","pc":[3261]},{"teal":3383,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:580","pc":[3262,3263]},{"teal":3387,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:586","pc":[3264,3265]},{"teal":3388,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:586","pc":[3266,3267]},{"teal":3389,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:586","pc":[3268,3269,3270]},{"teal":3390,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:586","pc":[3271,3272,3273]},{"teal":3394,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3274]},{"teal":3395,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3275]},{"teal":3396,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3276]},{"teal":3397,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3277]},{"teal":3398,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3278,3279]},{"teal":3399,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3280]},{"teal":3400,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3281]},{"teal":3401,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3282]},{"teal":3402,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3283,3284]},{"teal":3403,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3285]},{"teal":3404,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3286,3287]},{"teal":3405,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3288]},{"teal":3406,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3289,3290,3291]},{"teal":3407,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:590","pc":[3292,3293]},{"teal":3411,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3294]},{"teal":3412,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3295]},{"teal":3413,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3296]},{"teal":3414,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3297]},{"teal":3415,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3298,3299]},{"teal":3416,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3300]},{"teal":3417,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3301]},{"teal":3418,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3302]},{"teal":3419,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3303,3304]},{"teal":3420,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3305]},{"teal":3421,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3306,3307]},{"teal":3422,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3308]},{"teal":3423,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3309,3310,3311]},{"teal":3424,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:591","pc":[3312,3313]},{"teal":3429,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3314,3315]},{"teal":3430,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3316]},{"teal":3431,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3317]},{"teal":3432,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:592","pc":[3318,3319,3320]},{"teal":3437,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3321]},{"teal":3438,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3322]},{"teal":3439,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3323,3324]},{"teal":3440,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3325]},{"teal":3441,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3326,3327]},{"teal":3442,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3328]},{"teal":3443,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3329]},{"teal":3444,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3330,3331]},{"teal":3445,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3332,3333]},{"teal":3446,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3334,3335]},{"teal":3447,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3336,3337]},{"teal":3448,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:593","pc":[3338]},{"teal":3453,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:595","pc":[3339,3340]},{"teal":3454,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:595","pc":[3341,3342]},{"teal":3455,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:595","pc":[3343,3344,3345]},{"teal":3459,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:598","pc":[3346,3347]},{"teal":3460,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:598","pc":[3348,3349]},{"teal":3461,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:598","pc":[3350,3351,3352]},{"teal":3465,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3353]},{"teal":3466,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3354]},{"teal":3467,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3355]},{"teal":3468,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3356]},{"teal":3469,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3357]},{"teal":3470,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:599","pc":[3358]},{"teal":3471,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:579","pc":[3359,3360,3361]},{"teal":3476,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3362,3363]},{"teal":3477,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3364,3365]},{"teal":3478,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3366,3367]},{"teal":3479,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3368,3369,3370]},{"teal":3480,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3371]},{"teal":3481,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3372,3373]},{"teal":3482,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3374]},{"teal":3483,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3375]},{"teal":3484,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3376]},{"teal":3485,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:601","pc":[3377,3378]},{"teal":3489,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3379,3380]},{"teal":3490,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3381,3382]},{"teal":3491,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3383,3384]},{"teal":3492,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:602","pc":[3385,3386]},{"teal":3497,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:604","pc":[3387,3388]},{"teal":3498,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:604","pc":[3389,3390]},{"teal":3499,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:604","pc":[3391,3392,3393]},{"teal":3500,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:604","pc":[3394,3395,3396]},{"teal":3507,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[3397,3398]},{"teal":3508,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[3399]},{"teal":3509,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[3400]},{"teal":3510,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[3401,3402]},{"teal":3511,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:531","pc":[3403,3404,3405]},{"teal":3514,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:525","pc":[3406]},{"teal":3518,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:609","pc":[3407,3408,3409]},{"teal":3521,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:609","pc":[3410]},{"teal":3525,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3411]},{"teal":3526,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3412,3413]},{"teal":3531,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3414,3415]},{"teal":3532,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3416]},{"teal":3533,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3417]},{"teal":3534,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3418]},{"teal":3535,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3419,3420,3421]},{"teal":3540,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3422,3423]},{"teal":3541,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3424]},{"teal":3542,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3425]},{"teal":3543,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:611","pc":[3426,3427,3428]},{"teal":3548,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3429]},{"teal":3549,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3430]},{"teal":3550,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3431,3432]},{"teal":3551,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3433]},{"teal":3552,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3434,3435]},{"teal":3553,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3436]},{"teal":3554,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3437]},{"teal":3555,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3438,3439]},{"teal":3556,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3440,3441]},{"teal":3557,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3442,3443]},{"teal":3558,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3444,3445]},{"teal":3559,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:612","pc":[3446]},{"teal":3565,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3447,3448]},{"teal":3566,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3449,3450]},{"teal":3567,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3451]},{"teal":3568,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3452]},{"teal":3569,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3453]},{"teal":3570,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3454,3455]},{"teal":3571,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3456]},{"teal":3572,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3457,3458]},{"teal":3573,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3459]},{"teal":3574,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3460,3461]},{"teal":3575,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3462]},{"teal":3576,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:614","pc":[3463,3464,3465]},{"teal":3581,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3466,3467]},{"teal":3582,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:615","pc":[3468,3469,3470]},{"teal":3589,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3471,3472]},{"teal":3590,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3473]},{"teal":3591,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3474]},{"teal":3592,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3475,3476]},{"teal":3593,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:610","pc":[3477,3478,3479]},{"teal":3598,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:618","pc":[3480]},{"teal":3602,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:609","pc":[3481,3482]},{"teal":3603,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:609","pc":[3483]},{"teal":3607,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:621","pc":[3484,3485,3486]},{"teal":3610,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:621","pc":[3487]},{"teal":3614,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3488]},{"teal":3615,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3489,3490]},{"teal":3620,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3491,3492]},{"teal":3621,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3493]},{"teal":3622,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3494]},{"teal":3623,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3495]},{"teal":3624,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3496,3497,3498]},{"teal":3629,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3499,3500]},{"teal":3630,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3501]},{"teal":3631,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3502]},{"teal":3632,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:623","pc":[3503,3504,3505]},{"teal":3637,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3506]},{"teal":3638,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3507]},{"teal":3639,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3508,3509]},{"teal":3640,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3510]},{"teal":3641,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3511,3512]},{"teal":3642,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3513]},{"teal":3643,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3514]},{"teal":3644,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3515,3516]},{"teal":3645,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3517,3518]},{"teal":3646,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3519,3520]},{"teal":3647,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3521,3522]},{"teal":3648,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:624","pc":[3523]},{"teal":3654,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3524,3525]},{"teal":3655,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3526,3527]},{"teal":3656,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3528]},{"teal":3657,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3529]},{"teal":3658,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3530]},{"teal":3659,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3531,3532]},{"teal":3660,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3533]},{"teal":3661,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3534,3535]},{"teal":3662,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3536]},{"teal":3663,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3537,3538]},{"teal":3664,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3539]},{"teal":3665,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3540,3541,3542]},{"teal":3670,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3543,3544]},{"teal":3671,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3545,3546]},{"teal":3672,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3547]},{"teal":3673,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3548,3549]},{"teal":3674,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3550]},{"teal":3675,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3551,3552]},{"teal":3676,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:627","pc":[3553]},{"teal":3680,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:628","pc":[3554]},{"teal":3681,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:626","pc":[3555,3556,3557]},{"teal":3686,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3558,3559]},{"teal":3687,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3560,3561]},{"teal":3688,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3562]},{"teal":3689,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3563]},{"teal":3690,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3564]},{"teal":3691,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3565,3566]},{"teal":3692,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3567]},{"teal":3693,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3568,3569]},{"teal":3694,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3570]},{"teal":3695,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3571,3572]},{"teal":3696,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3573]},{"teal":3697,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:630","pc":[3574,3575,3576]},{"teal":3702,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3577,3578]},{"teal":3703,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3579,3580]},{"teal":3704,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3581]},{"teal":3705,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3582,3583]},{"teal":3706,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3584]},{"teal":3707,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3585,3586]},{"teal":3708,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:631","pc":[3587]},{"teal":3712,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:632","pc":[3588]},{"teal":3719,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3589,3590]},{"teal":3720,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3591]},{"teal":3721,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3592]},{"teal":3722,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3593,3594]},{"teal":3723,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:622","pc":[3595,3596,3597]},{"teal":3726,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:621","pc":[3598]},{"teal":3730,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:637","pc":[3599,3600,3601]},{"teal":3734,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3602,3603]},{"teal":3735,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3604,3605]},{"teal":3736,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3606]},{"teal":3737,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3607,3608]},{"teal":3738,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3609]},{"teal":3739,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3610,3611]},{"teal":3740,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:638","pc":[3612]},{"teal":3741,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:637","pc":[3613]},{"teal":3746,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3614,3615,3616]},{"teal":3747,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3617]},{"teal":3748,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3618]},{"teal":3749,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3619]},{"teal":3750,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3620]},{"teal":3753,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","errorMessage":"argument 0 (enabled) for setFreeze must be a bool","pc":[3621]},{"teal":3754,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3622]},{"teal":3755,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3623]},{"teal":3758,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3624,3625,3626]},{"teal":3759,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3627]},{"teal":3760,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3628]},{"teal":3764,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3629,3630,3631]},{"teal":3768,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3632,3633]},{"teal":3769,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3634,3635]},{"teal":3770,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3636]},{"teal":3771,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","pc":[3637]},{"teal":3774,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:642","errorMessage":"Only injector can freeze payouts","pc":[3638]},{"teal":3778,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3639,3640]},{"teal":3779,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3641,3642]},{"teal":3780,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3643,3644]},{"teal":3781,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3645]},{"teal":3782,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3646,3647]},{"teal":3783,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3648]},{"teal":3784,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:643","pc":[3649]},{"teal":3785,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:641","pc":[3650]},{"teal":3790,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:646","pc":[3651,3652,3653]},{"teal":3791,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:646","pc":[3654]},{"teal":3792,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:646","pc":[3655]},{"teal":3796,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:646","pc":[3656,3657,3658]},{"teal":3797,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:646","pc":[3659]},{"teal":3800,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3660,3661,3662,3663,3664,3665]},{"teal":3801,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3666,3667,3668]},{"teal":3802,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3669,3670,3671,3672]},{"teal":3805,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"this contract does not implement the given ABI method for create NoOp","pc":[3673]},{"teal":3808,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3674,3675,3676,3677,3678,3679]},{"teal":3809,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3680,3681,3682,3683,3684,3685]},{"teal":3810,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3686,3687,3688,3689,3690,3691]},{"teal":3811,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3692,3693,3694,3695,3696,3697]},{"teal":3812,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3698,3699,3700,3701,3702,3703]},{"teal":3813,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3704,3705,3706,3707,3708,3709]},{"teal":3814,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3710,3711,3712,3713,3714,3715]},{"teal":3815,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3716,3717,3718,3719,3720,3721]},{"teal":3816,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3722,3723,3724,3725,3726,3727]},{"teal":3817,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3728,3729,3730,3731,3732,3733]},{"teal":3818,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3734,3735,3736,3737,3738,3739]},{"teal":3819,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3740,3741,3742,3743,3744,3745]},{"teal":3820,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3746,3747,3748,3749,3750,3751]},{"teal":3821,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3752,3753,3754,3755,3756,3757]},{"teal":3822,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3758,3759,3760,3761,3762,3763]},{"teal":3823,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3764,3765,3766,3767,3768,3769]},{"teal":3824,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3770,3771,3772,3773,3774,3775]},{"teal":3825,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3776,3777,3778,3779,3780,3781]},{"teal":3826,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3782,3783,3784,3785,3786,3787]},{"teal":3827,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3788,3789,3790,3791,3792,3793]},{"teal":3828,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3794,3795,3796,3797,3798,3799]},{"teal":3829,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3800,3801,3802,3803,3804,3805]},{"teal":3830,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3806,3807,3808]},{"teal":3831,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3809,3810,3811,3812,3813,3814,3815,3816,3817,3818,3819,3820,3821,3822,3823,3824,3825,3826,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3837,3838,3839,3840,3841,3842,3843,3844,3845,3846,3847,3848,3849,3850,3851,3852,3853,3854]},{"teal":3834,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"this contract does not implement the given ABI method for call NoOp","pc":[3855]},{"teal":3837,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3856,3857,3858,3859,3860,3861]},{"teal":3838,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3862,3863,3864]},{"teal":3839,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","pc":[3865,3866,3867,3868]},{"teal":3842,"source":"contracts/PermissionlessInjectedRewardsPool.algo.ts:21","errorMessage":"this contract does not implement the given ABI method for call DeleteApplication","pc":[3869]}],"pcOffsetMethod":"none"},"clear":{"sourceInfo":[],"pcOffsetMethod":"none"}},"source":{"approval":"","clear":"I3ByYWdtYSB2ZXJzaW9uIDEx"},"byteCode":{"approval":"CyAOAAEGrAIFOCAEoI0GgICapuqv4wHQD5BO59oBfyYWAwqBAQAHc3Rha2VycwpudW1TdGFrZXJzDXJld2FyZEFzc2V0SWQLdG90YWxTdGFrZWQIAAAAAAAAAAAMYWRtaW5BZGRyZXNzEmluamVjdGVkQVNBUmV3YXJkcxNpbmplY3RlZHhVU0RSZXdhcmRzD2luamVjdG9yQWRkcmVzcwEADnBhaWRBU0FSZXdhcmRzC3hVU0RBc3NldElkDXN0YWtlZEFzc2V0SWQKcG9vbEFjdGl2ZQpwb29sRW5kaW5nBmZyZWV6ZRFsYXN0SW5qZWN0aW9uVGltZQ90cmVhc3VyeUFkZHJlc3MOcGxhdGZvcm1GZWVCcHMQcGFpZFBsYXRmb3JtRmVlczEYFCQLMRkIjQwNDgAAAAAAAAAADcQNAAAAAAAAAAAAAAAANhoDSRUhBhJENhoCSRUhBhJENhoBSRUhBhJEiAACI0OKAwAnB4v/ZycTi/5nJwqL/WeAD2NvbnRyYWN0VmVyc2lvbiEKZ4k2GgQXNhoDFzYaAhc2GgEXiAACI0OKBAAxACcHZBJEJw6L/2cnBIv+ZycFImcnESInCyJPAlRnJwgiZycJImcrImcnDyInCyJPAlRnJxAiJwsiTwJUZycNi/1nJxIyB2cnDCJnJxSL/GexIQeyEIv/shEyCrIUIrISIrIBs7EhB7IQJw1kshEyCrIUIrISIrIBs7EhB7IQi/6yETIKshQishIisgGziTYaAUkVIQYSRIgAAiNDigEAMQAnB2QSRCcHi/9niYgAAiNDigAAMQAnB2QSRCcPIycLIk8CVGeJiAACI0OKAAAxACcHZBJEJxAjJwsiTwJUZycPIicLIk8CVGeJNhoBF4gAAiNDigEAMQAnCmQSRCcIi/9niTYaAReIAAIjQ4oBADEAJwpkEkQnDIv/Z4k2GgEXiAACI0OKAQAxACcKZBJEJwmL/2eJNhoBSRUhBhJEiAACI0OKAQAxACcKZBJEJxOL/2eJNhoBSRUhBhJEiAACI0OKAQAxACcKZBJEJwqL/2eJNhoBF4gAAiNDigEAMQAnCmQSRCuL/2eJNhoBSRUjEkQiU4gAAiNDigEAMQAnCmQSRCcRi/8nCyJPAlRniTYaAUkVIxJEIlOIAAIjQ4oBADEAJwdkEkQnEIv/JwsiTwJUZ4mKAQGBxBOL/4GQAwsIiYAEFR98dYgABFCwI0OKAAEpSSEIjAAnBGQiE0EAB4sAIQgIjAAhCIsACCEMiP/DCCENiP+9CIwBiwEWjABGAYkxFiMJSTgQIxJEiAACI0OKAQApSSq9TEgURDEAJwdkEkQhCIwAJwRkIhNBAAeLACEICIwAIQiLAAghDIj/dAghDYj/bgiMAYv/OAcyChJEi/84CIsBEkQqgeDaAblIgA5taW5pbXVtQmFsYW5jZYsBZycEZCITQQAVsSEHshAnBGSyETIKshQishIisgGziTYaAhc2GgEXMRYjCUk4ECEHEkSIAAIjQ4oDACmL/zgUMgoSRIv/OBEnBGQSRIv/OBKL/hJEi/4nFGQdIiELH0hITBREjAAnCElki/4IiwAJZycSMgdniwCIAASIA6eJigEAsSEHshCL/7ISJxNkshQnBGSyETIKsgAisgGzJxVJZIv/CGeJigAAKUcDMgonBGRwAEiMACKMAScEZCcOZBJBAAUnBWSMAYsAJwxkJwhkCIsBCA1BADiLACcMZAmLAQknCGQJjAKLAicUZB0iIQsfSEhMFESMA4sCK2QNQQAQJwhJZIsCCIsDCWeLA4j/b4k2GgEXMRYjCUk4ECEHEkSIAAIjQ4oCAIv/OBQyChJEi/84EScNZBJEi/84Eov+EkQnCUlki/4IZycSMgdnMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4j/PDIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOIAp+JiAACI0OKAAApSTEAJwdkEkQnBWQiEkQqvDIKJwRkcABIjACLACINQQAcsSEHshAnBGSyEScHZLIUiwCyEicHZLIVIrIBszIKcwBIMgpzAUgJIQoJjAGxI7IQiwGyCCcHZLIHMgqyACKyAbOJNhoBFzEWIwlJOBAhBxJEiAACI0OKAgApRwKL/iINRCcPZCJTRCcQZCJTFESI/oQyDCUMQQASsSSyECKyAShJsh6yHyEEshmziAHnMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4v/OAAxABJEi/84FDIKEkSL/zgRJw5kEkSL/zgSi/4SRCKMADIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMijAGLAYH0AwxBAX+LAEEAA0IBd4sBIQULIgghBipOAroxABJBAKEyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwEhBQshBSpOArqMAosCIQaLAlcgCBeL/zgSCBZdjAIyDCUMQQASsSSyECKyAShJsh6yHyEEshmzMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4sBIQULiwIqTgK7MgwlDEEAErEkshAisgEoSbIesh8hBLIZsycFZIv/OBIIJwVMZyOMAEIAoYsBIQULIgghBipOAroyAxJBAI4yDCUMQQASsSSyECKyAShJsh6yHyEEshmzJwVJZIv/OBIIZzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLASEFCzEAi/84EhZQJwZQJwZQKk4CuzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbMrSWQjCGcyDCUMQQASsSSyECKyAShJsh6yHyEEshmzI4wAMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4sBIwiMAUL+eImIAAIjQ4oAAClHBycRZCJTFElBAAcnEGQiUxQQSUEABicPZCJTEEEBrycIZIwAJwlkjAEyDCUMQQASsSSyECKyAShJsh6yHyEEshmzIowCiwIrZAxBAUUyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwIhBQshBgiBCCpOAroXjAOLAyINQQELiwIhBQshBSpOArqMBIsDIQkdIicFZB9ISEwURIwFMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4sAK2QNQQBhiwCLBR0iIQkfSEhMFESMBosGIhJBAAMjjAYnCElkiwYJZycMSWSLBghnJwRkJw5kEkEAHIsEIQaLBFcgCBeLBggWXYwEJwVJZIsGCGdCABGLBIEoiwRXKAgXiwYIFl2MBIsBIg1BAFmLAYsFHSIhCR9ISEwURIwHiwciEkEAAyOMBycJSWSLBwlnJw1kJw5kEkEAHIsEIQaLBFcgCBeLBwgWXYwEJwVJZIsHCGdCABGLBIEwiwRXMAgXiwcIFl2MBIsCIQULiwQqTgK7iwIjCIwCQv6zMgwlDEEAErEkshAisgEoSbIesh8hBLIZsycJZCINQQAXsSEHshAnDWSyETEAshQnCWSyEiKyAbMnCSJniYoBASkijACLACtkDEEAQzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLACEFCyIIIQYqTgK6i/8SQQAOiwAhBQshBSpOArpCABSLACMIjABC/7UyAycGUCcGUCcGUIwAiYgAAiNDigAAKYj6QTIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOI/aQyDCUMQQASsSSyECKyAShJsh6yHyEEshmzMQCI/1qMAIsAVygIFyINQQAysSEHshAnBGSyETEAshQyCrIAiwBXKAgXshIisgGzJwxJZIsAVygIFwlniwAnBlwojACLAFcwCBciDUEAJrEhB7IQJw1kshExALIUMgqyAIsAVzAIF7ISIrIBs4sAJwZcMIwAiwCLAFcAIIgCRjIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOJNhoBF4gAAiNDigEAKUcEiPlhMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4j8xCKMAIsAK2QMQQGlMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4sAIQULIQUqTgK6jAGLAVcAIDEAEkEBa4sBVyAIF4v/D0SLAVcgCBciDUEAKrEhB7IQJw5kshExALIUMgqyAIv/IhJBAAmLAVcgCBdCAAKL/7ISIrIBs4sBVygIFyINQQAmsSEHshAnBGSyETEAshQyCrIAiwFXKAgXshIisgGziwEnBlwojAGLAVcwCBciDUEAJrEhB7IQJw1kshExALIUMgqyAIsBVzAIF7ISIrIBs4sBJwZcMIwBJwVJZIv/IhJBAAmLAVcgCBdCAAKL/wlnMgwlDEEAErEkshAisgEoSbIesh8hBLIZs4v/IhJBAG8yAycGUCcGUCcGUIwCiwKLAVcAIIgA0itkIwkhBQsiCCEGKk4Cuoj9WowDK2QjCSEFCyIIIQYqTgK6iABfjAQyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwCLA4gA/YsEiwKIAPYrSWQjCWdCABmLASEGiwFXIAgXi/8JFl2MAYsBJwZcKIwBiwGLAVcAIIgAV4sAIwiMAEL+U4mKAQEpIowAiwArZAxBADoyDCUMQQASsSSyECKyAShJsh6yHyEEshmziwAhBQsiCCEGKk4Cuov/EkEABYsAQgAKiwAjCIwAQv++IowAiYoCACkijACLACtkDEEAYzIMJQxBABKxJLIQIrIBKEmyHrIfIQSyGbOLACEFCyIIIQYqTgK6i/8SQQAPiwAhBQuL/ipOAruJQgAfiwAhBQsiCCEGKk4CujIDEkEADIsAIQULi/4qTgK7iYsAIwiMAEL/lYmKAgCL/iEFC4v/Kk4Cu4k2GgFJFSMSRCJTiAACI0OKAQAxACcKZBJEJxGL/ycLIk8CVGeJiAACI0OKAACJgAQ15EwfNhoAjgHy9ACABBwFermABKP+pA+ABF+E5guABLcs82CABGgqxpOABOf+nM6ABMR3pE2ABBuSQVmABC2dfKuABPad13KABNJJY7iABNsoQGGABExDZyaABEfPzASABDRwB+uABMa6jxmABPTrSgOABOpLyleABKWua9GABIE86JqABLtrxuOABDFyyp02GgCOFvKF8yzzSvNk84jzofO689Pz8fQP9Cf0TPR/9L/1TvY/9yH5TvuH/GH/D/80AIAEJIfDLDYaAI4B9qcA","clear":"Cw=="},"compilerInfo":{"compiler":"algod","compilerVersion":{"major":4,"minor":1,"patch":2,"commitHash":"088f89dd"}}} as unknown as Arc56Contract

/**
 * A state record containing binary data
 */
export interface BinaryState {
  /**
   * Gets the state value as a Uint8Array
   */
  asByteArray(): Uint8Array | undefined
  /**
   * Gets the state value as a string
   */
  asString(): string | undefined
}

class BinaryStateValue implements BinaryState {
  constructor(private value: Uint8Array | undefined) {}

  asByteArray(): Uint8Array | undefined {
    return this.value
  }

  asString(): string | undefined {
    return this.value !== undefined ? Buffer.from(this.value).toString('utf-8') : undefined
  }
}

/**
 * Expands types for IntelliSense so they are more human readable
 * See https://stackoverflow.com/a/69288824
 */
export type Expand<T> = T extends (...args: infer A) => infer R
  ? (...args: Expand<A>) => Expand<R>
  : T extends infer O
    ? { [K in keyof O]: O[K] }
    : never


// Type definitions for ARC-56 structs

export type MbrReturn = {
  mbrPayment: bigint
}


/**
 * Converts the ABI tuple representation of a mbrReturn to the struct representation
 */
export function MbrReturnFromTuple(abiTuple: [bigint]) {
  return getABIStructFromABITuple(abiTuple, APP_SPEC.structs.mbrReturn, APP_SPEC.structs) as MbrReturn
}

/**
 * The argument types for the PermissionlessInjectedRewardsPool contract
 */
export type PermissionlessInjectedRewardsPoolArgs = {
  /**
   * The object representation of the arguments for each method
   */
  obj: {
    'createApplication(address,address,address)void': {
      adminAddress: string
      treasuryAddress: string
      injectorAddress: string
    }
    'initApplication(uint64,uint64,uint64,uint64)void': {
      stakedAsset: bigint | number
      rewardAssetId: bigint | number
      xUsdAssetId: bigint | number
      platformFeeBps: bigint | number
    }
    'updateAdminAddress(address)void': {
      adminAddress: string
    }
    'setPoolActive()void': Record<string, never>
    'setPoolEnding()void': Record<string, never>
    'updateInjectedASARewards(uint64)void': {
      injectedAsaRewards: bigint | number
    }
    'updatePaidASARewards(uint64)void': {
      paidAsaRewards: bigint | number
    }
    'updateInjectedxUSDRewards(uint64)void': {
      injectedxUsdRewards: bigint | number
    }
    'updateTreasuryAddress(address)void': {
      treasuryAddress: string
    }
    'updateInjectorAddress(address)void': {
      injectorAddress: string
    }
    'updateNumStakers(uint64)void': {
      numStakers: bigint | number
    }
    'updateFreeze(bool)void': {
      freeze: boolean
    }
    'updatePoolEnding(bool)void': {
      poolEnding: boolean
    }
    'getMBRForPoolCreation()(uint64)': Record<string, never>
    'initStorage(pay)void': {
      mbrPayment: AppMethodCallTransactionArgument
    }
    'injectRewards(axfer,uint64,uint64)void': {
      rewardTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
      rewardAssetId: bigint | number
    }
    'injectxUSD(axfer,uint64)void': {
      xUsdTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
    }
    'deleteApplication()void': Record<string, never>
    'stake(axfer,uint64)void': {
      stakeTxn: AppMethodCallTransactionArgument
      quantity: bigint | number
    }
    'accrueRewards()void': Record<string, never>
    'claimRewards()void': Record<string, never>
    'unstake(uint64)void': {
      quantity: bigint | number
    }
    'setFreeze(bool)void': {
      enabled: boolean
    }
    'gas()void': Record<string, never>
  }
  /**
   * The tuple representation of the arguments for each method
   */
  tuple: {
    'createApplication(address,address,address)void': [adminAddress: string, treasuryAddress: string, injectorAddress: string]
    'initApplication(uint64,uint64,uint64,uint64)void': [stakedAsset: bigint | number, rewardAssetId: bigint | number, xUsdAssetId: bigint | number, platformFeeBps: bigint | number]
    'updateAdminAddress(address)void': [adminAddress: string]
    'setPoolActive()void': []
    'setPoolEnding()void': []
    'updateInjectedASARewards(uint64)void': [injectedAsaRewards: bigint | number]
    'updatePaidASARewards(uint64)void': [paidAsaRewards: bigint | number]
    'updateInjectedxUSDRewards(uint64)void': [injectedxUsdRewards: bigint | number]
    'updateTreasuryAddress(address)void': [treasuryAddress: string]
    'updateInjectorAddress(address)void': [injectorAddress: string]
    'updateNumStakers(uint64)void': [numStakers: bigint | number]
    'updateFreeze(bool)void': [freeze: boolean]
    'updatePoolEnding(bool)void': [poolEnding: boolean]
    'getMBRForPoolCreation()(uint64)': []
    'initStorage(pay)void': [mbrPayment: AppMethodCallTransactionArgument]
    'injectRewards(axfer,uint64,uint64)void': [rewardTxn: AppMethodCallTransactionArgument, quantity: bigint | number, rewardAssetId: bigint | number]
    'injectxUSD(axfer,uint64)void': [xUsdTxn: AppMethodCallTransactionArgument, quantity: bigint | number]
    'deleteApplication()void': []
    'stake(axfer,uint64)void': [stakeTxn: AppMethodCallTransactionArgument, quantity: bigint | number]
    'accrueRewards()void': []
    'claimRewards()void': []
    'unstake(uint64)void': [quantity: bigint | number]
    'setFreeze(bool)void': [enabled: boolean]
    'gas()void': []
  }
}

/**
 * The return type for each method
 */
export type PermissionlessInjectedRewardsPoolReturns = {
  'createApplication(address,address,address)void': void
  'initApplication(uint64,uint64,uint64,uint64)void': void
  'updateAdminAddress(address)void': void
  'setPoolActive()void': void
  'setPoolEnding()void': void
  'updateInjectedASARewards(uint64)void': void
  'updatePaidASARewards(uint64)void': void
  'updateInjectedxUSDRewards(uint64)void': void
  'updateTreasuryAddress(address)void': void
  'updateInjectorAddress(address)void': void
  'updateNumStakers(uint64)void': void
  'updateFreeze(bool)void': void
  'updatePoolEnding(bool)void': void
  'getMBRForPoolCreation()(uint64)': MbrReturn
  'initStorage(pay)void': void
  'injectRewards(axfer,uint64,uint64)void': void
  'injectxUSD(axfer,uint64)void': void
  'deleteApplication()void': void
  'stake(axfer,uint64)void': void
  'accrueRewards()void': void
  'claimRewards()void': void
  'unstake(uint64)void': void
  'setFreeze(bool)void': void
  'gas()void': void
}

/**
 * Defines the types of available calls and state of the PermissionlessInjectedRewardsPool smart contract.
 */
export type PermissionlessInjectedRewardsPoolTypes = {
  /**
   * Maps method signatures / names to their argument and return types.
   */
  methods:
    & Record<'createApplication(address,address,address)void' | 'createApplication', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['createApplication(address,address,address)void']
    }>
    & Record<'initApplication(uint64,uint64,uint64,uint64)void' | 'initApplication', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64,uint64)void']
    }>
    & Record<'updateAdminAddress(address)void' | 'updateAdminAddress', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateAdminAddress(address)void']
    }>
    & Record<'setPoolActive()void' | 'setPoolActive', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']
      returns: PermissionlessInjectedRewardsPoolReturns['setPoolActive()void']
    }>
    & Record<'setPoolEnding()void' | 'setPoolEnding', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']
      returns: PermissionlessInjectedRewardsPoolReturns['setPoolEnding()void']
    }>
    & Record<'updateInjectedASARewards(uint64)void' | 'updateInjectedASARewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateInjectedASARewards(uint64)void']
    }>
    & Record<'updatePaidASARewards(uint64)void' | 'updatePaidASARewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updatePaidASARewards(uint64)void']
    }>
    & Record<'updateInjectedxUSDRewards(uint64)void' | 'updateInjectedxUSDRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateInjectedxUSDRewards(uint64)void']
    }>
    & Record<'updateTreasuryAddress(address)void' | 'updateTreasuryAddress', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateTreasuryAddress(address)void']
    }>
    & Record<'updateInjectorAddress(address)void' | 'updateInjectorAddress', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateInjectorAddress(address)void']
    }>
    & Record<'updateNumStakers(uint64)void' | 'updateNumStakers', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateNumStakers(uint64)void']
    }>
    & Record<'updateFreeze(bool)void' | 'updateFreeze', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updateFreeze(bool)void']
    }>
    & Record<'updatePoolEnding(bool)void' | 'updatePoolEnding', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']
      returns: PermissionlessInjectedRewardsPoolReturns['updatePoolEnding(bool)void']
    }>
    & Record<'getMBRForPoolCreation()(uint64)' | 'getMBRForPoolCreation', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']
      returns: PermissionlessInjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)']
    }>
    & Record<'initStorage(pay)void' | 'initStorage', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']
      returns: PermissionlessInjectedRewardsPoolReturns['initStorage(pay)void']
    }>
    & Record<'injectRewards(axfer,uint64,uint64)void' | 'injectRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void']
    }>
    & Record<'injectxUSD(axfer,uint64)void' | 'injectxUSD', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['injectxUSD(axfer,uint64)void']
    }>
    & Record<'deleteApplication()void' | 'deleteApplication', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']
      returns: PermissionlessInjectedRewardsPoolReturns['deleteApplication()void']
    }>
    & Record<'stake(axfer,uint64)void' | 'stake', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['stake(axfer,uint64)void']
    }>
    & Record<'accrueRewards()void' | 'accrueRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']
      returns: PermissionlessInjectedRewardsPoolReturns['accrueRewards()void']
    }>
    & Record<'claimRewards()void' | 'claimRewards', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']
      returns: PermissionlessInjectedRewardsPoolReturns['claimRewards()void']
    }>
    & Record<'unstake(uint64)void' | 'unstake', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']
      returns: PermissionlessInjectedRewardsPoolReturns['unstake(uint64)void']
    }>
    & Record<'setFreeze(bool)void' | 'setFreeze', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']
      returns: PermissionlessInjectedRewardsPoolReturns['setFreeze(bool)void']
    }>
    & Record<'gas()void' | 'gas', {
      argsObj: PermissionlessInjectedRewardsPoolArgs['obj']['gas()void']
      argsTuple: PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']
      returns: PermissionlessInjectedRewardsPoolReturns['gas()void']
    }>
  /**
   * Defines the shape of the state of the application.
   */
  state: {
    global: {
      keys: {
        stakedAssetId: bigint
        rewardAssetId: bigint
        xUsdAssetId: bigint
        totalStaked: bigint
        injectedAsaRewards: bigint
        paidAsaRewards: bigint
        injectedxUsdRewards: bigint
        adminAddress: string
        treasuryAddress: string
        injectorAddress: string
        minimumBalance: bigint
        numStakers: bigint
        freeze: boolean
        poolActive: boolean
        poolEnding: boolean
        lastInjectionTime: bigint
        contractVersion: bigint
        platformFeeBps: bigint
        paidPlatformFees: bigint
      }
      maps: {}
    }
    box: {
      keys: {
        stakers: [[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]]
      }
      maps: {}
    }
  }
}

/**
 * Defines the possible abi call signatures.
 */
export type PermissionlessInjectedRewardsPoolSignatures = keyof PermissionlessInjectedRewardsPoolTypes['methods']
/**
 * Defines the possible abi call signatures for methods that return a non-void value.
 */
export type PermissionlessInjectedRewardsPoolNonVoidMethodSignatures = keyof PermissionlessInjectedRewardsPoolTypes['methods'] extends infer T ? T extends keyof PermissionlessInjectedRewardsPoolTypes['methods'] ? MethodReturn<T> extends void ? never : T  : never : never
/**
 * Defines an object containing all relevant parameters for a single call to the contract.
 */
export type CallParams<TArgs> = Expand<
  Omit<AppClientMethodCallParams, 'method' | 'args' | 'onComplete'> &
    {
      /** The args for the ABI method call, either as an ordered array or an object */
      args: Expand<TArgs>
    }
>
/**
 * Maps a method signature from the PermissionlessInjectedRewardsPool smart contract to the method's arguments in either tuple or struct form
 */
export type MethodArgs<TSignature extends PermissionlessInjectedRewardsPoolSignatures> = PermissionlessInjectedRewardsPoolTypes['methods'][TSignature]['argsObj' | 'argsTuple']
/**
 * Maps a method signature from the PermissionlessInjectedRewardsPool smart contract to the method's return type
 */
export type MethodReturn<TSignature extends PermissionlessInjectedRewardsPoolSignatures> = PermissionlessInjectedRewardsPoolTypes['methods'][TSignature]['returns']

/**
 * Defines the shape of the keyed global state of the application.
 */
export type GlobalKeysState = PermissionlessInjectedRewardsPoolTypes['state']['global']['keys']

/**
 * Defines the shape of the keyed box state of the application.
 */
export type BoxKeysState = PermissionlessInjectedRewardsPoolTypes['state']['box']['keys']


/**
 * Defines supported create method params for this smart contract
 */
export type PermissionlessInjectedRewardsPoolCreateCallParams =
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & {method: 'createApplication'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & {method: 'createApplication(address,address,address)void'} & {onComplete?: OnApplicationComplete.NoOpOC} & CreateSchema>
/**
 * Defines supported delete method params for this smart contract
 */
export type PermissionlessInjectedRewardsPoolDeleteCallParams =
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication'}>
  | Expand<CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & {method: 'deleteApplication()void'}>
/**
 * Defines arguments required for the deploy method.
 */
export type PermissionlessInjectedRewardsPoolDeployParams = Expand<Omit<AppFactoryDeployParams, 'createParams' | 'updateParams' | 'deleteParams'> & {
  /**
   * Create transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  createParams?: PermissionlessInjectedRewardsPoolCreateCallParams
  /**
   * Delete transaction parameters to use if a create needs to be issued as part of deployment; use `method` to define ABI call (if available) or leave out for a bare call (if available)
   */
  deleteParams?: PermissionlessInjectedRewardsPoolDeleteCallParams
}>


/**
 * Exposes methods for constructing `AppClient` params objects for ABI calls to the PermissionlessInjectedRewardsPool smart contract
 */
export abstract class PermissionlessInjectedRewardsPoolParamsFactory {
  /**
   * Gets available create ABI call param factories
   */
  static get create() {
    return {
      _resolveByMethod<TParams extends PermissionlessInjectedRewardsPoolCreateCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'createApplication':
          case 'createApplication(address,address,address)void':
            return PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs create ABI call params for the PermissionlessInjectedRewardsPool smart contract using the createApplication(address,address,address)void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      createApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC}): AppClientMethodCallParams & AppClientCompilationParams & {onComplete?: OnApplicationComplete.NoOpOC} {
        return {
          ...params,
          method: 'createApplication(address,address,address)void' as const,
          args: Array.isArray(params.args) ? params.args : [params.args.adminAddress, params.args.treasuryAddress, params.args.injectorAddress],
        }
      },
    }
  }

  /**
   * Gets available delete ABI call param factories
   */
  static get delete() {
    return {
      _resolveByMethod<TParams extends PermissionlessInjectedRewardsPoolDeleteCallParams & {method: string}>(params: TParams) {
        switch(params.method) {
          case 'deleteApplication':
          case 'deleteApplication()void':
            return PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params)
        }
        throw new Error(`Unknown ' + verb + ' method`)
      },

      /**
       * Constructs delete ABI call params for the PermissionlessInjectedRewardsPool smart contract using the deleteApplication()void ABI method
       *
       * @param params Parameters for the call
       * @returns An `AppClientMethodCallParams` object for the call
       */
      deleteApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): AppClientMethodCallParams {
        return {
          ...params,
          method: 'deleteApplication()void' as const,
          args: Array.isArray(params.args) ? params.args : [],
        }
      },
    }
  }

  /**
   * Constructs a no op call for the initApplication(uint64,uint64,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initApplication(uint64,uint64,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakedAsset, params.args.rewardAssetId, params.args.xUsdAssetId, params.args.platformFeeBps],
    }
  }
  /**
   * Constructs a no op call for the updateAdminAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateAdminAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateAdminAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.adminAddress],
    }
  }
  /**
   * Constructs a no op call for the setPoolActive()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setPoolActive(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setPoolActive()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the setPoolEnding()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setPoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setPoolEnding()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the updateInjectedASARewards(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateInjectedAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateInjectedASARewards(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.injectedAsaRewards],
    }
  }
  /**
   * Constructs a no op call for the updatePaidASARewards(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updatePaidAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updatePaidASARewards(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.paidAsaRewards],
    }
  }
  /**
   * Constructs a no op call for the updateInjectedxUSDRewards(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateInjectedxUsdRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateInjectedxUSDRewards(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.injectedxUsdRewards],
    }
  }
  /**
   * Constructs a no op call for the updateTreasuryAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateTreasuryAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateTreasuryAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.treasuryAddress],
    }
  }
  /**
   * Constructs a no op call for the updateInjectorAddress(address)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateInjectorAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateInjectorAddress(address)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.injectorAddress],
    }
  }
  /**
   * Constructs a no op call for the updateNumStakers(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateNumStakers(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateNumStakers(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.numStakers],
    }
  }
  /**
   * Constructs a no op call for the updateFreeze(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updateFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updateFreeze(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.freeze],
    }
  }
  /**
   * Constructs a no op call for the updatePoolEnding(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static updatePoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'updatePoolEnding(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.poolEnding],
    }
  }
  /**
   * Constructs a no op call for the getMBRForPoolCreation()(uint64) ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static getMbrForPoolCreation(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'getMBRForPoolCreation()(uint64)' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the initStorage(pay)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static initStorage(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'initStorage(pay)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.mbrPayment],
    }
  }
  /**
   * Constructs a no op call for the injectRewards(axfer,uint64,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static injectRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'injectRewards(axfer,uint64,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.rewardTxn, params.args.quantity, params.args.rewardAssetId],
    }
  }
  /**
   * Constructs a no op call for the injectxUSD(axfer,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static injectxUsd(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'injectxUSD(axfer,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.xUsdTxn, params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the stake(axfer,uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static stake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'stake(axfer,uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.stakeTxn, params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the accrueRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static accrueRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'accrueRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the claimRewards()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static claimRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'claimRewards()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
  /**
   * Constructs a no op call for the unstake(uint64)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static unstake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'unstake(uint64)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.quantity],
    }
  }
  /**
   * Constructs a no op call for the setFreeze(bool)void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static setFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'setFreeze(bool)void' as const,
      args: Array.isArray(params.args) ? params.args : [params.args.enabled],
    }
  }
  /**
   * Constructs a no op call for the gas()void ABI method
   *
   * @param params Parameters for the call
   * @returns An `AppClientMethodCallParams` object for the call
   */
  static gas(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & CallOnComplete): AppClientMethodCallParams & CallOnComplete {
    return {
      ...params,
      method: 'gas()void' as const,
      args: Array.isArray(params.args) ? params.args : [],
    }
  }
}

/**
 * A factory to create and deploy one or more instance of the PermissionlessInjectedRewardsPool smart contract and to create one or more app clients to interact with those (or other) app instances
 */
export class PermissionlessInjectedRewardsPoolFactory {
  /**
   * The underlying `AppFactory` for when you want to have more flexibility
   */
  public readonly appFactory: _AppFactory

  /**
   * Creates a new instance of `PermissionlessInjectedRewardsPoolFactory`
   *
   * @param params The parameters to initialise the app factory with
   */
  constructor(params: Omit<AppFactoryParams, 'appSpec'>) {
    this.appFactory = new _AppFactory({
      ...params,
      appSpec: APP_SPEC,
    })
  }
  
  /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */
  public get appName() {
    return this.appFactory.appName
  }
  
  /** The ARC-56 app spec being used */
  get appSpec() {
    return APP_SPEC
  }
  
  /** A reference to the underlying `AlgorandClient` this app factory is using. */
  public get algorand(): AlgorandClient {
    return this.appFactory.algorand
  }
  
  /**
   * Returns a new `AppClient` client for an app instance of the given ID.
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public getAppClientById(params: AppFactoryAppClientParams) {
    return new PermissionlessInjectedRewardsPoolClient(this.appFactory.getAppClientById(params))
  }
  
  /**
   * Returns a new `AppClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   *
   * Automatically populates appName, defaultSender and source maps from the factory
   * if not specified in the params.
   * @param params The parameters to create the app client
   * @returns The `AppClient`
   */
  public async getAppClientByCreatorAndName(
    params: AppFactoryResolveAppClientByCreatorAndNameParams,
  ) {
    return new PermissionlessInjectedRewardsPoolClient(await this.appFactory.getAppClientByCreatorAndName(params))
  }

  /**
   * Idempotently deploys the PermissionlessInjectedRewardsPool smart contract.
   *
   * @param params The arguments for the contract calls and any additional parameters for the call
   * @returns The deployment result
   */
  public async deploy(params: PermissionlessInjectedRewardsPoolDeployParams = {}) {
    const result = await this.appFactory.deploy({
      ...params,
      createParams: params.createParams?.method ? PermissionlessInjectedRewardsPoolParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (PermissionlessInjectedRewardsPoolCreateCallParams & { args: Uint8Array[] }) : undefined,
      deleteParams: params.deleteParams?.method ? PermissionlessInjectedRewardsPoolParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (PermissionlessInjectedRewardsPoolDeleteCallParams & { args: Uint8Array[] }) : undefined,
    })
    return { result: result.result, appClient: new PermissionlessInjectedRewardsPoolClient(result.appClient) }
  }

  /**
   * Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the PermissionlessInjectedRewardsPool smart contract using the createApplication(address,address,address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create params
       */
      createApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.params.create(PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

    /**
     * Gets available deployDelete methods
     */
    deployDelete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the deleteApplication()void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The deployDelete params
       */
      deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appFactory.params.deployDelete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the PermissionlessInjectedRewardsPool smart contract using the createApplication(address,address,address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create transaction
       */
      createApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & CreateSchema & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        return this.appFactory.createTransaction.create(PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params))
      },
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available create methods
     */
    create: {
      /**
       * Creates a new instance of the PermissionlessInjectedRewardsPool smart contract using an ABI method call using the createApplication(address,address,address)void ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The create result
       */
      createApplication: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['createApplication(address,address,address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['createApplication(address,address,address)void']> & AppClientCompilationParams & CreateSchema & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
        const result = await this.appFactory.send.create(PermissionlessInjectedRewardsPoolParamsFactory.create.createApplication(params))
        return { result: { ...result.result, return: result.result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['createApplication(address,address,address)void']) }, appClient: new PermissionlessInjectedRewardsPoolClient(result.appClient) }
      },
    },

  }

}
/**
 * A client to make calls to the PermissionlessInjectedRewardsPool smart contract
 */
export class PermissionlessInjectedRewardsPoolClient {
  /**
   * The underlying `AppClient` for when you want to have more flexibility
   */
  public readonly appClient: _AppClient

  /**
   * Creates a new instance of `PermissionlessInjectedRewardsPoolClient`
   *
   * @param appClient An `AppClient` instance which has been created with the PermissionlessInjectedRewardsPool app spec
   */
  constructor(appClient: _AppClient)
  /**
   * Creates a new instance of `PermissionlessInjectedRewardsPoolClient`
   *
   * @param params The parameters to initialise the app client with
   */
  constructor(params: Omit<AppClientParams, 'appSpec'>)
  constructor(appClientOrParams: _AppClient | Omit<AppClientParams, 'appSpec'>) {
    this.appClient = appClientOrParams instanceof _AppClient ? appClientOrParams : new _AppClient({
      ...appClientOrParams,
      appSpec: APP_SPEC,
    })
  }
  
  /**
   * Checks for decode errors on the given return value and maps the return value to the return type for the given method
   * @returns The typed return value or undefined if there was no value
   */
  decodeReturnValue<TSignature extends PermissionlessInjectedRewardsPoolNonVoidMethodSignatures>(method: TSignature, returnValue: ABIReturn | undefined) {
    return returnValue !== undefined ? getArc56ReturnValue<MethodReturn<TSignature>>(returnValue, this.appClient.getABIMethod(method), APP_SPEC.structs) : undefined
  }
  
  /**
   * Returns a new `PermissionlessInjectedRewardsPoolClient` client, resolving the app by creator address and name
   * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).
   * @param params The parameters to create the app client
   */
  public static async fromCreatorAndName(params: Omit<ResolveAppClientByCreatorAndName, 'appSpec'>): Promise<PermissionlessInjectedRewardsPoolClient> {
    return new PermissionlessInjectedRewardsPoolClient(await _AppClient.fromCreatorAndName({...params, appSpec: APP_SPEC}))
  }
  
  /**
   * Returns an `PermissionlessInjectedRewardsPoolClient` instance for the current network based on
   * pre-determined network-specific app IDs specified in the ARC-56 app spec.
   *
   * If no IDs are in the app spec or the network isn't recognised, an error is thrown.
   * @param params The parameters to create the app client
   */
  static async fromNetwork(
    params: Omit<ResolveAppClientByNetwork, 'appSpec'>
  ): Promise<PermissionlessInjectedRewardsPoolClient> {
    return new PermissionlessInjectedRewardsPoolClient(await _AppClient.fromNetwork({...params, appSpec: APP_SPEC}))
  }
  
  /** The ID of the app instance this client is linked to. */
  public get appId() {
    return this.appClient.appId
  }
  
  /** The app address of the app instance this client is linked to. */
  public get appAddress() {
    return this.appClient.appAddress
  }
  
  /** The name of the app. */
  public get appName() {
    return this.appClient.appName
  }
  
  /** The ARC-56 app spec being used */
  public get appSpec() {
    return this.appClient.appSpec
  }
  
  /** A reference to the underlying `AlgorandClient` this app client is using. */
  public get algorand(): AlgorandClient {
    return this.appClient.algorand
  }

  /**
   * Get parameters to create transactions for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.
   */
  readonly params = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete params
       */
      deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.params.delete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.params.bare.clearState(params)
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateAdminAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolActive()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setPoolActive: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolActive(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolEnding()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setPoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateInjectedAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePaidASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updatePaidAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePaidAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedxUSDRewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateInjectedxUsdRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedxUsdRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateTreasuryAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateTreasuryAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateTreasuryAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectorAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateInjectorAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectorAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateNumStakers(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateNumStakers: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateNumStakers(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updateFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updateFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePoolEnding(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    updatePoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    getMbrForPoolCreation: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    initStorage: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    injectRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectxUSD(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    injectxUsd: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.injectxUsd(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    stake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    accrueRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    claimRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    unstake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    setFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.setFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call params
     */
    gas: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.params.call(PermissionlessInjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Create transactions for the current app
   */
  readonly createTransaction = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete transaction
       */
      deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> = {args: []}) => {
        return this.appClient.createTransaction.delete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams>) => {
      return this.appClient.createTransaction.bare.clearState(params)
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.initApplication(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateAdminAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateAdminAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolActive()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setPoolActive: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolActive(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolEnding()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setPoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateInjectedAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePaidASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updatePaidAsaRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePaidAsaRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedxUSDRewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateInjectedxUsdRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedxUsdRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateTreasuryAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateTreasuryAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateTreasuryAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectorAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateInjectorAddress: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectorAddress(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateNumStakers(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateNumStakers: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateNumStakers(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updateFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updateFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePoolEnding(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    updatePoolEnding: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePoolEnding(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    getMbrForPoolCreation: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    initStorage: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.initStorage(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    injectRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.injectRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectxUSD(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    injectxUsd: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.injectxUsd(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    stake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.stake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    accrueRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.accrueRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    claimRewards: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.claimRewards(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    unstake: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.unstake(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    setFreeze: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.setFreeze(params))
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call transaction
     */
    gas: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      return this.appClient.createTransaction.call(PermissionlessInjectedRewardsPoolParamsFactory.gas(params))
    },

  }

  /**
   * Send calls to the current app
   */
  readonly send = {
    /**
     * Gets available delete methods
     */
    delete: {
      /**
       * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the `deleteApplication()void` ABI method.
       *
       * @param params The params for the smart contract call
       * @returns The delete result
       */
      deleteApplication: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']> & SendParams = {args: []}) => {
        const result = await this.appClient.send.delete(PermissionlessInjectedRewardsPoolParamsFactory.delete.deleteApplication(params))
        return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['deleteApplication()void'])}
      },

    },

    /**
     * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
     *
     * @param params The params for the bare (raw) call
     * @returns The clearState result
     */
    clearState: (params?: Expand<AppClientBareCallParams & SendParams>) => {
      return this.appClient.send.bare.clearState(params)
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initApplication(uint64,uint64,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initApplication: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.initApplication(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateAdminAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateAdminAddress: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateAdminAddress(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateAdminAddress(address)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolActive()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setPoolActive: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolActive(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setPoolActive()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setPoolEnding()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setPoolEnding: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setPoolEnding(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setPoolEnding()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateInjectedAsaRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedAsaRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateInjectedASARewards(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePaidASARewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updatePaidAsaRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePaidAsaRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updatePaidASARewards(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectedxUSDRewards(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateInjectedxUsdRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectedxUsdRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateInjectedxUSDRewards(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateTreasuryAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateTreasuryAddress: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateTreasuryAddress(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateTreasuryAddress(address)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateInjectorAddress(address)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateInjectorAddress: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateInjectorAddress(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateInjectorAddress(address)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateNumStakers(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateNumStakers: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateNumStakers(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateNumStakers(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updateFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updateFreeze: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updateFreeze(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updateFreeze(bool)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `updatePoolEnding(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    updatePoolEnding: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.updatePoolEnding(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['updatePoolEnding(bool)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `getMBRForPoolCreation()(uint64)` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    getMbrForPoolCreation: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.getMbrForPoolCreation(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `initStorage(pay)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    initStorage: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.initStorage(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['initStorage(pay)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectRewards(axfer,uint64,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    injectRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.injectRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `injectxUSD(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    injectxUsd: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.injectxUsd(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['injectxUSD(axfer,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `stake(axfer,uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    stake: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.stake(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['stake(axfer,uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `accrueRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    accrueRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.accrueRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['accrueRewards()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `claimRewards()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    claimRewards: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.claimRewards(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['claimRewards()void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `unstake(uint64)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    unstake: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.unstake(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['unstake(uint64)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `setFreeze(bool)void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    setFreeze: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.setFreeze(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['setFreeze(bool)void'])}
    },

    /**
     * Makes a call to the PermissionlessInjectedRewardsPool smart contract using the `gas()void` ABI method.
     *
     * @param params The params for the smart contract call
     * @returns The call result
     */
    gas: async (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & SendParams & {onComplete?: OnApplicationComplete.NoOpOC} = {args: []}) => {
      const result = await this.appClient.send.call(PermissionlessInjectedRewardsPoolParamsFactory.gas(params))
      return {...result, return: result.return as unknown as (undefined | PermissionlessInjectedRewardsPoolReturns['gas()void'])}
    },

  }

  /**
   * Clone this app client with different params
   *
   * @param params The params to use for the the cloned app client. Omit a param to keep the original value. Set a param to override the original value. Setting to undefined will clear the original value.
   * @returns A new app client with the altered params
   */
  public clone(params: CloneAppClientParams) {
    return new PermissionlessInjectedRewardsPoolClient(this.appClient.clone(params))
  }

  /**
   * Methods to access state for the current PermissionlessInjectedRewardsPool app
   */
  state = {
    /**
     * Methods to access global state for the current PermissionlessInjectedRewardsPool app
     */
    global: {
      /**
       * Get all current keyed values from global state
       */
      getAll: async (): Promise<Partial<Expand<GlobalKeysState>>> => {
        const result = await this.appClient.state.global.getAll()
        return {
          stakedAssetId: result.stakedAssetId,
          rewardAssetId: result.rewardAssetId,
          xUsdAssetId: result.xUSDAssetId,
          totalStaked: result.totalStaked,
          injectedAsaRewards: result.injectedASARewards,
          paidAsaRewards: result.paidASARewards,
          injectedxUsdRewards: result.injectedxUSDRewards,
          adminAddress: result.adminAddress,
          treasuryAddress: result.treasuryAddress,
          injectorAddress: result.injectorAddress,
          minimumBalance: result.minimumBalance,
          numStakers: result.numStakers,
          freeze: result.freeze,
          poolActive: result.poolActive,
          poolEnding: result.poolEnding,
          lastInjectionTime: result.lastInjectionTime,
          contractVersion: result.contractVersion,
          platformFeeBps: result.platformFeeBps,
          paidPlatformFees: result.paidPlatformFees,
        }
      },
      /**
       * Get the current value of the stakedAssetId key in global state
       */
      stakedAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("stakedAssetId")) as bigint | undefined },
      /**
       * Get the current value of the rewardAssetId key in global state
       */
      rewardAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("rewardAssetId")) as bigint | undefined },
      /**
       * Get the current value of the xUSDAssetId key in global state
       */
      xUsdAssetId: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("xUSDAssetId")) as bigint | undefined },
      /**
       * Get the current value of the totalStaked key in global state
       */
      totalStaked: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("totalStaked")) as bigint | undefined },
      /**
       * Get the current value of the injectedASARewards key in global state
       */
      injectedAsaRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("injectedASARewards")) as bigint | undefined },
      /**
       * Get the current value of the paidASARewards key in global state
       */
      paidAsaRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("paidASARewards")) as bigint | undefined },
      /**
       * Get the current value of the injectedxUSDRewards key in global state
       */
      injectedxUsdRewards: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("injectedxUSDRewards")) as bigint | undefined },
      /**
       * Get the current value of the adminAddress key in global state
       */
      adminAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("adminAddress")) as string | undefined },
      /**
       * Get the current value of the treasuryAddress key in global state
       */
      treasuryAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("treasuryAddress")) as string | undefined },
      /**
       * Get the current value of the injectorAddress key in global state
       */
      injectorAddress: async (): Promise<string | undefined> => { return (await this.appClient.state.global.getValue("injectorAddress")) as string | undefined },
      /**
       * Get the current value of the minimumBalance key in global state
       */
      minimumBalance: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("minimumBalance")) as bigint | undefined },
      /**
       * Get the current value of the numStakers key in global state
       */
      numStakers: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("numStakers")) as bigint | undefined },
      /**
       * Get the current value of the freeze key in global state
       */
      freeze: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("freeze")) as boolean | undefined },
      /**
       * Get the current value of the poolActive key in global state
       */
      poolActive: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("poolActive")) as boolean | undefined },
      /**
       * Get the current value of the poolEnding key in global state
       */
      poolEnding: async (): Promise<boolean | undefined> => { return (await this.appClient.state.global.getValue("poolEnding")) as boolean | undefined },
      /**
       * Get the current value of the lastInjectionTime key in global state
       */
      lastInjectionTime: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("lastInjectionTime")) as bigint | undefined },
      /**
       * Get the current value of the contractVersion key in global state
       */
      contractVersion: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("contractVersion")) as bigint | undefined },
      /**
       * Get the current value of the platformFeeBps key in global state
       */
      platformFeeBps: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("platformFeeBps")) as bigint | undefined },
      /**
       * Get the current value of the paidPlatformFees key in global state
       */
      paidPlatformFees: async (): Promise<bigint | undefined> => { return (await this.appClient.state.global.getValue("paidPlatformFees")) as bigint | undefined },
    },
    /**
     * Methods to access box state for the current PermissionlessInjectedRewardsPool app
     */
    box: {
      /**
       * Get all current keyed values from box state
       */
      getAll: async (): Promise<Partial<Expand<BoxKeysState>>> => {
        const result = await this.appClient.state.box.getAll()
        return {
          stakers: result.stakers,
        }
      },
      /**
       * Get the current value of the stakers key in box state
       */
      stakers: async (): Promise<[[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]] | undefined> => { return (await this.appClient.state.box.getValue("stakers")) as [[string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint], [string, bigint, bigint, bigint]] | undefined },
    },
  }

  public newGroup(): PermissionlessInjectedRewardsPoolComposer {
    const client = this
    const composer = this.algorand.newGroup()
    let promiseChain:Promise<unknown> = Promise.resolve()
    const resultMappers: Array<undefined | ((x: ABIReturn | undefined) => any)> = []
    return {
      /**
       * Add a initApplication(uint64,uint64,uint64,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      initApplication(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initApplication(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateAdminAddress(address)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateAdminAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateAdminAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setPoolActive()void method call against the PermissionlessInjectedRewardsPool contract
       */
      setPoolActive(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setPoolActive(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setPoolEnding()void method call against the PermissionlessInjectedRewardsPool contract
       */
      setPoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setPoolEnding(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateInjectedASARewards(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateInjectedAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateInjectedAsaRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updatePaidASARewards(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updatePaidAsaRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updatePaidAsaRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateInjectedxUSDRewards(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateInjectedxUsdRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateInjectedxUsdRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateTreasuryAddress(address)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateTreasuryAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateTreasuryAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateInjectorAddress(address)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateInjectorAddress(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateInjectorAddress(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateNumStakers(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateNumStakers(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateNumStakers(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updateFreeze(bool)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updateFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updateFreeze(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a updatePoolEnding(bool)void method call against the PermissionlessInjectedRewardsPool contract
       */
      updatePoolEnding(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.updatePoolEnding(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a getMBRForPoolCreation()(uint64) method call against the PermissionlessInjectedRewardsPool contract
       */
      getMbrForPoolCreation(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.getMbrForPoolCreation(params)))
        resultMappers.push((v) => client.decodeReturnValue('getMBRForPoolCreation()(uint64)', v))
        return this
      },
      /**
       * Add a initStorage(pay)void method call against the PermissionlessInjectedRewardsPool contract
       */
      initStorage(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.initStorage(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a injectRewards(axfer,uint64,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      injectRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.injectRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a injectxUSD(axfer,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      injectxUsd(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.injectxUsd(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a stake(axfer,uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      stake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.stake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a accrueRewards()void method call against the PermissionlessInjectedRewardsPool contract
       */
      accrueRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.accrueRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a claimRewards()void method call against the PermissionlessInjectedRewardsPool contract
       */
      claimRewards(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.claimRewards(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a unstake(uint64)void method call against the PermissionlessInjectedRewardsPool contract
       */
      unstake(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.unstake(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a setFreeze(bool)void method call against the PermissionlessInjectedRewardsPool contract
       */
      setFreeze(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.setFreeze(params)))
        resultMappers.push(undefined)
        return this
      },
      /**
       * Add a gas()void method call against the PermissionlessInjectedRewardsPool contract
       */
      gas(params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']> & {onComplete?: OnApplicationComplete.NoOpOC}) {
        promiseChain = promiseChain.then(async () => composer.addAppCallMethodCall(await client.params.gas(params)))
        resultMappers.push(undefined)
        return this
      },
      get delete() {
        return {
          deleteApplication: (params: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']>) => {
            promiseChain = promiseChain.then(async () => composer.addAppDeleteMethodCall(await client.params.delete.deleteApplication(params)))
            resultMappers.push(undefined)
            return this
          },
        }
      },
      /**
       * Add a clear state call to the PermissionlessInjectedRewardsPool contract
       */
      clearState(params: AppClientBareCallParams) {
        promiseChain = promiseChain.then(() => composer.addAppCall(client.params.clearState(params)))
        return this
      },
      addTransaction(txn: Transaction, signer?: TransactionSigner) {
        promiseChain = promiseChain.then(() => composer.addTransaction(txn, signer))
        return this
      },
      async composer() {
        await promiseChain
        return composer
      },
      async simulate(options?: SimulateOptions) {
        await promiseChain
        const result = await (!options ? composer.simulate() : composer.simulate(options))
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      },
      async send(params?: SendParams) {
        await promiseChain
        const result = await composer.send(params)
        return {
          ...result,
          returns: result.returns?.map((val, i) => resultMappers[i] !== undefined ? resultMappers[i]!(val) : val.returnValue)
        }
      }
    } as unknown as PermissionlessInjectedRewardsPoolComposer
  }
}
export type PermissionlessInjectedRewardsPoolComposer<TReturns extends [...any[]] = []> = {
  /**
   * Calls the initApplication(uint64,uint64,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initApplication(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initApplication(uint64,uint64,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initApplication(uint64,uint64,uint64,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['initApplication(uint64,uint64,uint64,uint64)void'] | undefined]>

  /**
   * Calls the updateAdminAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateAdminAddress(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateAdminAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateAdminAddress(address)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateAdminAddress(address)void'] | undefined]>

  /**
   * Calls the setPoolActive()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setPoolActive(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolActive()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolActive()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setPoolActive()void'] | undefined]>

  /**
   * Calls the setPoolEnding()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setPoolEnding(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setPoolEnding()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setPoolEnding()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setPoolEnding()void'] | undefined]>

  /**
   * Calls the updateInjectedASARewards(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateInjectedAsaRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedASARewards(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateInjectedASARewards(uint64)void'] | undefined]>

  /**
   * Calls the updatePaidASARewards(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updatePaidAsaRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePaidASARewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePaidASARewards(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updatePaidASARewards(uint64)void'] | undefined]>

  /**
   * Calls the updateInjectedxUSDRewards(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateInjectedxUsdRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectedxUSDRewards(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectedxUSDRewards(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateInjectedxUSDRewards(uint64)void'] | undefined]>

  /**
   * Calls the updateTreasuryAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateTreasuryAddress(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateTreasuryAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateTreasuryAddress(address)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateTreasuryAddress(address)void'] | undefined]>

  /**
   * Calls the updateInjectorAddress(address)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateInjectorAddress(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateInjectorAddress(address)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateInjectorAddress(address)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateInjectorAddress(address)void'] | undefined]>

  /**
   * Calls the updateNumStakers(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateNumStakers(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateNumStakers(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateNumStakers(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateNumStakers(uint64)void'] | undefined]>

  /**
   * Calls the updateFreeze(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updateFreeze(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updateFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updateFreeze(bool)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updateFreeze(bool)void'] | undefined]>

  /**
   * Calls the updatePoolEnding(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  updatePoolEnding(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['updatePoolEnding(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['updatePoolEnding(bool)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['updatePoolEnding(bool)void'] | undefined]>

  /**
   * Calls the getMBRForPoolCreation()(uint64) ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  getMbrForPoolCreation(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['getMBRForPoolCreation()(uint64)'] | PermissionlessInjectedRewardsPoolArgs['tuple']['getMBRForPoolCreation()(uint64)']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['getMBRForPoolCreation()(uint64)'] | undefined]>

  /**
   * Calls the initStorage(pay)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  initStorage(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['initStorage(pay)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['initStorage(pay)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['initStorage(pay)void'] | undefined]>

  /**
   * Calls the injectRewards(axfer,uint64,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  injectRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectRewards(axfer,uint64,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectRewards(axfer,uint64,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['injectRewards(axfer,uint64,uint64)void'] | undefined]>

  /**
   * Calls the injectxUSD(axfer,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  injectxUsd(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['injectxUSD(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['injectxUSD(axfer,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['injectxUSD(axfer,uint64)void'] | undefined]>

  /**
   * Calls the stake(axfer,uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  stake(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['stake(axfer,uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['stake(axfer,uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['stake(axfer,uint64)void'] | undefined]>

  /**
   * Calls the accrueRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  accrueRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['accrueRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['accrueRewards()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['accrueRewards()void'] | undefined]>

  /**
   * Calls the claimRewards()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  claimRewards(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['claimRewards()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['claimRewards()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['claimRewards()void'] | undefined]>

  /**
   * Calls the unstake(uint64)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  unstake(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['unstake(uint64)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['unstake(uint64)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['unstake(uint64)void'] | undefined]>

  /**
   * Calls the setFreeze(bool)void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  setFreeze(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['setFreeze(bool)void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['setFreeze(bool)void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['setFreeze(bool)void'] | undefined]>

  /**
   * Calls the gas()void ABI method.
   *
   * @param args The arguments for the contract call
   * @param params Any additional parameters for the call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  gas(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['gas()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['gas()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['gas()void'] | undefined]>

  /**
   * Gets available delete methods
   */
  readonly delete: {
    /**
     * Deletes an existing instance of the PermissionlessInjectedRewardsPool smart contract using the deleteApplication()void ABI method.
     *
     * @param args The arguments for the smart contract call
     * @param params Any additional parameters for the call
     * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
     */
    deleteApplication(params?: CallParams<PermissionlessInjectedRewardsPoolArgs['obj']['deleteApplication()void'] | PermissionlessInjectedRewardsPoolArgs['tuple']['deleteApplication()void']>): PermissionlessInjectedRewardsPoolComposer<[...TReturns, PermissionlessInjectedRewardsPoolReturns['deleteApplication()void'] | undefined]>
  }

  /**
   * Makes a clear_state call to an existing instance of the PermissionlessInjectedRewardsPool smart contract.
   *
   * @param args The arguments for the bare call
   * @returns The typed transaction composer so you can fluently chain multiple calls or call execute to execute all queued up transactions
   */
  clearState(params?: AppClientBareCallParams): PermissionlessInjectedRewardsPoolComposer<[...TReturns, undefined]>

  /**
   * Adds a transaction to the composer
   *
   * @param txn A transaction to add to the transaction group
   * @param signer The optional signer to use when signing this transaction.
   */
  addTransaction(txn: Transaction, signer?: TransactionSigner): PermissionlessInjectedRewardsPoolComposer<TReturns>
  /**
   * Returns the underlying AtomicTransactionComposer instance
   */
  composer(): Promise<TransactionComposer>
  /**
   * Simulates the transaction group and returns the result
   */
  simulate(): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: SkipSignaturesSimulateOptions): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  simulate(options: RawSimulateOptions): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns> & { simulateResponse: SimulateResponse }>
  /**
   * Sends the transaction group to the network and returns the results
   */
  send(params?: SendParams): Promise<PermissionlessInjectedRewardsPoolComposerResults<TReturns>>
}
export type PermissionlessInjectedRewardsPoolComposerResults<TReturns extends [...any[]]> = Expand<SendAtomicTransactionComposerResults & {
  returns: TReturns
}>

